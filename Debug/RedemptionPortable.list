
RedemptionPortable.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c8c4  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004e4  0800ca58  0800ca58  0001ca58  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800cf3c  0800cf3c  000201ec  2**0
                  CONTENTS
  4 .ARM          00000000  0800cf3c  0800cf3c  000201ec  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800cf3c  0800cf3c  000201ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800cf3c  0800cf3c  0001cf3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800cf40  0800cf40  0001cf40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001ec  20000000  0800cf44  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000260  200001f0  0800d130  000201f0  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000450  0800d130  00020450  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201ec  2**0
                  CONTENTS, READONLY
 12 .debug_info   00015be7  00000000  00000000  0002021c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002d5b  00000000  00000000  00035e03  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000014d8  00000000  00000000  00038b60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001380  00000000  00000000  0003a038  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00024a2c  00000000  00000000  0003b3b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00016f32  00000000  00000000  0005fde4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000df8c0  00000000  00000000  00076d16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  001565d6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006ef8  00000000  00000000  00156628  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001f0 	.word	0x200001f0
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800ca3c 	.word	0x0800ca3c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001f4 	.word	0x200001f4
 80001cc:	0800ca3c 	.word	0x0800ca3c

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_d2lz>:
 8000c88:	b538      	push	{r3, r4, r5, lr}
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	4604      	mov	r4, r0
 8000c90:	460d      	mov	r5, r1
 8000c92:	f7ff ff23 	bl	8000adc <__aeabi_dcmplt>
 8000c96:	b928      	cbnz	r0, 8000ca4 <__aeabi_d2lz+0x1c>
 8000c98:	4620      	mov	r0, r4
 8000c9a:	4629      	mov	r1, r5
 8000c9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ca0:	f000 b80a 	b.w	8000cb8 <__aeabi_d2ulz>
 8000ca4:	4620      	mov	r0, r4
 8000ca6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000caa:	f000 f805 	bl	8000cb8 <__aeabi_d2ulz>
 8000cae:	4240      	negs	r0, r0
 8000cb0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cb4:	bd38      	pop	{r3, r4, r5, pc}
 8000cb6:	bf00      	nop

08000cb8 <__aeabi_d2ulz>:
 8000cb8:	b5d0      	push	{r4, r6, r7, lr}
 8000cba:	4b0c      	ldr	r3, [pc, #48]	; (8000cec <__aeabi_d2ulz+0x34>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	4606      	mov	r6, r0
 8000cc0:	460f      	mov	r7, r1
 8000cc2:	f7ff fc99 	bl	80005f8 <__aeabi_dmul>
 8000cc6:	f7ff ff6f 	bl	8000ba8 <__aeabi_d2uiz>
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f7ff fc1a 	bl	8000504 <__aeabi_ui2d>
 8000cd0:	4b07      	ldr	r3, [pc, #28]	; (8000cf0 <__aeabi_d2ulz+0x38>)
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	f7ff fc90 	bl	80005f8 <__aeabi_dmul>
 8000cd8:	4602      	mov	r2, r0
 8000cda:	460b      	mov	r3, r1
 8000cdc:	4630      	mov	r0, r6
 8000cde:	4639      	mov	r1, r7
 8000ce0:	f7ff fad2 	bl	8000288 <__aeabi_dsub>
 8000ce4:	f7ff ff60 	bl	8000ba8 <__aeabi_d2uiz>
 8000ce8:	4621      	mov	r1, r4
 8000cea:	bdd0      	pop	{r4, r6, r7, pc}
 8000cec:	3df00000 	.word	0x3df00000
 8000cf0:	41f00000 	.word	0x41f00000

08000cf4 <BQ_Write>:
};




void BQ_Write(uint8_t reg, uint8_t data) {
 8000cf4:	b580      	push	{r7, lr}
 8000cf6:	b086      	sub	sp, #24
 8000cf8:	af04      	add	r7, sp, #16
 8000cfa:	4603      	mov	r3, r0
 8000cfc:	460a      	mov	r2, r1
 8000cfe:	71fb      	strb	r3, [r7, #7]
 8000d00:	4613      	mov	r3, r2
 8000d02:	71bb      	strb	r3, [r7, #6]

	if ( HAL_I2C_Mem_Write( &hi2c1, BQ_ADDR, reg, I2C_MEMADD_SIZE_8BIT, &data, 1, 10 ) != HAL_OK)
 8000d04:	79fb      	ldrb	r3, [r7, #7]
 8000d06:	b29a      	uxth	r2, r3
 8000d08:	230a      	movs	r3, #10
 8000d0a:	9302      	str	r3, [sp, #8]
 8000d0c:	2301      	movs	r3, #1
 8000d0e:	9301      	str	r3, [sp, #4]
 8000d10:	1dbb      	adds	r3, r7, #6
 8000d12:	9300      	str	r3, [sp, #0]
 8000d14:	2301      	movs	r3, #1
 8000d16:	21d6      	movs	r1, #214	; 0xd6
 8000d18:	4806      	ldr	r0, [pc, #24]	; (8000d34 <BQ_Write+0x40>)
 8000d1a:	f003 feb3 	bl	8004a84 <HAL_I2C_Mem_Write>
 8000d1e:	4603      	mov	r3, r0
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	d002      	beq.n	8000d2a <BQ_Write+0x36>
	{
		GLOBAL_errors = I2CErrorWrite;
 8000d24:	4b04      	ldr	r3, [pc, #16]	; (8000d38 <BQ_Write+0x44>)
 8000d26:	2200      	movs	r2, #0
 8000d28:	701a      	strb	r2, [r3, #0]
	}

}
 8000d2a:	bf00      	nop
 8000d2c:	3708      	adds	r7, #8
 8000d2e:	46bd      	mov	sp, r7
 8000d30:	bd80      	pop	{r7, pc}
 8000d32:	bf00      	nop
 8000d34:	200002f4 	.word	0x200002f4
 8000d38:	2000042c 	.word	0x2000042c

08000d3c <BQ_Read>:

uint8_t BQ_Read(uint8_t reg) {
 8000d3c:	b580      	push	{r7, lr}
 8000d3e:	b088      	sub	sp, #32
 8000d40:	af04      	add	r7, sp, #16
 8000d42:	4603      	mov	r3, r0
 8000d44:	71fb      	strb	r3, [r7, #7]
    unsigned char data;

	if ( HAL_I2C_Mem_Read( &hi2c1, BQ_ADDR, reg, I2C_MEMADD_SIZE_8BIT, &data, 1, 10 ) != HAL_OK)
 8000d46:	79fb      	ldrb	r3, [r7, #7]
 8000d48:	b29a      	uxth	r2, r3
 8000d4a:	230a      	movs	r3, #10
 8000d4c:	9302      	str	r3, [sp, #8]
 8000d4e:	2301      	movs	r3, #1
 8000d50:	9301      	str	r3, [sp, #4]
 8000d52:	f107 030f 	add.w	r3, r7, #15
 8000d56:	9300      	str	r3, [sp, #0]
 8000d58:	2301      	movs	r3, #1
 8000d5a:	21d6      	movs	r1, #214	; 0xd6
 8000d5c:	4806      	ldr	r0, [pc, #24]	; (8000d78 <BQ_Read+0x3c>)
 8000d5e:	f003 ffa5 	bl	8004cac <HAL_I2C_Mem_Read>
 8000d62:	4603      	mov	r3, r0
 8000d64:	2b00      	cmp	r3, #0
 8000d66:	d002      	beq.n	8000d6e <BQ_Read+0x32>
	{
		GLOBAL_errors = I2CErrorRead;
 8000d68:	4b04      	ldr	r3, [pc, #16]	; (8000d7c <BQ_Read+0x40>)
 8000d6a:	2201      	movs	r2, #1
 8000d6c:	701a      	strb	r2, [r3, #0]
	}

    return data;
 8000d6e:	7bfb      	ldrb	r3, [r7, #15]

}
 8000d70:	4618      	mov	r0, r3
 8000d72:	3710      	adds	r7, #16
 8000d74:	46bd      	mov	sp, r7
 8000d76:	bd80      	pop	{r7, pc}
 8000d78:	200002f4 	.word	0x200002f4
 8000d7c:	2000042c 	.word	0x2000042c

08000d80 <BQ_Init>:

bool BQ_Init()
{
 8000d80:	b580      	push	{r7, lr}
 8000d82:	b082      	sub	sp, #8
 8000d84:	af00      	add	r7, sp, #0
	struct BQ_Register_fields BQ;

	//REG00
	BQ.REG00.IINLIM = 0b111;	//3A input
 8000d86:	783b      	ldrb	r3, [r7, #0]
 8000d88:	f043 0307 	orr.w	r3, r3, #7
 8000d8c:	703b      	strb	r3, [r7, #0]
	BQ.REG00.VINDPM = 0b1011;	//4.76V
 8000d8e:	783b      	ldrb	r3, [r7, #0]
 8000d90:	220b      	movs	r2, #11
 8000d92:	f362 03c6 	bfi	r3, r2, #3, #4
 8000d96:	703b      	strb	r3, [r7, #0]
	BQ.REG00.EN_HIZ = 1;
 8000d98:	783b      	ldrb	r3, [r7, #0]
 8000d9a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d9e:	703b      	strb	r3, [r7, #0]

	//REG01
	BQ.REG01.SYS_MIN = 0b011;	//3.3V minimum voltage cutoff
 8000da0:	787b      	ldrb	r3, [r7, #1]
 8000da2:	2203      	movs	r2, #3
 8000da4:	f362 0343 	bfi	r3, r2, #1, #3
 8000da8:	707b      	strb	r3, [r7, #1]
	BQ.REG01.CHG_CONFIG = 1;	//enable charge
 8000daa:	787b      	ldrb	r3, [r7, #1]
 8000dac:	f043 0310 	orr.w	r3, r3, #16
 8000db0:	707b      	strb	r3, [r7, #1]
	BQ.REG01.OTG_CONFIG = 0;
 8000db2:	787b      	ldrb	r3, [r7, #1]
 8000db4:	f36f 1345 	bfc	r3, #5, #1
 8000db8:	707b      	strb	r3, [r7, #1]
	BQ.REG01.I2CWDTIMER = 0;	//disable WD
 8000dba:	787b      	ldrb	r3, [r7, #1]
 8000dbc:	f36f 1386 	bfc	r3, #6, #1
 8000dc0:	707b      	strb	r3, [r7, #1]
	BQ.REG01.RegisterReset = 0;
 8000dc2:	787b      	ldrb	r3, [r7, #1]
 8000dc4:	f36f 13c7 	bfc	r3, #7, #1
 8000dc8:	707b      	strb	r3, [r7, #1]

	//REG02
	BQ.REG02.FORCE_20PCT = 0;
 8000dca:	78bb      	ldrb	r3, [r7, #2]
 8000dcc:	f36f 0300 	bfc	r3, #0, #1
 8000dd0:	70bb      	strb	r3, [r7, #2]
	BQ.REG02.BCOLD = 0;
 8000dd2:	78bb      	ldrb	r3, [r7, #2]
 8000dd4:	f36f 0341 	bfc	r3, #1, #1
 8000dd8:	70bb      	strb	r3, [r7, #2]
	BQ.REG02.ICHG = 0b101111;	//Fast Charging current is 3008mAh
 8000dda:	78bb      	ldrb	r3, [r7, #2]
 8000ddc:	222f      	movs	r2, #47	; 0x2f
 8000dde:	f362 0387 	bfi	r3, r2, #2, #6
 8000de2:	70bb      	strb	r3, [r7, #2]

	//REG03
	BQ.REG03.ITERM = 0b0011;	//Termination current is 384mAh
 8000de4:	78fb      	ldrb	r3, [r7, #3]
 8000de6:	2203      	movs	r2, #3
 8000de8:	f362 0303 	bfi	r3, r2, #0, #4
 8000dec:	70fb      	strb	r3, [r7, #3]
	BQ.REG03.IPRECHG = 0b0001;	//Precharge current is 128mAh
 8000dee:	78fb      	ldrb	r3, [r7, #3]
 8000df0:	2201      	movs	r2, #1
 8000df2:	f362 1307 	bfi	r3, r2, #4, #4
 8000df6:	70fb      	strb	r3, [r7, #3]

	//REG04
	BQ.REG04.VRECHG = 0;
 8000df8:	793b      	ldrb	r3, [r7, #4]
 8000dfa:	f36f 0300 	bfc	r3, #0, #1
 8000dfe:	713b      	strb	r3, [r7, #4]
	BQ.REG04.BATLOWV = 1;		//Battery is precharged until 3.0v then changed to fast charge
 8000e00:	793b      	ldrb	r3, [r7, #4]
 8000e02:	f043 0302 	orr.w	r3, r3, #2
 8000e06:	713b      	strb	r3, [r7, #4]
	BQ.REG04.VREG = 0b101100;	//Battery is full at 4.208v
 8000e08:	793b      	ldrb	r3, [r7, #4]
 8000e0a:	222c      	movs	r2, #44	; 0x2c
 8000e0c:	f362 0387 	bfi	r3, r2, #2, #6
 8000e10:	713b      	strb	r3, [r7, #4]

	//REG05
	BQ.REG05.CHG_TIMER = 0b01;	//If enabled, it will charge for 8 hours
 8000e12:	797b      	ldrb	r3, [r7, #5]
 8000e14:	2201      	movs	r2, #1
 8000e16:	f362 0342 	bfi	r3, r2, #1, #2
 8000e1a:	717b      	strb	r3, [r7, #5]
	BQ.REG05.EN_TIMER = 0;		//disable charging safety timer
 8000e1c:	797b      	ldrb	r3, [r7, #5]
 8000e1e:	f36f 03c3 	bfc	r3, #3, #1
 8000e22:	717b      	strb	r3, [r7, #5]
	BQ.REG05.WATCHDOG = 0b00;	//disable watchdog
 8000e24:	797b      	ldrb	r3, [r7, #5]
 8000e26:	f36f 1305 	bfc	r3, #4, #2
 8000e2a:	717b      	strb	r3, [r7, #5]
	BQ.REG05.EN_TERM = 1;
 8000e2c:	797b      	ldrb	r3, [r7, #5]
 8000e2e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000e32:	717b      	strb	r3, [r7, #5]

	//REG06
	BQ.REG06.TREG = 0b00;		//Thermal reg at 60C degrees
 8000e34:	79bb      	ldrb	r3, [r7, #6]
 8000e36:	f36f 0301 	bfc	r3, #0, #2
 8000e3a:	71bb      	strb	r3, [r7, #6]
	BQ.REG06.BHOT = 0b00;
 8000e3c:	79bb      	ldrb	r3, [r7, #6]
 8000e3e:	f36f 0383 	bfc	r3, #2, #2
 8000e42:	71bb      	strb	r3, [r7, #6]
	BQ.REG06.BOOSTV= 0b1001;	//not needed
 8000e44:	79bb      	ldrb	r3, [r7, #6]
 8000e46:	2209      	movs	r2, #9
 8000e48:	f362 1307 	bfi	r3, r2, #4, #4
 8000e4c:	71bb      	strb	r3, [r7, #6]

	//REG07
	BQ.REG07.INT_MASK = 0b11;	//Enable pin Inturrupts
 8000e4e:	79fb      	ldrb	r3, [r7, #7]
 8000e50:	f043 0303 	orr.w	r3, r3, #3
 8000e54:	71fb      	strb	r3, [r7, #7]
	BQ.REG07.BATFET_Disable = 0;//to Force BATFET off, turn this ON
 8000e56:	79fb      	ldrb	r3, [r7, #7]
 8000e58:	f36f 1345 	bfc	r3, #5, #1
 8000e5c:	71fb      	strb	r3, [r7, #7]
	BQ.REG07.TMR2X_EN = 1;
 8000e5e:	79fb      	ldrb	r3, [r7, #7]
 8000e60:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e64:	71fb      	strb	r3, [r7, #7]
	BQ.REG07.DPDM_EN = 0;
 8000e66:	79fb      	ldrb	r3, [r7, #7]
 8000e68:	f36f 13c7 	bfc	r3, #7, #1
 8000e6c:	71fb      	strb	r3, [r7, #7]

	if(!BQ_IsPresent())
 8000e6e:	f000 f845 	bl	8000efc <BQ_IsPresent>
 8000e72:	4603      	mov	r3, r0
 8000e74:	f083 0301 	eor.w	r3, r3, #1
 8000e78:	b2db      	uxtb	r3, r3
 8000e7a:	2b00      	cmp	r3, #0
 8000e7c:	d001      	beq.n	8000e82 <BQ_Init+0x102>
	{
		return false;
 8000e7e:	2300      	movs	r3, #0
 8000e80:	e037      	b.n	8000ef2 <BQ_Init+0x172>
	}
	BQ_Write((uint8_t *)InputSourceControlReg, *(uint8_t *)&BQ.REG00);
 8000e82:	463b      	mov	r3, r7
 8000e84:	781b      	ldrb	r3, [r3, #0]
 8000e86:	4619      	mov	r1, r3
 8000e88:	2000      	movs	r0, #0
 8000e8a:	f7ff ff33 	bl	8000cf4 <BQ_Write>
	BQ_Write((uint8_t *)PowerOnConfigReg, *(uint8_t *)&BQ.REG01);
 8000e8e:	463b      	mov	r3, r7
 8000e90:	3301      	adds	r3, #1
 8000e92:	781b      	ldrb	r3, [r3, #0]
 8000e94:	4619      	mov	r1, r3
 8000e96:	2001      	movs	r0, #1
 8000e98:	f7ff ff2c 	bl	8000cf4 <BQ_Write>
	BQ_Write((uint8_t *)ChargeCurrentControlReg, *(uint8_t *)&BQ.REG02);
 8000e9c:	463b      	mov	r3, r7
 8000e9e:	3302      	adds	r3, #2
 8000ea0:	781b      	ldrb	r3, [r3, #0]
 8000ea2:	4619      	mov	r1, r3
 8000ea4:	2002      	movs	r0, #2
 8000ea6:	f7ff ff25 	bl	8000cf4 <BQ_Write>
	BQ_Write((uint8_t *)PrechargeTerminationCurrentControlReg, *(uint8_t *)&BQ.REG03);
 8000eaa:	463b      	mov	r3, r7
 8000eac:	3303      	adds	r3, #3
 8000eae:	781b      	ldrb	r3, [r3, #0]
 8000eb0:	4619      	mov	r1, r3
 8000eb2:	2003      	movs	r0, #3
 8000eb4:	f7ff ff1e 	bl	8000cf4 <BQ_Write>
	BQ_Write((uint8_t *)ChargeVoltageControlReg, *(uint8_t *)&BQ.REG04);
 8000eb8:	463b      	mov	r3, r7
 8000eba:	3304      	adds	r3, #4
 8000ebc:	781b      	ldrb	r3, [r3, #0]
 8000ebe:	4619      	mov	r1, r3
 8000ec0:	2004      	movs	r0, #4
 8000ec2:	f7ff ff17 	bl	8000cf4 <BQ_Write>
	BQ_Write((uint8_t *)ChargeTerminationTimerControlReg, *(uint8_t *)&BQ.REG05);
 8000ec6:	463b      	mov	r3, r7
 8000ec8:	3305      	adds	r3, #5
 8000eca:	781b      	ldrb	r3, [r3, #0]
 8000ecc:	4619      	mov	r1, r3
 8000ece:	2005      	movs	r0, #5
 8000ed0:	f7ff ff10 	bl	8000cf4 <BQ_Write>
	BQ_Write((uint8_t *)BoostVoltageThermalRegulationControlReg, *(uint8_t *)&BQ.REG06);
 8000ed4:	463b      	mov	r3, r7
 8000ed6:	3306      	adds	r3, #6
 8000ed8:	781b      	ldrb	r3, [r3, #0]
 8000eda:	4619      	mov	r1, r3
 8000edc:	2006      	movs	r0, #6
 8000ede:	f7ff ff09 	bl	8000cf4 <BQ_Write>
	BQ_Write((uint8_t *)MiscOperationControlReg, *(uint8_t *)&BQ.REG07);
 8000ee2:	463b      	mov	r3, r7
 8000ee4:	3307      	adds	r3, #7
 8000ee6:	781b      	ldrb	r3, [r3, #0]
 8000ee8:	4619      	mov	r1, r3
 8000eea:	2007      	movs	r0, #7
 8000eec:	f7ff ff02 	bl	8000cf4 <BQ_Write>

	return true;
 8000ef0:	2301      	movs	r3, #1
}
 8000ef2:	4618      	mov	r0, r3
 8000ef4:	3708      	adds	r7, #8
 8000ef6:	46bd      	mov	sp, r7
 8000ef8:	bd80      	pop	{r7, pc}
	...

08000efc <BQ_IsPresent>:

bool BQ_IsPresent()
{
 8000efc:	b580      	push	{r7, lr}
 8000efe:	b082      	sub	sp, #8
 8000f00:	af00      	add	r7, sp, #0
	if(GLOBAL_errors != 0)
 8000f02:	4b0f      	ldr	r3, [pc, #60]	; (8000f40 <BQ_IsPresent+0x44>)
 8000f04:	781b      	ldrb	r3, [r3, #0]
 8000f06:	2b00      	cmp	r3, #0
 8000f08:	d001      	beq.n	8000f0e <BQ_IsPresent+0x12>
	{
		return false;
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	e013      	b.n	8000f36 <BQ_IsPresent+0x3a>
	}

	uint8_t reg = BQ_Read(PartStatusReg);
 8000f0e:	200a      	movs	r0, #10
 8000f10:	f7ff ff14 	bl	8000d3c <BQ_Read>
 8000f14:	4603      	mov	r3, r0
 8000f16:	71fb      	strb	r3, [r7, #7]

	reg = (reg >>5);
 8000f18:	79fb      	ldrb	r3, [r7, #7]
 8000f1a:	095b      	lsrs	r3, r3, #5
 8000f1c:	71fb      	strb	r3, [r7, #7]

	if(BQ_Read(PartStatusReg) == 0b110)
 8000f1e:	200a      	movs	r0, #10
 8000f20:	f7ff ff0c 	bl	8000d3c <BQ_Read>
 8000f24:	4603      	mov	r3, r0
 8000f26:	2b06      	cmp	r3, #6
 8000f28:	d101      	bne.n	8000f2e <BQ_IsPresent+0x32>
	{
		return true;
 8000f2a:	2301      	movs	r3, #1
 8000f2c:	e003      	b.n	8000f36 <BQ_IsPresent+0x3a>
	}else
	{
		GLOBAL_errors = BQNotPresentOrNotCorrectPart;
 8000f2e:	4b04      	ldr	r3, [pc, #16]	; (8000f40 <BQ_IsPresent+0x44>)
 8000f30:	2202      	movs	r2, #2
 8000f32:	701a      	strb	r2, [r3, #0]
		return false;
 8000f34:	2300      	movs	r3, #0
	}
}
 8000f36:	4618      	mov	r0, r3
 8000f38:	3708      	adds	r7, #8
 8000f3a:	46bd      	mov	sp, r7
 8000f3c:	bd80      	pop	{r7, pc}
 8000f3e:	bf00      	nop
 8000f40:	2000042c 	.word	0x2000042c

08000f44 <PID_Init>:
#include "pid.h"

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/* ~~~~~~~~~~~~~~~~~ Initialize ~~~~~~~~~~~~~~~~ */
void PID_Init(PID_TypeDef *uPID)
{
 8000f44:	b580      	push	{r7, lr}
 8000f46:	b082      	sub	sp, #8
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	6078      	str	r0, [r7, #4]
	/* ~~~~~~~~~~ Set parameter ~~~~~~~~~~ */
	uPID->OutputSum = *uPID->MyOutput;
 8000f4c:	687b      	ldr	r3, [r7, #4]
 8000f4e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000f50:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f54:	6879      	ldr	r1, [r7, #4]
 8000f56:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
	uPID->LastInput = *uPID->MyInput;
 8000f5a:	687b      	ldr	r3, [r7, #4]
 8000f5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f62:	6879      	ldr	r1, [r7, #4]
 8000f64:	e9c1 2316 	strd	r2, r3, [r1, #88]	; 0x58
	
	if (uPID->OutputSum > uPID->OutMax)
 8000f68:	687b      	ldr	r3, [r7, #4]
 8000f6a:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 8000f6e:	687b      	ldr	r3, [r7, #4]
 8000f70:	e9d3 231a 	ldrd	r2, r3, [r3, #104]	; 0x68
 8000f74:	f7ff fdd0 	bl	8000b18 <__aeabi_dcmpgt>
 8000f78:	4603      	mov	r3, r0
 8000f7a:	2b00      	cmp	r3, #0
 8000f7c:	d006      	beq.n	8000f8c <PID_Init+0x48>
	{
		uPID->OutputSum = uPID->OutMax;
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	e9d3 231a 	ldrd	r2, r3, [r3, #104]	; 0x68
 8000f84:	6879      	ldr	r1, [r7, #4]
 8000f86:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
	{
		uPID->OutputSum = uPID->OutMin;
	}
	else { }
	
}
 8000f8a:	e011      	b.n	8000fb0 <PID_Init+0x6c>
	else if (uPID->OutputSum < uPID->OutMin)
 8000f8c:	687b      	ldr	r3, [r7, #4]
 8000f8e:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 8000f92:	687b      	ldr	r3, [r7, #4]
 8000f94:	e9d3 2318 	ldrd	r2, r3, [r3, #96]	; 0x60
 8000f98:	f7ff fda0 	bl	8000adc <__aeabi_dcmplt>
 8000f9c:	4603      	mov	r3, r0
 8000f9e:	2b00      	cmp	r3, #0
 8000fa0:	d100      	bne.n	8000fa4 <PID_Init+0x60>
}
 8000fa2:	e005      	b.n	8000fb0 <PID_Init+0x6c>
		uPID->OutputSum = uPID->OutMin;
 8000fa4:	687b      	ldr	r3, [r7, #4]
 8000fa6:	e9d3 2318 	ldrd	r2, r3, [r3, #96]	; 0x60
 8000faa:	6879      	ldr	r1, [r7, #4]
 8000fac:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
}
 8000fb0:	bf00      	nop
 8000fb2:	3708      	adds	r7, #8
 8000fb4:	46bd      	mov	sp, r7
 8000fb6:	bd80      	pop	{r7, pc}

08000fb8 <PID>:

void PID(PID_TypeDef *uPID, double *Input, double *Output, double *Setpoint, double Kp, double Ki, double Kd, PIDPON_TypeDef POn, PIDCD_TypeDef ControllerDirection)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	b08a      	sub	sp, #40	; 0x28
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	6278      	str	r0, [r7, #36]	; 0x24
 8000fc0:	6239      	str	r1, [r7, #32]
 8000fc2:	61fa      	str	r2, [r7, #28]
 8000fc4:	61bb      	str	r3, [r7, #24]
 8000fc6:	ed87 0b04 	vstr	d0, [r7, #16]
 8000fca:	ed87 1b02 	vstr	d1, [r7, #8]
 8000fce:	ed87 2b00 	vstr	d2, [r7]
	/* ~~~~~~~~~~ Set parameter ~~~~~~~~~~ */
	uPID->MyOutput   = Output;
 8000fd2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000fd4:	69fa      	ldr	r2, [r7, #28]
 8000fd6:	645a      	str	r2, [r3, #68]	; 0x44
	uPID->MyInput    = Input;
 8000fd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000fda:	6a3a      	ldr	r2, [r7, #32]
 8000fdc:	641a      	str	r2, [r3, #64]	; 0x40
	uPID->MySetpoint = Setpoint;
 8000fde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000fe0:	69ba      	ldr	r2, [r7, #24]
 8000fe2:	649a      	str	r2, [r3, #72]	; 0x48
	uPID->InAuto     = (PIDMode_TypeDef)_FALSE;
 8000fe4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000fe6:	2200      	movs	r2, #0
 8000fe8:	705a      	strb	r2, [r3, #1]
	
	PID_SetOutputLimits(uPID, 0, _PID_8BIT_PWM_MAX);
 8000fea:	ed9f 1b15 	vldr	d1, [pc, #84]	; 8001040 <PID+0x88>
 8000fee:	ed9f 0b16 	vldr	d0, [pc, #88]	; 8001048 <PID+0x90>
 8000ff2:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000ff4:	f000 f84a 	bl	800108c <PID_SetOutputLimits>
	
	uPID->SampleTime = _PID_SAMPLE_TIME_MS_DEF; /* default Controller Sample Time is 0.1 seconds */
 8000ff8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000ffa:	2264      	movs	r2, #100	; 0x64
 8000ffc:	609a      	str	r2, [r3, #8]
	
	PID_SetControllerDirection(uPID, ControllerDirection);
 8000ffe:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8001002:	4619      	mov	r1, r3
 8001004:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8001006:	f000 f957 	bl	80012b8 <PID_SetControllerDirection>
	PID_SetTunings2(uPID, Kp, Ki, Kd, POn);
 800100a:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800100e:	4619      	mov	r1, r3
 8001010:	ed97 2b00 	vldr	d2, [r7]
 8001014:	ed97 1b02 	vldr	d1, [r7, #8]
 8001018:	ed97 0b04 	vldr	d0, [r7, #16]
 800101c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800101e:	f000 f8a3 	bl	8001168 <PID_SetTunings2>
	
	uPID->LastTime = GetTime() - uPID->SampleTime;
 8001022:	f001 feed 	bl	8002e00 <HAL_GetTick>
 8001026:	4602      	mov	r2, r0
 8001028:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800102a:	689b      	ldr	r3, [r3, #8]
 800102c:	1ad2      	subs	r2, r2, r3
 800102e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001030:	605a      	str	r2, [r3, #4]
	
}
 8001032:	bf00      	nop
 8001034:	3728      	adds	r7, #40	; 0x28
 8001036:	46bd      	mov	sp, r7
 8001038:	bd80      	pop	{r7, pc}
 800103a:	bf00      	nop
 800103c:	f3af 8000 	nop.w
 8001040:	00000000 	.word	0x00000000
 8001044:	406fe000 	.word	0x406fe000
	...

08001050 <PID_SetMode>:
	
}

/* ~~~~~~~~~~~~~~~~~ PID Mode ~~~~~~~~~~~~~~~~~~ */
void            PID_SetMode(PID_TypeDef *uPID, PIDMode_TypeDef Mode)
{
 8001050:	b580      	push	{r7, lr}
 8001052:	b084      	sub	sp, #16
 8001054:	af00      	add	r7, sp, #0
 8001056:	6078      	str	r0, [r7, #4]
 8001058:	460b      	mov	r3, r1
 800105a:	70fb      	strb	r3, [r7, #3]
	
	uint8_t newAuto = (Mode == _PID_MODE_AUTOMATIC);
 800105c:	78fb      	ldrb	r3, [r7, #3]
 800105e:	2b01      	cmp	r3, #1
 8001060:	bf0c      	ite	eq
 8001062:	2301      	moveq	r3, #1
 8001064:	2300      	movne	r3, #0
 8001066:	b2db      	uxtb	r3, r3
 8001068:	73fb      	strb	r3, [r7, #15]
	
	/* ~~~~~~~~~~ Initialize the PID ~~~~~~~~~~ */
	if (newAuto && !uPID->InAuto)
 800106a:	7bfb      	ldrb	r3, [r7, #15]
 800106c:	2b00      	cmp	r3, #0
 800106e:	d006      	beq.n	800107e <PID_SetMode+0x2e>
 8001070:	687b      	ldr	r3, [r7, #4]
 8001072:	785b      	ldrb	r3, [r3, #1]
 8001074:	2b00      	cmp	r3, #0
 8001076:	d102      	bne.n	800107e <PID_SetMode+0x2e>
	{
		PID_Init(uPID);
 8001078:	6878      	ldr	r0, [r7, #4]
 800107a:	f7ff ff63 	bl	8000f44 <PID_Init>
	}
	
	uPID->InAuto = (PIDMode_TypeDef)newAuto;
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	7bfa      	ldrb	r2, [r7, #15]
 8001082:	705a      	strb	r2, [r3, #1]
	
}
 8001084:	bf00      	nop
 8001086:	3710      	adds	r7, #16
 8001088:	46bd      	mov	sp, r7
 800108a:	bd80      	pop	{r7, pc}

0800108c <PID_SetOutputLimits>:
	return uPID->InAuto ? _PID_MODE_AUTOMATIC : _PID_MODE_MANUAL;
}

/* ~~~~~~~~~~~~~~~~ PID Limits ~~~~~~~~~~~~~~~~~ */
void PID_SetOutputLimits(PID_TypeDef *uPID, double Min, double Max)
{
 800108c:	b580      	push	{r7, lr}
 800108e:	b086      	sub	sp, #24
 8001090:	af00      	add	r7, sp, #0
 8001092:	6178      	str	r0, [r7, #20]
 8001094:	ed87 0b02 	vstr	d0, [r7, #8]
 8001098:	ed87 1b00 	vstr	d1, [r7]
	/* ~~~~~~~~~~ Check value ~~~~~~~~~~ */
	if (Min >= Max)
 800109c:	e9d7 2300 	ldrd	r2, r3, [r7]
 80010a0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80010a4:	f7ff fd2e 	bl	8000b04 <__aeabi_dcmpge>
 80010a8:	4603      	mov	r3, r0
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	d158      	bne.n	8001160 <PID_SetOutputLimits+0xd4>
	{
		return;
	}
	
	uPID->OutMin = Min;
 80010ae:	6979      	ldr	r1, [r7, #20]
 80010b0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80010b4:	e9c1 2318 	strd	r2, r3, [r1, #96]	; 0x60
	uPID->OutMax = Max;
 80010b8:	6979      	ldr	r1, [r7, #20]
 80010ba:	e9d7 2300 	ldrd	r2, r3, [r7]
 80010be:	e9c1 231a 	strd	r2, r3, [r1, #104]	; 0x68
	
	/* ~~~~~~~~~~ Check PID Mode ~~~~~~~~~~ */
	if (uPID->InAuto)
 80010c2:	697b      	ldr	r3, [r7, #20]
 80010c4:	785b      	ldrb	r3, [r3, #1]
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	d04b      	beq.n	8001162 <PID_SetOutputLimits+0xd6>
	{
		
		/* ..... Check out value ..... */
		if (*uPID->MyOutput > uPID->OutMax)
 80010ca:	697b      	ldr	r3, [r7, #20]
 80010cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80010ce:	e9d3 0100 	ldrd	r0, r1, [r3]
 80010d2:	697b      	ldr	r3, [r7, #20]
 80010d4:	e9d3 231a 	ldrd	r2, r3, [r3, #104]	; 0x68
 80010d8:	f7ff fd1e 	bl	8000b18 <__aeabi_dcmpgt>
 80010dc:	4603      	mov	r3, r0
 80010de:	2b00      	cmp	r3, #0
 80010e0:	d007      	beq.n	80010f2 <PID_SetOutputLimits+0x66>
		{
			*uPID->MyOutput = uPID->OutMax;
 80010e2:	697b      	ldr	r3, [r7, #20]
 80010e4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80010e6:	697b      	ldr	r3, [r7, #20]
 80010e8:	e9d3 231a 	ldrd	r2, r3, [r3, #104]	; 0x68
 80010ec:	e9c1 2300 	strd	r2, r3, [r1]
 80010f0:	e012      	b.n	8001118 <PID_SetOutputLimits+0x8c>
		}
		else if (*uPID->MyOutput < uPID->OutMin)
 80010f2:	697b      	ldr	r3, [r7, #20]
 80010f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80010f6:	e9d3 0100 	ldrd	r0, r1, [r3]
 80010fa:	697b      	ldr	r3, [r7, #20]
 80010fc:	e9d3 2318 	ldrd	r2, r3, [r3, #96]	; 0x60
 8001100:	f7ff fcec 	bl	8000adc <__aeabi_dcmplt>
 8001104:	4603      	mov	r3, r0
 8001106:	2b00      	cmp	r3, #0
 8001108:	d006      	beq.n	8001118 <PID_SetOutputLimits+0x8c>
		{
			*uPID->MyOutput = uPID->OutMin;
 800110a:	697b      	ldr	r3, [r7, #20]
 800110c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800110e:	697b      	ldr	r3, [r7, #20]
 8001110:	e9d3 2318 	ldrd	r2, r3, [r3, #96]	; 0x60
 8001114:	e9c1 2300 	strd	r2, r3, [r1]
		}
		else { }
		
		/* ..... Check out value ..... */
		if (uPID->OutputSum > uPID->OutMax)
 8001118:	697b      	ldr	r3, [r7, #20]
 800111a:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 800111e:	697b      	ldr	r3, [r7, #20]
 8001120:	e9d3 231a 	ldrd	r2, r3, [r3, #104]	; 0x68
 8001124:	f7ff fcf8 	bl	8000b18 <__aeabi_dcmpgt>
 8001128:	4603      	mov	r3, r0
 800112a:	2b00      	cmp	r3, #0
 800112c:	d006      	beq.n	800113c <PID_SetOutputLimits+0xb0>
		{
			uPID->OutputSum = uPID->OutMax;
 800112e:	697b      	ldr	r3, [r7, #20]
 8001130:	e9d3 231a 	ldrd	r2, r3, [r3, #104]	; 0x68
 8001134:	6979      	ldr	r1, [r7, #20]
 8001136:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
 800113a:	e012      	b.n	8001162 <PID_SetOutputLimits+0xd6>
		}
		else if (uPID->OutputSum < uPID->OutMin)
 800113c:	697b      	ldr	r3, [r7, #20]
 800113e:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 8001142:	697b      	ldr	r3, [r7, #20]
 8001144:	e9d3 2318 	ldrd	r2, r3, [r3, #96]	; 0x60
 8001148:	f7ff fcc8 	bl	8000adc <__aeabi_dcmplt>
 800114c:	4603      	mov	r3, r0
 800114e:	2b00      	cmp	r3, #0
 8001150:	d007      	beq.n	8001162 <PID_SetOutputLimits+0xd6>
		{
			uPID->OutputSum = uPID->OutMin;
 8001152:	697b      	ldr	r3, [r7, #20]
 8001154:	e9d3 2318 	ldrd	r2, r3, [r3, #96]	; 0x60
 8001158:	6979      	ldr	r1, [r7, #20]
 800115a:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
 800115e:	e000      	b.n	8001162 <PID_SetOutputLimits+0xd6>
		return;
 8001160:	bf00      	nop
		}
		else { }
		
	}
	
}
 8001162:	3718      	adds	r7, #24
 8001164:	46bd      	mov	sp, r7
 8001166:	bd80      	pop	{r7, pc}

08001168 <PID_SetTunings2>:
void PID_SetTunings(PID_TypeDef *uPID, double Kp, double Ki, double Kd)
{
	PID_SetTunings2(uPID, Kp, Ki, Kd, uPID->POn);
}
void PID_SetTunings2(PID_TypeDef *uPID, double Kp, double Ki, double Kd, PIDPON_TypeDef POn)
{
 8001168:	b580      	push	{r7, lr}
 800116a:	b08a      	sub	sp, #40	; 0x28
 800116c:	af00      	add	r7, sp, #0
 800116e:	61f8      	str	r0, [r7, #28]
 8001170:	ed87 0b04 	vstr	d0, [r7, #16]
 8001174:	ed87 1b02 	vstr	d1, [r7, #8]
 8001178:	ed87 2b00 	vstr	d2, [r7]
 800117c:	460b      	mov	r3, r1
 800117e:	76fb      	strb	r3, [r7, #27]
	
	double SampleTimeInSec;
	
	/* ~~~~~~~~~~ Check value ~~~~~~~~~~ */
	if (Kp < 0 || Ki < 0 || Kd < 0)
 8001180:	f04f 0200 	mov.w	r2, #0
 8001184:	f04f 0300 	mov.w	r3, #0
 8001188:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800118c:	f7ff fca6 	bl	8000adc <__aeabi_dcmplt>
 8001190:	4603      	mov	r3, r0
 8001192:	2b00      	cmp	r3, #0
 8001194:	f040 8089 	bne.w	80012aa <PID_SetTunings2+0x142>
 8001198:	f04f 0200 	mov.w	r2, #0
 800119c:	f04f 0300 	mov.w	r3, #0
 80011a0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80011a4:	f7ff fc9a 	bl	8000adc <__aeabi_dcmplt>
 80011a8:	4603      	mov	r3, r0
 80011aa:	2b00      	cmp	r3, #0
 80011ac:	d17d      	bne.n	80012aa <PID_SetTunings2+0x142>
 80011ae:	f04f 0200 	mov.w	r2, #0
 80011b2:	f04f 0300 	mov.w	r3, #0
 80011b6:	e9d7 0100 	ldrd	r0, r1, [r7]
 80011ba:	f7ff fc8f 	bl	8000adc <__aeabi_dcmplt>
 80011be:	4603      	mov	r3, r0
 80011c0:	2b00      	cmp	r3, #0
 80011c2:	d172      	bne.n	80012aa <PID_SetTunings2+0x142>
	{
		return;
	}
	
	/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
	uPID->POn    = POn;
 80011c4:	69fb      	ldr	r3, [r7, #28]
 80011c6:	7efa      	ldrb	r2, [r7, #27]
 80011c8:	709a      	strb	r2, [r3, #2]
	uPID->POnE   = (PIDPON_TypeDef)(POn == _PID_P_ON_E);
 80011ca:	7efb      	ldrb	r3, [r7, #27]
 80011cc:	2b01      	cmp	r3, #1
 80011ce:	bf0c      	ite	eq
 80011d0:	2301      	moveq	r3, #1
 80011d2:	2300      	movne	r3, #0
 80011d4:	b2db      	uxtb	r3, r3
 80011d6:	461a      	mov	r2, r3
 80011d8:	69fb      	ldr	r3, [r7, #28]
 80011da:	701a      	strb	r2, [r3, #0]

	uPID->DispKp = Kp;
 80011dc:	69f9      	ldr	r1, [r7, #28]
 80011de:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80011e2:	e9c1 2304 	strd	r2, r3, [r1, #16]
	uPID->DispKi = Ki;
 80011e6:	69f9      	ldr	r1, [r7, #28]
 80011e8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80011ec:	e9c1 2306 	strd	r2, r3, [r1, #24]
	uPID->DispKd = Kd;
 80011f0:	69f9      	ldr	r1, [r7, #28]
 80011f2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80011f6:	e9c1 2308 	strd	r2, r3, [r1, #32]
	
	/* ~~~~~~~~~ Calculate time ~~~~~~~~ */
	SampleTimeInSec = ((double)uPID->SampleTime) / 1000;
 80011fa:	69fb      	ldr	r3, [r7, #28]
 80011fc:	689b      	ldr	r3, [r3, #8]
 80011fe:	4618      	mov	r0, r3
 8001200:	f7ff f980 	bl	8000504 <__aeabi_ui2d>
 8001204:	f04f 0200 	mov.w	r2, #0
 8001208:	4b2a      	ldr	r3, [pc, #168]	; (80012b4 <PID_SetTunings2+0x14c>)
 800120a:	f7ff fb1f 	bl	800084c <__aeabi_ddiv>
 800120e:	4602      	mov	r2, r0
 8001210:	460b      	mov	r3, r1
 8001212:	e9c7 2308 	strd	r2, r3, [r7, #32]
	
	uPID->Kp = Kp;
 8001216:	69f9      	ldr	r1, [r7, #28]
 8001218:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800121c:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
	uPID->Ki = Ki * SampleTimeInSec;
 8001220:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001224:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001228:	f7ff f9e6 	bl	80005f8 <__aeabi_dmul>
 800122c:	4602      	mov	r2, r0
 800122e:	460b      	mov	r3, r1
 8001230:	69f9      	ldr	r1, [r7, #28]
 8001232:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
	uPID->Kd = Kd / SampleTimeInSec;
 8001236:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800123a:	e9d7 0100 	ldrd	r0, r1, [r7]
 800123e:	f7ff fb05 	bl	800084c <__aeabi_ddiv>
 8001242:	4602      	mov	r2, r0
 8001244:	460b      	mov	r3, r1
 8001246:	69f9      	ldr	r1, [r7, #28]
 8001248:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
	
	/* ~~~~~~~~ Check direction ~~~~~~~~ */
	if (uPID->ControllerDirection == _PID_CD_REVERSE)
 800124c:	69fb      	ldr	r3, [r7, #28]
 800124e:	78db      	ldrb	r3, [r3, #3]
 8001250:	2b01      	cmp	r3, #1
 8001252:	d12b      	bne.n	80012ac <PID_SetTunings2+0x144>
	{
		
		uPID->Kp = (0 - uPID->Kp);
 8001254:	69fb      	ldr	r3, [r7, #28]
 8001256:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 800125a:	f04f 0000 	mov.w	r0, #0
 800125e:	f04f 0100 	mov.w	r1, #0
 8001262:	f7ff f811 	bl	8000288 <__aeabi_dsub>
 8001266:	4602      	mov	r2, r0
 8001268:	460b      	mov	r3, r1
 800126a:	69f9      	ldr	r1, [r7, #28]
 800126c:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
		uPID->Ki = (0 - uPID->Ki);
 8001270:	69fb      	ldr	r3, [r7, #28]
 8001272:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	; 0x30
 8001276:	f04f 0000 	mov.w	r0, #0
 800127a:	f04f 0100 	mov.w	r1, #0
 800127e:	f7ff f803 	bl	8000288 <__aeabi_dsub>
 8001282:	4602      	mov	r2, r0
 8001284:	460b      	mov	r3, r1
 8001286:	69f9      	ldr	r1, [r7, #28]
 8001288:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
		uPID->Kd = (0 - uPID->Kd);
 800128c:	69fb      	ldr	r3, [r7, #28]
 800128e:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 8001292:	f04f 0000 	mov.w	r0, #0
 8001296:	f04f 0100 	mov.w	r1, #0
 800129a:	f7fe fff5 	bl	8000288 <__aeabi_dsub>
 800129e:	4602      	mov	r2, r0
 80012a0:	460b      	mov	r3, r1
 80012a2:	69f9      	ldr	r1, [r7, #28]
 80012a4:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
 80012a8:	e000      	b.n	80012ac <PID_SetTunings2+0x144>
		return;
 80012aa:	bf00      	nop
		
	}
	
}
 80012ac:	3728      	adds	r7, #40	; 0x28
 80012ae:	46bd      	mov	sp, r7
 80012b0:	bd80      	pop	{r7, pc}
 80012b2:	bf00      	nop
 80012b4:	408f4000 	.word	0x408f4000

080012b8 <PID_SetControllerDirection>:

/* ~~~~~~~~~~~~~~~ PID Direction ~~~~~~~~~~~~~~~ */
void          PID_SetControllerDirection(PID_TypeDef *uPID, PIDCD_TypeDef Direction)
{
 80012b8:	b580      	push	{r7, lr}
 80012ba:	b082      	sub	sp, #8
 80012bc:	af00      	add	r7, sp, #0
 80012be:	6078      	str	r0, [r7, #4]
 80012c0:	460b      	mov	r3, r1
 80012c2:	70fb      	strb	r3, [r7, #3]
	/* ~~~~~~~~~~ Check parameters ~~~~~~~~~~ */
	if ((uPID->InAuto) && (Direction !=uPID->ControllerDirection))
 80012c4:	687b      	ldr	r3, [r7, #4]
 80012c6:	785b      	ldrb	r3, [r3, #1]
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	d02e      	beq.n	800132a <PID_SetControllerDirection+0x72>
 80012cc:	687b      	ldr	r3, [r7, #4]
 80012ce:	78db      	ldrb	r3, [r3, #3]
 80012d0:	78fa      	ldrb	r2, [r7, #3]
 80012d2:	429a      	cmp	r2, r3
 80012d4:	d029      	beq.n	800132a <PID_SetControllerDirection+0x72>
	{
		
		uPID->Kp = (0 - uPID->Kp);
 80012d6:	687b      	ldr	r3, [r7, #4]
 80012d8:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 80012dc:	f04f 0000 	mov.w	r0, #0
 80012e0:	f04f 0100 	mov.w	r1, #0
 80012e4:	f7fe ffd0 	bl	8000288 <__aeabi_dsub>
 80012e8:	4602      	mov	r2, r0
 80012ea:	460b      	mov	r3, r1
 80012ec:	6879      	ldr	r1, [r7, #4]
 80012ee:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
		uPID->Ki = (0 - uPID->Ki);
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	; 0x30
 80012f8:	f04f 0000 	mov.w	r0, #0
 80012fc:	f04f 0100 	mov.w	r1, #0
 8001300:	f7fe ffc2 	bl	8000288 <__aeabi_dsub>
 8001304:	4602      	mov	r2, r0
 8001306:	460b      	mov	r3, r1
 8001308:	6879      	ldr	r1, [r7, #4]
 800130a:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
		uPID->Kd = (0 - uPID->Kd);
 800130e:	687b      	ldr	r3, [r7, #4]
 8001310:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 8001314:	f04f 0000 	mov.w	r0, #0
 8001318:	f04f 0100 	mov.w	r1, #0
 800131c:	f7fe ffb4 	bl	8000288 <__aeabi_dsub>
 8001320:	4602      	mov	r2, r0
 8001322:	460b      	mov	r3, r1
 8001324:	6879      	ldr	r1, [r7, #4]
 8001326:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
		
	}
	
	uPID->ControllerDirection = Direction;
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	78fa      	ldrb	r2, [r7, #3]
 800132e:	70da      	strb	r2, [r3, #3]
	
}
 8001330:	bf00      	nop
 8001332:	3708      	adds	r7, #8
 8001334:	46bd      	mov	sp, r7
 8001336:	bd80      	pop	{r7, pc}

08001338 <PID_SetSampleTime>:
	return uPID->ControllerDirection;
}

/* ~~~~~~~~~~~~~~~ PID Sampling ~~~~~~~~~~~~~~~~ */
void PID_SetSampleTime(PID_TypeDef *uPID, int32_t NewSampleTime)
{
 8001338:	b5b0      	push	{r4, r5, r7, lr}
 800133a:	b084      	sub	sp, #16
 800133c:	af00      	add	r7, sp, #0
 800133e:	6078      	str	r0, [r7, #4]
 8001340:	6039      	str	r1, [r7, #0]
	
	double ratio;
	
	/* ~~~~~~~~~~ Check value ~~~~~~~~~~ */
	if (NewSampleTime > 0)
 8001342:	683b      	ldr	r3, [r7, #0]
 8001344:	2b00      	cmp	r3, #0
 8001346:	dd2e      	ble.n	80013a6 <PID_SetSampleTime+0x6e>
	{
		
		ratio = (double)NewSampleTime / (double)uPID->SampleTime;
 8001348:	6838      	ldr	r0, [r7, #0]
 800134a:	f7ff f8eb 	bl	8000524 <__aeabi_i2d>
 800134e:	4604      	mov	r4, r0
 8001350:	460d      	mov	r5, r1
 8001352:	687b      	ldr	r3, [r7, #4]
 8001354:	689b      	ldr	r3, [r3, #8]
 8001356:	4618      	mov	r0, r3
 8001358:	f7ff f8d4 	bl	8000504 <__aeabi_ui2d>
 800135c:	4602      	mov	r2, r0
 800135e:	460b      	mov	r3, r1
 8001360:	4620      	mov	r0, r4
 8001362:	4629      	mov	r1, r5
 8001364:	f7ff fa72 	bl	800084c <__aeabi_ddiv>
 8001368:	4602      	mov	r2, r0
 800136a:	460b      	mov	r3, r1
 800136c:	e9c7 2302 	strd	r2, r3, [r7, #8]
		
		uPID->Ki *= ratio;
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	e9d3 010c 	ldrd	r0, r1, [r3, #48]	; 0x30
 8001376:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800137a:	f7ff f93d 	bl	80005f8 <__aeabi_dmul>
 800137e:	4602      	mov	r2, r0
 8001380:	460b      	mov	r3, r1
 8001382:	6879      	ldr	r1, [r7, #4]
 8001384:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
		uPID->Kd /= ratio;
 8001388:	687b      	ldr	r3, [r7, #4]
 800138a:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	; 0x38
 800138e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001392:	f7ff fa5b 	bl	800084c <__aeabi_ddiv>
 8001396:	4602      	mov	r2, r0
 8001398:	460b      	mov	r3, r1
 800139a:	6879      	ldr	r1, [r7, #4]
 800139c:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
		uPID->SampleTime = (uint32_t)NewSampleTime;
 80013a0:	683a      	ldr	r2, [r7, #0]
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	609a      	str	r2, [r3, #8]
		
	}
	
}
 80013a6:	bf00      	nop
 80013a8:	3710      	adds	r7, #16
 80013aa:	46bd      	mov	sp, r7
 80013ac:	bdb0      	pop	{r4, r5, r7, pc}

080013ae <WakeUpFromSleepMode>:
#if (ENABLESLEEPMODE)
	void EnterSleepModeWakeOnInturrupt() {
		HAL_SuspendTick();
		HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLEEPENTRY_WFI);
	}
	void WakeUpFromSleepMode(){
 80013ae:	b580      	push	{r7, lr}
 80013b0:	af00      	add	r7, sp, #0
		HAL_ResumeTick();
 80013b2:	f001 fd55 	bl	8002e60 <HAL_ResumeTick>
	}
 80013b6:	bf00      	nop
 80013b8:	bd80      	pop	{r7, pc}
	...

080013bc <HAL_GPIO_EXTI_Callback>:



/*		INURRUPT CODE		*/
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80013bc:	b580      	push	{r7, lr}
 80013be:	b082      	sub	sp, #8
 80013c0:	af00      	add	r7, sp, #0
 80013c2:	4603      	mov	r3, r0
 80013c4:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == BQ_INT_Pin) // BQ INT pin wake up
 80013c6:	88fb      	ldrh	r3, [r7, #6]
 80013c8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80013cc:	d104      	bne.n	80013d8 <HAL_GPIO_EXTI_Callback+0x1c>
	{
		WakeUpFromSleepMode();
 80013ce:	f7ff ffee 	bl	80013ae <WakeUpFromSleepMode>
		BQ_FLAG = true;
 80013d2:	4b4c      	ldr	r3, [pc, #304]	; (8001504 <HAL_GPIO_EXTI_Callback+0x148>)
 80013d4:	2201      	movs	r2, #1
 80013d6:	701a      	strb	r2, [r3, #0]
	}
	if(GPIO_Pin == MAX_ALRT_Pin)
 80013d8:	88fb      	ldrh	r3, [r7, #6]
 80013da:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80013de:	d104      	bne.n	80013ea <HAL_GPIO_EXTI_Callback+0x2e>
	{
		WakeUpFromSleepMode();
 80013e0:	f7ff ffe5 	bl	80013ae <WakeUpFromSleepMode>
		MAX_FLAG = true;
 80013e4:	4b48      	ldr	r3, [pc, #288]	; (8001508 <HAL_GPIO_EXTI_Callback+0x14c>)
 80013e6:	2201      	movs	r2, #1
 80013e8:	701a      	strb	r2, [r3, #0]

	}
	if(GPIO_Pin == Power_Button_Pin)
 80013ea:	88fb      	ldrh	r3, [r7, #6]
 80013ec:	2b80      	cmp	r3, #128	; 0x80
 80013ee:	f040 8084 	bne.w	80014fa <HAL_GPIO_EXTI_Callback+0x13e>
	{
		if(HAL_GPIO_ReadPin(Power_Button_GPIO_Port, Power_Button_Pin) == GPIO_PIN_RESET
 80013f2:	2180      	movs	r1, #128	; 0x80
 80013f4:	4845      	ldr	r0, [pc, #276]	; (800150c <HAL_GPIO_EXTI_Callback+0x150>)
 80013f6:	f003 fa6d 	bl	80048d4 <HAL_GPIO_ReadPin>
 80013fa:	4603      	mov	r3, r0
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d110      	bne.n	8001422 <HAL_GPIO_EXTI_Callback+0x66>
				&& PowerButtonDebounced && !IsPressPeriodStart)
 8001400:	4b43      	ldr	r3, [pc, #268]	; (8001510 <HAL_GPIO_EXTI_Callback+0x154>)
 8001402:	781b      	ldrb	r3, [r3, #0]
 8001404:	2b00      	cmp	r3, #0
 8001406:	d00c      	beq.n	8001422 <HAL_GPIO_EXTI_Callback+0x66>
 8001408:	4b42      	ldr	r3, [pc, #264]	; (8001514 <HAL_GPIO_EXTI_Callback+0x158>)
 800140a:	781b      	ldrb	r3, [r3, #0]
 800140c:	f083 0301 	eor.w	r3, r3, #1
 8001410:	b2db      	uxtb	r3, r3
 8001412:	2b00      	cmp	r3, #0
 8001414:	d005      	beq.n	8001422 <HAL_GPIO_EXTI_Callback+0x66>
		{
			HAL_TIM_Base_Start_IT(&htim15);	//Start Debounce
 8001416:	4840      	ldr	r0, [pc, #256]	; (8001518 <HAL_GPIO_EXTI_Callback+0x15c>)
 8001418:	f005 fa66 	bl	80068e8 <HAL_TIM_Base_Start_IT>
			PowerButtonDebounced = false;
 800141c:	4b3c      	ldr	r3, [pc, #240]	; (8001510 <HAL_GPIO_EXTI_Callback+0x154>)
 800141e:	2200      	movs	r2, #0
 8001420:	701a      	strb	r2, [r3, #0]
		}
		if(HAL_GPIO_ReadPin(Power_Button_GPIO_Port, Power_Button_Pin) == GPIO_PIN_SET &&
 8001422:	2180      	movs	r1, #128	; 0x80
 8001424:	4839      	ldr	r0, [pc, #228]	; (800150c <HAL_GPIO_EXTI_Callback+0x150>)
 8001426:	f003 fa55 	bl	80048d4 <HAL_GPIO_ReadPin>
 800142a:	4603      	mov	r3, r0
 800142c:	2b01      	cmp	r3, #1
 800142e:	d130      	bne.n	8001492 <HAL_GPIO_EXTI_Callback+0xd6>
 8001430:	4b37      	ldr	r3, [pc, #220]	; (8001510 <HAL_GPIO_EXTI_Callback+0x154>)
 8001432:	781b      	ldrb	r3, [r3, #0]
 8001434:	2b00      	cmp	r3, #0
 8001436:	d02c      	beq.n	8001492 <HAL_GPIO_EXTI_Callback+0xd6>
				PowerButtonDebounced && IsPressPeriodStart && PowerButtonShortPress &&
 8001438:	4b36      	ldr	r3, [pc, #216]	; (8001514 <HAL_GPIO_EXTI_Callback+0x158>)
 800143a:	781b      	ldrb	r3, [r3, #0]
 800143c:	2b00      	cmp	r3, #0
 800143e:	d028      	beq.n	8001492 <HAL_GPIO_EXTI_Callback+0xd6>
 8001440:	4b36      	ldr	r3, [pc, #216]	; (800151c <HAL_GPIO_EXTI_Callback+0x160>)
 8001442:	781b      	ldrb	r3, [r3, #0]
 8001444:	2b00      	cmp	r3, #0
 8001446:	d024      	beq.n	8001492 <HAL_GPIO_EXTI_Callback+0xd6>
 8001448:	4b35      	ldr	r3, [pc, #212]	; (8001520 <HAL_GPIO_EXTI_Callback+0x164>)
 800144a:	781b      	ldrb	r3, [r3, #0]
 800144c:	2b00      	cmp	r3, #0
 800144e:	d020      	beq.n	8001492 <HAL_GPIO_EXTI_Callback+0xd6>
				PowerButtonLongPress && !SystemPowerState)
 8001450:	4b34      	ldr	r3, [pc, #208]	; (8001524 <HAL_GPIO_EXTI_Callback+0x168>)
 8001452:	781b      	ldrb	r3, [r3, #0]
 8001454:	f083 0301 	eor.w	r3, r3, #1
 8001458:	b2db      	uxtb	r3, r3
 800145a:	2b00      	cmp	r3, #0
 800145c:	d019      	beq.n	8001492 <HAL_GPIO_EXTI_Callback+0xd6>
		{
			//All conditions met turn ON system and clear for next button
			HAL_TIM_Base_Stop_IT(&htim15);
 800145e:	482e      	ldr	r0, [pc, #184]	; (8001518 <HAL_GPIO_EXTI_Callback+0x15c>)
 8001460:	f005 fa96 	bl	8006990 <HAL_TIM_Base_Stop_IT>
			__HAL_TIM_SET_AUTORELOAD(&htim15, BUTTON_DEBOUNCE_MS);	//Reset power button debounce period
 8001464:	4b2c      	ldr	r3, [pc, #176]	; (8001518 <HAL_GPIO_EXTI_Callback+0x15c>)
 8001466:	681b      	ldr	r3, [r3, #0]
 8001468:	2264      	movs	r2, #100	; 0x64
 800146a:	62da      	str	r2, [r3, #44]	; 0x2c
 800146c:	4b2a      	ldr	r3, [pc, #168]	; (8001518 <HAL_GPIO_EXTI_Callback+0x15c>)
 800146e:	2264      	movs	r2, #100	; 0x64
 8001470:	60da      	str	r2, [r3, #12]
			SystemPowerState = true;
 8001472:	4b2c      	ldr	r3, [pc, #176]	; (8001524 <HAL_GPIO_EXTI_Callback+0x168>)
 8001474:	2201      	movs	r2, #1
 8001476:	701a      	strb	r2, [r3, #0]
			PowerButtonDebounced = true;
 8001478:	4b25      	ldr	r3, [pc, #148]	; (8001510 <HAL_GPIO_EXTI_Callback+0x154>)
 800147a:	2201      	movs	r2, #1
 800147c:	701a      	strb	r2, [r3, #0]
			IsPressPeriodStart = false;
 800147e:	4b25      	ldr	r3, [pc, #148]	; (8001514 <HAL_GPIO_EXTI_Callback+0x158>)
 8001480:	2200      	movs	r2, #0
 8001482:	701a      	strb	r2, [r3, #0]
			PowerButtonShortPress = false;
 8001484:	4b25      	ldr	r3, [pc, #148]	; (800151c <HAL_GPIO_EXTI_Callback+0x160>)
 8001486:	2200      	movs	r2, #0
 8001488:	701a      	strb	r2, [r3, #0]
			PowerButtonLongPress = false;
 800148a:	4b25      	ldr	r3, [pc, #148]	; (8001520 <HAL_GPIO_EXTI_Callback+0x164>)
 800148c:	2200      	movs	r2, #0
 800148e:	701a      	strb	r2, [r3, #0]
		}


	}

}
 8001490:	e033      	b.n	80014fa <HAL_GPIO_EXTI_Callback+0x13e>
		else if(HAL_GPIO_ReadPin(Power_Button_GPIO_Port, Power_Button_Pin) == GPIO_PIN_SET &&
 8001492:	2180      	movs	r1, #128	; 0x80
 8001494:	481d      	ldr	r0, [pc, #116]	; (800150c <HAL_GPIO_EXTI_Callback+0x150>)
 8001496:	f003 fa1d 	bl	80048d4 <HAL_GPIO_ReadPin>
 800149a:	4603      	mov	r3, r0
 800149c:	2b01      	cmp	r3, #1
 800149e:	d12c      	bne.n	80014fa <HAL_GPIO_EXTI_Callback+0x13e>
 80014a0:	4b1b      	ldr	r3, [pc, #108]	; (8001510 <HAL_GPIO_EXTI_Callback+0x154>)
 80014a2:	781b      	ldrb	r3, [r3, #0]
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	d028      	beq.n	80014fa <HAL_GPIO_EXTI_Callback+0x13e>
				PowerButtonDebounced && IsPressPeriodStart && PowerButtonShortPress &&
 80014a8:	4b1a      	ldr	r3, [pc, #104]	; (8001514 <HAL_GPIO_EXTI_Callback+0x158>)
 80014aa:	781b      	ldrb	r3, [r3, #0]
 80014ac:	2b00      	cmp	r3, #0
 80014ae:	d024      	beq.n	80014fa <HAL_GPIO_EXTI_Callback+0x13e>
 80014b0:	4b1a      	ldr	r3, [pc, #104]	; (800151c <HAL_GPIO_EXTI_Callback+0x160>)
 80014b2:	781b      	ldrb	r3, [r3, #0]
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d020      	beq.n	80014fa <HAL_GPIO_EXTI_Callback+0x13e>
 80014b8:	4b19      	ldr	r3, [pc, #100]	; (8001520 <HAL_GPIO_EXTI_Callback+0x164>)
 80014ba:	781b      	ldrb	r3, [r3, #0]
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d01c      	beq.n	80014fa <HAL_GPIO_EXTI_Callback+0x13e>
				PowerButtonLongPress && SystemPowerState)
 80014c0:	4b18      	ldr	r3, [pc, #96]	; (8001524 <HAL_GPIO_EXTI_Callback+0x168>)
 80014c2:	781b      	ldrb	r3, [r3, #0]
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	d018      	beq.n	80014fa <HAL_GPIO_EXTI_Callback+0x13e>
			HAL_TIM_Base_Stop_IT(&htim15);
 80014c8:	4813      	ldr	r0, [pc, #76]	; (8001518 <HAL_GPIO_EXTI_Callback+0x15c>)
 80014ca:	f005 fa61 	bl	8006990 <HAL_TIM_Base_Stop_IT>
			__HAL_TIM_SET_AUTORELOAD(&htim15, BUTTON_DEBOUNCE_MS);	//Reset power button debounce period
 80014ce:	4b12      	ldr	r3, [pc, #72]	; (8001518 <HAL_GPIO_EXTI_Callback+0x15c>)
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	2264      	movs	r2, #100	; 0x64
 80014d4:	62da      	str	r2, [r3, #44]	; 0x2c
 80014d6:	4b10      	ldr	r3, [pc, #64]	; (8001518 <HAL_GPIO_EXTI_Callback+0x15c>)
 80014d8:	2264      	movs	r2, #100	; 0x64
 80014da:	60da      	str	r2, [r3, #12]
			SystemPowerState = false;
 80014dc:	4b11      	ldr	r3, [pc, #68]	; (8001524 <HAL_GPIO_EXTI_Callback+0x168>)
 80014de:	2200      	movs	r2, #0
 80014e0:	701a      	strb	r2, [r3, #0]
			PowerButtonDebounced = true;
 80014e2:	4b0b      	ldr	r3, [pc, #44]	; (8001510 <HAL_GPIO_EXTI_Callback+0x154>)
 80014e4:	2201      	movs	r2, #1
 80014e6:	701a      	strb	r2, [r3, #0]
			IsPressPeriodStart = false;
 80014e8:	4b0a      	ldr	r3, [pc, #40]	; (8001514 <HAL_GPIO_EXTI_Callback+0x158>)
 80014ea:	2200      	movs	r2, #0
 80014ec:	701a      	strb	r2, [r3, #0]
			PowerButtonShortPress = false;
 80014ee:	4b0b      	ldr	r3, [pc, #44]	; (800151c <HAL_GPIO_EXTI_Callback+0x160>)
 80014f0:	2200      	movs	r2, #0
 80014f2:	701a      	strb	r2, [r3, #0]
			PowerButtonLongPress = false;
 80014f4:	4b0a      	ldr	r3, [pc, #40]	; (8001520 <HAL_GPIO_EXTI_Callback+0x164>)
 80014f6:	2200      	movs	r2, #0
 80014f8:	701a      	strb	r2, [r3, #0]
}
 80014fa:	bf00      	nop
 80014fc:	3708      	adds	r7, #8
 80014fe:	46bd      	mov	sp, r7
 8001500:	bd80      	pop	{r7, pc}
 8001502:	bf00      	nop
 8001504:	2000042d 	.word	0x2000042d
 8001508:	2000042e 	.word	0x2000042e
 800150c:	48000800 	.word	0x48000800
 8001510:	20000008 	.word	0x20000008
 8001514:	2000042f 	.word	0x2000042f
 8001518:	200003e0 	.word	0x200003e0
 800151c:	20000430 	.word	0x20000430
 8001520:	20000431 	.word	0x20000431
 8001524:	20000433 	.word	0x20000433

08001528 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001528:	b580      	push	{r7, lr}
 800152a:	b082      	sub	sp, #8
 800152c:	af00      	add	r7, sp, #0
 800152e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
   */
	if(HAL_GPIO_ReadPin(Power_Button_GPIO_Port, Power_Button_Pin) == GPIO_PIN_RESET && !PowerButtonDebounced){
 8001530:	2180      	movs	r1, #128	; 0x80
 8001532:	4864      	ldr	r0, [pc, #400]	; (80016c4 <HAL_TIM_PeriodElapsedCallback+0x19c>)
 8001534:	f003 f9ce 	bl	80048d4 <HAL_GPIO_ReadPin>
 8001538:	4603      	mov	r3, r0
 800153a:	2b00      	cmp	r3, #0
 800153c:	d10c      	bne.n	8001558 <HAL_TIM_PeriodElapsedCallback+0x30>
 800153e:	4b62      	ldr	r3, [pc, #392]	; (80016c8 <HAL_TIM_PeriodElapsedCallback+0x1a0>)
 8001540:	781b      	ldrb	r3, [r3, #0]
 8001542:	f083 0301 	eor.w	r3, r3, #1
 8001546:	b2db      	uxtb	r3, r3
 8001548:	2b00      	cmp	r3, #0
 800154a:	d005      	beq.n	8001558 <HAL_TIM_PeriodElapsedCallback+0x30>
		HAL_TIM_Base_Stop_IT(&htim15);
 800154c:	485f      	ldr	r0, [pc, #380]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 800154e:	f005 fa1f 	bl	8006990 <HAL_TIM_Base_Stop_IT>
		PowerButtonDebounced = true;
 8001552:	4b5d      	ldr	r3, [pc, #372]	; (80016c8 <HAL_TIM_PeriodElapsedCallback+0x1a0>)
 8001554:	2201      	movs	r2, #1
 8001556:	701a      	strb	r2, [r3, #0]

	}
	if(HAL_GPIO_ReadPin(Power_Button_GPIO_Port, Power_Button_Pin) == GPIO_PIN_RESET && !IsPressPeriodStart){
 8001558:	2180      	movs	r1, #128	; 0x80
 800155a:	485a      	ldr	r0, [pc, #360]	; (80016c4 <HAL_TIM_PeriodElapsedCallback+0x19c>)
 800155c:	f003 f9ba 	bl	80048d4 <HAL_GPIO_ReadPin>
 8001560:	4603      	mov	r3, r0
 8001562:	2b00      	cmp	r3, #0
 8001564:	d119      	bne.n	800159a <HAL_TIM_PeriodElapsedCallback+0x72>
 8001566:	4b5a      	ldr	r3, [pc, #360]	; (80016d0 <HAL_TIM_PeriodElapsedCallback+0x1a8>)
 8001568:	781b      	ldrb	r3, [r3, #0]
 800156a:	f083 0301 	eor.w	r3, r3, #1
 800156e:	b2db      	uxtb	r3, r3
 8001570:	2b00      	cmp	r3, #0
 8001572:	d012      	beq.n	800159a <HAL_TIM_PeriodElapsedCallback+0x72>

		__HAL_TIM_SET_AUTORELOAD(&htim15, BUTTON_SHORTPRESS_PERIOD);
 8001574:	4b55      	ldr	r3, [pc, #340]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800157c:	62da      	str	r2, [r3, #44]	; 0x2c
 800157e:	4b53      	ldr	r3, [pc, #332]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 8001580:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8001584:	60da      	str	r2, [r3, #12]
		HAL_TIM_Base_Start_IT(&htim15);
 8001586:	4851      	ldr	r0, [pc, #324]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 8001588:	f005 f9ae 	bl	80068e8 <HAL_TIM_Base_Start_IT>
		IsPressPeriodStart = true;
 800158c:	4b50      	ldr	r3, [pc, #320]	; (80016d0 <HAL_TIM_PeriodElapsedCallback+0x1a8>)
 800158e:	2201      	movs	r2, #1
 8001590:	701a      	strb	r2, [r3, #0]
		PowerButtonShortPress = false;
 8001592:	4b50      	ldr	r3, [pc, #320]	; (80016d4 <HAL_TIM_PeriodElapsedCallback+0x1ac>)
 8001594:	2200      	movs	r2, #0
 8001596:	701a      	strb	r2, [r3, #0]
 8001598:	e06b      	b.n	8001672 <HAL_TIM_PeriodElapsedCallback+0x14a>
	}
	else if(HAL_GPIO_ReadPin(Power_Button_GPIO_Port, Power_Button_Pin) == GPIO_PIN_RESET && !PowerButtonShortPress){
 800159a:	2180      	movs	r1, #128	; 0x80
 800159c:	4849      	ldr	r0, [pc, #292]	; (80016c4 <HAL_TIM_PeriodElapsedCallback+0x19c>)
 800159e:	f003 f999 	bl	80048d4 <HAL_GPIO_ReadPin>
 80015a2:	4603      	mov	r3, r0
 80015a4:	2b00      	cmp	r3, #0
 80015a6:	d11c      	bne.n	80015e2 <HAL_TIM_PeriodElapsedCallback+0xba>
 80015a8:	4b4a      	ldr	r3, [pc, #296]	; (80016d4 <HAL_TIM_PeriodElapsedCallback+0x1ac>)
 80015aa:	781b      	ldrb	r3, [r3, #0]
 80015ac:	f083 0301 	eor.w	r3, r3, #1
 80015b0:	b2db      	uxtb	r3, r3
 80015b2:	2b00      	cmp	r3, #0
 80015b4:	d015      	beq.n	80015e2 <HAL_TIM_PeriodElapsedCallback+0xba>
		HAL_TIM_Base_Stop_IT(&htim15);
 80015b6:	4845      	ldr	r0, [pc, #276]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 80015b8:	f005 f9ea 	bl	8006990 <HAL_TIM_Base_Stop_IT>
		__HAL_TIM_SET_AUTORELOAD(&htim15, BUTTON_LONGPRESS_PERIOD);
 80015bc:	4b43      	ldr	r3, [pc, #268]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80015c4:	62da      	str	r2, [r3, #44]	; 0x2c
 80015c6:	4b41      	ldr	r3, [pc, #260]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 80015c8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80015cc:	60da      	str	r2, [r3, #12]
		HAL_TIM_Base_Start_IT(&htim15);
 80015ce:	483f      	ldr	r0, [pc, #252]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 80015d0:	f005 f98a 	bl	80068e8 <HAL_TIM_Base_Start_IT>
		PowerButtonShortPress = true;
 80015d4:	4b3f      	ldr	r3, [pc, #252]	; (80016d4 <HAL_TIM_PeriodElapsedCallback+0x1ac>)
 80015d6:	2201      	movs	r2, #1
 80015d8:	701a      	strb	r2, [r3, #0]
		PowerButtonLongPress = false;
 80015da:	4b3f      	ldr	r3, [pc, #252]	; (80016d8 <HAL_TIM_PeriodElapsedCallback+0x1b0>)
 80015dc:	2200      	movs	r2, #0
 80015de:	701a      	strb	r2, [r3, #0]
 80015e0:	e047      	b.n	8001672 <HAL_TIM_PeriodElapsedCallback+0x14a>
	}
	else if(HAL_GPIO_ReadPin(Power_Button_GPIO_Port, Power_Button_Pin) == GPIO_PIN_RESET && !PowerButtonLongPress){
 80015e2:	2180      	movs	r1, #128	; 0x80
 80015e4:	4837      	ldr	r0, [pc, #220]	; (80016c4 <HAL_TIM_PeriodElapsedCallback+0x19c>)
 80015e6:	f003 f975 	bl	80048d4 <HAL_GPIO_ReadPin>
 80015ea:	4603      	mov	r3, r0
 80015ec:	2b00      	cmp	r3, #0
 80015ee:	d11c      	bne.n	800162a <HAL_TIM_PeriodElapsedCallback+0x102>
 80015f0:	4b39      	ldr	r3, [pc, #228]	; (80016d8 <HAL_TIM_PeriodElapsedCallback+0x1b0>)
 80015f2:	781b      	ldrb	r3, [r3, #0]
 80015f4:	f083 0301 	eor.w	r3, r3, #1
 80015f8:	b2db      	uxtb	r3, r3
 80015fa:	2b00      	cmp	r3, #0
 80015fc:	d015      	beq.n	800162a <HAL_TIM_PeriodElapsedCallback+0x102>
		HAL_TIM_Base_Stop_IT(&htim15);
 80015fe:	4833      	ldr	r0, [pc, #204]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 8001600:	f005 f9c6 	bl	8006990 <HAL_TIM_Base_Stop_IT>
		PowerButtonLongPress = true;
 8001604:	4b34      	ldr	r3, [pc, #208]	; (80016d8 <HAL_TIM_PeriodElapsedCallback+0x1b0>)
 8001606:	2201      	movs	r2, #1
 8001608:	701a      	strb	r2, [r3, #0]
		PowerButtonUnintentionalPress = false;
 800160a:	4b34      	ldr	r3, [pc, #208]	; (80016dc <HAL_TIM_PeriodElapsedCallback+0x1b4>)
 800160c:	2200      	movs	r2, #0
 800160e:	701a      	strb	r2, [r3, #0]
		__HAL_TIM_SET_AUTORELOAD(&htim15, BUTTON_UNINTENTIONAL_PERIOD);
 8001610:	4b2e      	ldr	r3, [pc, #184]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 8001618:	62da      	str	r2, [r3, #44]	; 0x2c
 800161a:	4b2c      	ldr	r3, [pc, #176]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 800161c:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 8001620:	60da      	str	r2, [r3, #12]
		HAL_TIM_Base_Start_IT(&htim15);
 8001622:	482a      	ldr	r0, [pc, #168]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 8001624:	f005 f960 	bl	80068e8 <HAL_TIM_Base_Start_IT>
 8001628:	e023      	b.n	8001672 <HAL_TIM_PeriodElapsedCallback+0x14a>
	}
	else if(HAL_GPIO_ReadPin(Power_Button_GPIO_Port, Power_Button_Pin) == GPIO_PIN_RESET && !PowerButtonUnintentionalPress)
 800162a:	2180      	movs	r1, #128	; 0x80
 800162c:	4825      	ldr	r0, [pc, #148]	; (80016c4 <HAL_TIM_PeriodElapsedCallback+0x19c>)
 800162e:	f003 f951 	bl	80048d4 <HAL_GPIO_ReadPin>
 8001632:	4603      	mov	r3, r0
 8001634:	2b00      	cmp	r3, #0
 8001636:	d11c      	bne.n	8001672 <HAL_TIM_PeriodElapsedCallback+0x14a>
 8001638:	4b28      	ldr	r3, [pc, #160]	; (80016dc <HAL_TIM_PeriodElapsedCallback+0x1b4>)
 800163a:	781b      	ldrb	r3, [r3, #0]
 800163c:	f083 0301 	eor.w	r3, r3, #1
 8001640:	b2db      	uxtb	r3, r3
 8001642:	2b00      	cmp	r3, #0
 8001644:	d015      	beq.n	8001672 <HAL_TIM_PeriodElapsedCallback+0x14a>
	{
		//unintentional button press so clear everything for next press
		HAL_TIM_Base_Stop_IT(&htim15);
 8001646:	4821      	ldr	r0, [pc, #132]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 8001648:	f005 f9a2 	bl	8006990 <HAL_TIM_Base_Stop_IT>
		__HAL_TIM_SET_AUTORELOAD(&htim15, BUTTON_DEBOUNCE_MS);	//Reset power button debounce period
 800164c:	4b1f      	ldr	r3, [pc, #124]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 800164e:	681b      	ldr	r3, [r3, #0]
 8001650:	2264      	movs	r2, #100	; 0x64
 8001652:	62da      	str	r2, [r3, #44]	; 0x2c
 8001654:	4b1d      	ldr	r3, [pc, #116]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 8001656:	2264      	movs	r2, #100	; 0x64
 8001658:	60da      	str	r2, [r3, #12]
		PowerButtonDebounced = true;
 800165a:	4b1b      	ldr	r3, [pc, #108]	; (80016c8 <HAL_TIM_PeriodElapsedCallback+0x1a0>)
 800165c:	2201      	movs	r2, #1
 800165e:	701a      	strb	r2, [r3, #0]
		IsPressPeriodStart = false;
 8001660:	4b1b      	ldr	r3, [pc, #108]	; (80016d0 <HAL_TIM_PeriodElapsedCallback+0x1a8>)
 8001662:	2200      	movs	r2, #0
 8001664:	701a      	strb	r2, [r3, #0]
		PowerButtonShortPress = false;
 8001666:	4b1b      	ldr	r3, [pc, #108]	; (80016d4 <HAL_TIM_PeriodElapsedCallback+0x1ac>)
 8001668:	2200      	movs	r2, #0
 800166a:	701a      	strb	r2, [r3, #0]
		PowerButtonLongPress = false;
 800166c:	4b1a      	ldr	r3, [pc, #104]	; (80016d8 <HAL_TIM_PeriodElapsedCallback+0x1b0>)
 800166e:	2200      	movs	r2, #0
 8001670:	701a      	strb	r2, [r3, #0]
	}

	if(HAL_GPIO_ReadPin(Power_Button_GPIO_Port, Power_Button_Pin) == GPIO_PIN_SET && IsPressPeriodStart)
 8001672:	2180      	movs	r1, #128	; 0x80
 8001674:	4813      	ldr	r0, [pc, #76]	; (80016c4 <HAL_TIM_PeriodElapsedCallback+0x19c>)
 8001676:	f003 f92d 	bl	80048d4 <HAL_GPIO_ReadPin>
 800167a:	4603      	mov	r3, r0
 800167c:	2b01      	cmp	r3, #1
 800167e:	d11c      	bne.n	80016ba <HAL_TIM_PeriodElapsedCallback+0x192>
 8001680:	4b13      	ldr	r3, [pc, #76]	; (80016d0 <HAL_TIM_PeriodElapsedCallback+0x1a8>)
 8001682:	781b      	ldrb	r3, [r3, #0]
 8001684:	2b00      	cmp	r3, #0
 8001686:	d018      	beq.n	80016ba <HAL_TIM_PeriodElapsedCallback+0x192>
	{
		//Cancelled press so clear everything for next press
		HAL_TIM_Base_Stop_IT(&htim15);
 8001688:	4810      	ldr	r0, [pc, #64]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 800168a:	f005 f981 	bl	8006990 <HAL_TIM_Base_Stop_IT>
		__HAL_TIM_SET_AUTORELOAD(&htim15, BUTTON_DEBOUNCE_MS);	//Reset power button debounce period
 800168e:	4b0f      	ldr	r3, [pc, #60]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	2264      	movs	r2, #100	; 0x64
 8001694:	62da      	str	r2, [r3, #44]	; 0x2c
 8001696:	4b0d      	ldr	r3, [pc, #52]	; (80016cc <HAL_TIM_PeriodElapsedCallback+0x1a4>)
 8001698:	2264      	movs	r2, #100	; 0x64
 800169a:	60da      	str	r2, [r3, #12]
		PowerButtonDebounced = true;
 800169c:	4b0a      	ldr	r3, [pc, #40]	; (80016c8 <HAL_TIM_PeriodElapsedCallback+0x1a0>)
 800169e:	2201      	movs	r2, #1
 80016a0:	701a      	strb	r2, [r3, #0]
		IsPressPeriodStart = false;
 80016a2:	4b0b      	ldr	r3, [pc, #44]	; (80016d0 <HAL_TIM_PeriodElapsedCallback+0x1a8>)
 80016a4:	2200      	movs	r2, #0
 80016a6:	701a      	strb	r2, [r3, #0]
		PowerButtonShortPress = false;
 80016a8:	4b0a      	ldr	r3, [pc, #40]	; (80016d4 <HAL_TIM_PeriodElapsedCallback+0x1ac>)
 80016aa:	2200      	movs	r2, #0
 80016ac:	701a      	strb	r2, [r3, #0]
		PowerButtonLongPress = false;
 80016ae:	4b0a      	ldr	r3, [pc, #40]	; (80016d8 <HAL_TIM_PeriodElapsedCallback+0x1b0>)
 80016b0:	2200      	movs	r2, #0
 80016b2:	701a      	strb	r2, [r3, #0]
		PowerButtonUnintentionalPress = false;
 80016b4:	4b09      	ldr	r3, [pc, #36]	; (80016dc <HAL_TIM_PeriodElapsedCallback+0x1b4>)
 80016b6:	2200      	movs	r2, #0
 80016b8:	701a      	strb	r2, [r3, #0]
	}




}
 80016ba:	bf00      	nop
 80016bc:	3708      	adds	r7, #8
 80016be:	46bd      	mov	sp, r7
 80016c0:	bd80      	pop	{r7, pc}
 80016c2:	bf00      	nop
 80016c4:	48000800 	.word	0x48000800
 80016c8:	20000008 	.word	0x20000008
 80016cc:	200003e0 	.word	0x200003e0
 80016d0:	2000042f 	.word	0x2000042f
 80016d4:	20000430 	.word	0x20000430
 80016d8:	20000431 	.word	0x20000431
 80016dc:	20000432 	.word	0x20000432

080016e0 <MAX17048_Init>:
#if (USINGMAX17048)

uint8_t CurrentBatteryPercentage;

	bool MAX17048_Init()
	{
 80016e0:	b580      	push	{r7, lr}
 80016e2:	b082      	sub	sp, #8
 80016e4:	af00      	add	r7, sp, #0
		bool ok = true;
 80016e6:	2301      	movs	r3, #1
 80016e8:	71fb      	strb	r3, [r7, #7]
		if (ok) ok = max17048_is_present(&hi2c1);
 80016ea:	79fb      	ldrb	r3, [r7, #7]
 80016ec:	2b00      	cmp	r3, #0
 80016ee:	d004      	beq.n	80016fa <MAX17048_Init+0x1a>
 80016f0:	4825      	ldr	r0, [pc, #148]	; (8001788 <MAX17048_Init+0xa8>)
 80016f2:	f000 ff3e 	bl	8002572 <max17048_is_present>
 80016f6:	4603      	mov	r3, r0
 80016f8:	71fb      	strb	r3, [r7, #7]
		if (ok) ok = max17048_set_undervolted_voltage(&hi2c1, Battery_UnderVoltage);
 80016fa:	79fb      	ldrb	r3, [r7, #7]
 80016fc:	2b00      	cmp	r3, #0
 80016fe:	d006      	beq.n	800170e <MAX17048_Init+0x2e>
 8001700:	f44f 6148 	mov.w	r1, #3200	; 0xc80
 8001704:	4820      	ldr	r0, [pc, #128]	; (8001788 <MAX17048_Init+0xa8>)
 8001706:	f000 ff99 	bl	800263c <max17048_set_undervolted_voltage>
 800170a:	4603      	mov	r3, r0
 800170c:	71fb      	strb	r3, [r7, #7]
		if (ok) ok = max17048_set_overvolted_voltage(&hi2c1, Battery_OverVoltage);
 800170e:	79fb      	ldrb	r3, [r7, #7]
 8001710:	2b00      	cmp	r3, #0
 8001712:	d006      	beq.n	8001722 <MAX17048_Init+0x42>
 8001714:	f241 0168 	movw	r1, #4200	; 0x1068
 8001718:	481b      	ldr	r0, [pc, #108]	; (8001788 <MAX17048_Init+0xa8>)
 800171a:	f000 ffaf 	bl	800267c <max17048_set_overvolted_voltage>
 800171e:	4603      	mov	r3, r0
 8001720:	71fb      	strb	r3, [r7, #7]
		if (ok) ok = max17048_set_reset_voltage(&hi2c1, Battery_ResetVoltage);
 8001722:	79fb      	ldrb	r3, [r7, #7]
 8001724:	2b00      	cmp	r3, #0
 8001726:	d006      	beq.n	8001736 <MAX17048_Init+0x56>
 8001728:	f640 11c4 	movw	r1, #2500	; 0x9c4
 800172c:	4816      	ldr	r0, [pc, #88]	; (8001788 <MAX17048_Init+0xa8>)
 800172e:	f000 ffc1 	bl	80026b4 <max17048_set_reset_voltage>
 8001732:	4603      	mov	r3, r0
 8001734:	71fb      	strb	r3, [r7, #7]
		if (ok) ok = max17048_set_bat_low_soc(&hi2c1, Battery_LowSOCAlert);
 8001736:	79fb      	ldrb	r3, [r7, #7]
 8001738:	2b00      	cmp	r3, #0
 800173a:	d005      	beq.n	8001748 <MAX17048_Init+0x68>
 800173c:	211e      	movs	r1, #30
 800173e:	4812      	ldr	r0, [pc, #72]	; (8001788 <MAX17048_Init+0xa8>)
 8001740:	f000 ff57 	bl	80025f2 <max17048_set_bat_low_soc>
 8001744:	4603      	mov	r3, r0
 8001746:	71fb      	strb	r3, [r7, #7]
		if (ok) ok = max17048_set_voltage_reset_alert(&hi2c1, false);
 8001748:	79fb      	ldrb	r3, [r7, #7]
 800174a:	2b00      	cmp	r3, #0
 800174c:	d005      	beq.n	800175a <MAX17048_Init+0x7a>
 800174e:	2100      	movs	r1, #0
 8001750:	480d      	ldr	r0, [pc, #52]	; (8001788 <MAX17048_Init+0xa8>)
 8001752:	f000 ffe8 	bl	8002726 <max17048_set_voltage_reset_alert>
 8001756:	4603      	mov	r3, r0
 8001758:	71fb      	strb	r3, [r7, #7]
		if (ok) ok = max17048_set_soc_change_alert(&hi2c1, false);
 800175a:	79fb      	ldrb	r3, [r7, #7]
 800175c:	2b00      	cmp	r3, #0
 800175e:	d005      	beq.n	800176c <MAX17048_Init+0x8c>
 8001760:	2100      	movs	r1, #0
 8001762:	4809      	ldr	r0, [pc, #36]	; (8001788 <MAX17048_Init+0xa8>)
 8001764:	f000 ffc8 	bl	80026f8 <max17048_set_soc_change_alert>
 8001768:	4603      	mov	r3, r0
 800176a:	71fb      	strb	r3, [r7, #7]
		if (ok) ok = max17048_clear_alerts(&hi2c1);
 800176c:	79fb      	ldrb	r3, [r7, #7]
 800176e:	2b00      	cmp	r3, #0
 8001770:	d004      	beq.n	800177c <MAX17048_Init+0x9c>
 8001772:	4805      	ldr	r0, [pc, #20]	; (8001788 <MAX17048_Init+0xa8>)
 8001774:	f000 ffef 	bl	8002756 <max17048_clear_alerts>
 8001778:	4603      	mov	r3, r0
 800177a:	71fb      	strb	r3, [r7, #7]
		return ok;
 800177c:	79fb      	ldrb	r3, [r7, #7]
	}
 800177e:	4618      	mov	r0, r3
 8001780:	3708      	adds	r7, #8
 8001782:	46bd      	mov	sp, r7
 8001784:	bd80      	pop	{r7, pc}
 8001786:	bf00      	nop
 8001788:	200002f4 	.word	0x200002f4

0800178c <Remap>:
#endif

static int Remap (float value, float from1, float to1, float from2, float to2) {
 800178c:	b480      	push	{r7}
 800178e:	b087      	sub	sp, #28
 8001790:	af00      	add	r7, sp, #0
 8001792:	ed87 0a05 	vstr	s0, [r7, #20]
 8001796:	edc7 0a04 	vstr	s1, [r7, #16]
 800179a:	ed87 1a03 	vstr	s2, [r7, #12]
 800179e:	edc7 1a02 	vstr	s3, [r7, #8]
 80017a2:	ed87 2a01 	vstr	s4, [r7, #4]
	return ((value - from1) / (to1 - from1) * (to2 - from2)) + from2;
 80017a6:	ed97 7a05 	vldr	s14, [r7, #20]
 80017aa:	edd7 7a04 	vldr	s15, [r7, #16]
 80017ae:	ee77 6a67 	vsub.f32	s13, s14, s15
 80017b2:	ed97 7a03 	vldr	s14, [r7, #12]
 80017b6:	edd7 7a04 	vldr	s15, [r7, #16]
 80017ba:	ee77 7a67 	vsub.f32	s15, s14, s15
 80017be:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80017c2:	edd7 6a01 	vldr	s13, [r7, #4]
 80017c6:	edd7 7a02 	vldr	s15, [r7, #8]
 80017ca:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80017ce:	ee27 7a27 	vmul.f32	s14, s14, s15
 80017d2:	edd7 7a02 	vldr	s15, [r7, #8]
 80017d6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80017de:	ee17 3a90 	vmov	r3, s15
}
 80017e2:	4618      	mov	r0, r3
 80017e4:	371c      	adds	r7, #28
 80017e6:	46bd      	mov	sp, r7
 80017e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ec:	4770      	bx	lr
	...

080017f0 <Set_RGB>:

void Set_RGB(uint8_t Red,uint8_t Green,uint8_t Blue) {
 80017f0:	b580      	push	{r7, lr}
 80017f2:	b082      	sub	sp, #8
 80017f4:	af00      	add	r7, sp, #0
 80017f6:	4603      	mov	r3, r0
 80017f8:	71fb      	strb	r3, [r7, #7]
 80017fa:	460b      	mov	r3, r1
 80017fc:	71bb      	strb	r3, [r7, #6]
 80017fe:	4613      	mov	r3, r2
 8001800:	717b      	strb	r3, [r7, #5]
	//invert 0-100 -> 100-0 in case LED is common Anode and grounded to STM's GPIO's
	Red = Remap(Red, 0, 100, 100, 0);
 8001802:	79fb      	ldrb	r3, [r7, #7]
 8001804:	ee07 3a90 	vmov	s15, r3
 8001808:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800180c:	ed9f 2a21 	vldr	s4, [pc, #132]	; 8001894 <Set_RGB+0xa4>
 8001810:	eddf 1a21 	vldr	s3, [pc, #132]	; 8001898 <Set_RGB+0xa8>
 8001814:	ed9f 1a20 	vldr	s2, [pc, #128]	; 8001898 <Set_RGB+0xa8>
 8001818:	eddf 0a1e 	vldr	s1, [pc, #120]	; 8001894 <Set_RGB+0xa4>
 800181c:	eeb0 0a67 	vmov.f32	s0, s15
 8001820:	f7ff ffb4 	bl	800178c <Remap>
 8001824:	4603      	mov	r3, r0
 8001826:	71fb      	strb	r3, [r7, #7]
	Green = Remap(Green, 0, 100, 100, 0);
 8001828:	79bb      	ldrb	r3, [r7, #6]
 800182a:	ee07 3a90 	vmov	s15, r3
 800182e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001832:	ed9f 2a18 	vldr	s4, [pc, #96]	; 8001894 <Set_RGB+0xa4>
 8001836:	eddf 1a18 	vldr	s3, [pc, #96]	; 8001898 <Set_RGB+0xa8>
 800183a:	ed9f 1a17 	vldr	s2, [pc, #92]	; 8001898 <Set_RGB+0xa8>
 800183e:	eddf 0a15 	vldr	s1, [pc, #84]	; 8001894 <Set_RGB+0xa4>
 8001842:	eeb0 0a67 	vmov.f32	s0, s15
 8001846:	f7ff ffa1 	bl	800178c <Remap>
 800184a:	4603      	mov	r3, r0
 800184c:	71bb      	strb	r3, [r7, #6]
	Blue = Remap(Blue, 0, 100, 100, 0);
 800184e:	797b      	ldrb	r3, [r7, #5]
 8001850:	ee07 3a90 	vmov	s15, r3
 8001854:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001858:	ed9f 2a0e 	vldr	s4, [pc, #56]	; 8001894 <Set_RGB+0xa4>
 800185c:	eddf 1a0e 	vldr	s3, [pc, #56]	; 8001898 <Set_RGB+0xa8>
 8001860:	ed9f 1a0d 	vldr	s2, [pc, #52]	; 8001898 <Set_RGB+0xa8>
 8001864:	eddf 0a0b 	vldr	s1, [pc, #44]	; 8001894 <Set_RGB+0xa4>
 8001868:	eeb0 0a67 	vmov.f32	s0, s15
 800186c:	f7ff ff8e 	bl	800178c <Remap>
 8001870:	4603      	mov	r3, r0
 8001872:	717b      	strb	r3, [r7, #5]
	TIM2->CCR1 = Red;
 8001874:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001878:	79fb      	ldrb	r3, [r7, #7]
 800187a:	6353      	str	r3, [r2, #52]	; 0x34
	TIM2->CCR2 = Green;
 800187c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001880:	79bb      	ldrb	r3, [r7, #6]
 8001882:	6393      	str	r3, [r2, #56]	; 0x38
	TIM2->CCR3 = Blue;
 8001884:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001888:	797b      	ldrb	r3, [r7, #5]
 800188a:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 800188c:	bf00      	nop
 800188e:	3708      	adds	r7, #8
 8001890:	46bd      	mov	sp, r7
 8001892:	bd80      	pop	{r7, pc}
 8001894:	00000000 	.word	0x00000000
 8001898:	42c80000 	.word	0x42c80000

0800189c <GetADCValue>:


float GetADCValue(float numberOfSamples)
{
 800189c:	b580      	push	{r7, lr}
 800189e:	b084      	sub	sp, #16
 80018a0:	af00      	add	r7, sp, #0
 80018a2:	ed87 0a01 	vstr	s0, [r7, #4]
	float averageRaw = 0;
 80018a6:	f04f 0300 	mov.w	r3, #0
 80018aa:	60fb      	str	r3, [r7, #12]
	float i = 0;
 80018ac:	f04f 0300 	mov.w	r3, #0
 80018b0:	60bb      	str	r3, [r7, #8]
	for (i = 0; i < numberOfSamples; ++i)
 80018b2:	f04f 0300 	mov.w	r3, #0
 80018b6:	60bb      	str	r3, [r7, #8]
 80018b8:	e01e      	b.n	80018f8 <GetADCValue+0x5c>
	{
		HAL_ADC_Start(&hadc1);
 80018ba:	481a      	ldr	r0, [pc, #104]	; (8001924 <GetADCValue+0x88>)
 80018bc:	f001 fe3e 	bl	800353c <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, 10);
 80018c0:	210a      	movs	r1, #10
 80018c2:	4818      	ldr	r0, [pc, #96]	; (8001924 <GetADCValue+0x88>)
 80018c4:	f001 fed0 	bl	8003668 <HAL_ADC_PollForConversion>
		averageRaw += HAL_ADC_GetValue(&hadc1);
 80018c8:	4816      	ldr	r0, [pc, #88]	; (8001924 <GetADCValue+0x88>)
 80018ca:	f001 ff5c 	bl	8003786 <HAL_ADC_GetValue>
 80018ce:	ee07 0a90 	vmov	s15, r0
 80018d2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80018d6:	ed97 7a03 	vldr	s14, [r7, #12]
 80018da:	ee77 7a27 	vadd.f32	s15, s14, s15
 80018de:	edc7 7a03 	vstr	s15, [r7, #12]
		HAL_ADC_Stop(&hadc1);
 80018e2:	4810      	ldr	r0, [pc, #64]	; (8001924 <GetADCValue+0x88>)
 80018e4:	f001 fe8d 	bl	8003602 <HAL_ADC_Stop>
	for (i = 0; i < numberOfSamples; ++i)
 80018e8:	edd7 7a02 	vldr	s15, [r7, #8]
 80018ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80018f0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80018f4:	edc7 7a02 	vstr	s15, [r7, #8]
 80018f8:	ed97 7a02 	vldr	s14, [r7, #8]
 80018fc:	edd7 7a01 	vldr	s15, [r7, #4]
 8001900:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001908:	d4d7      	bmi.n	80018ba <GetADCValue+0x1e>
	}

	return (averageRaw/numberOfSamples);
 800190a:	ed97 7a03 	vldr	s14, [r7, #12]
 800190e:	edd7 7a01 	vldr	s15, [r7, #4]
 8001912:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8001916:	eef0 7a66 	vmov.f32	s15, s13

}
 800191a:	eeb0 0a67 	vmov.f32	s0, s15
 800191e:	3710      	adds	r7, #16
 8001920:	46bd      	mov	sp, r7
 8001922:	bd80      	pop	{r7, pc}
 8001924:	20000290 	.word	0x20000290

08001928 <readThermistor>:
const double BETA               = 3974.0;
const double ROOM_TEMP          = 298.15;   // room temperature in Kelvin
const double RESISTOR_ROOM_TEMP = 10000.0;

double readThermistor()
{
 8001928:	b5b0      	push	{r4, r5, r7, lr}
 800192a:	b088      	sub	sp, #32
 800192c:	af00      	add	r7, sp, #0

 double rThermistor = 0;            // Holds thermistor resistance value
 800192e:	f04f 0200 	mov.w	r2, #0
 8001932:	f04f 0300 	mov.w	r3, #0
 8001936:	e9c7 2306 	strd	r2, r3, [r7, #24]
 double tKelvin     = 0;            // Holds calculated temperature
 800193a:	f04f 0200 	mov.w	r2, #0
 800193e:	f04f 0300 	mov.w	r3, #0
 8001942:	e9c7 2304 	strd	r2, r3, [r7, #16]
 double tCelsius    = 0;            // Hold temperature in celsius
 8001946:	f04f 0200 	mov.w	r2, #0
 800194a:	f04f 0300 	mov.w	r3, #0
 800194e:	e9c7 2302 	strd	r2, r3, [r7, #8]
 double adcAverage  = 0;            // Holds the average voltage measurement
 8001952:	f04f 0200 	mov.w	r2, #0
 8001956:	f04f 0300 	mov.w	r3, #0
 800195a:	e9c7 2300 	strd	r2, r3, [r7]

 adcAverage = GetADCValue(100);
 800195e:	ed9f 0a48 	vldr	s0, [pc, #288]	; 8001a80 <readThermistor+0x158>
 8001962:	f7ff ff9b 	bl	800189c <GetADCValue>
 8001966:	ee10 3a10 	vmov	r3, s0
 800196a:	4618      	mov	r0, r3
 800196c:	f7fe fdec 	bl	8000548 <__aeabi_f2d>
 8001970:	4602      	mov	r2, r0
 8001972:	460b      	mov	r3, r1
 8001974:	e9c7 2300 	strd	r2, r3, [r7]

 rThermistor = BALANCE_RESISTOR * ( (MAX_ADC / adcAverage) - 1);
 8001978:	a135      	add	r1, pc, #212	; (adr r1, 8001a50 <readThermistor+0x128>)
 800197a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800197e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001982:	f7fe ff63 	bl	800084c <__aeabi_ddiv>
 8001986:	4602      	mov	r2, r0
 8001988:	460b      	mov	r3, r1
 800198a:	4610      	mov	r0, r2
 800198c:	4619      	mov	r1, r3
 800198e:	f04f 0200 	mov.w	r2, #0
 8001992:	4b3c      	ldr	r3, [pc, #240]	; (8001a84 <readThermistor+0x15c>)
 8001994:	f7fe fc78 	bl	8000288 <__aeabi_dsub>
 8001998:	4602      	mov	r2, r0
 800199a:	460b      	mov	r3, r1
 800199c:	4610      	mov	r0, r2
 800199e:	4619      	mov	r1, r3
 80019a0:	a32d      	add	r3, pc, #180	; (adr r3, 8001a58 <readThermistor+0x130>)
 80019a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019a6:	f7fe fe27 	bl	80005f8 <__aeabi_dmul>
 80019aa:	4602      	mov	r2, r0
 80019ac:	460b      	mov	r3, r1
 80019ae:	e9c7 2306 	strd	r2, r3, [r7, #24]

 tKelvin = (BETA * ROOM_TEMP) /
 80019b2:	a12b      	add	r1, pc, #172	; (adr r1, 8001a60 <readThermistor+0x138>)
 80019b4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80019b8:	a32b      	add	r3, pc, #172	; (adr r3, 8001a68 <readThermistor+0x140>)
 80019ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019be:	f7fe fe1b 	bl	80005f8 <__aeabi_dmul>
 80019c2:	4602      	mov	r2, r0
 80019c4:	460b      	mov	r3, r1
 80019c6:	4614      	mov	r4, r2
 80019c8:	461d      	mov	r5, r3
           (BETA + (ROOM_TEMP * log(rThermistor / RESISTOR_ROOM_TEMP)));
 80019ca:	a329      	add	r3, pc, #164	; (adr r3, 8001a70 <readThermistor+0x148>)
 80019cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019d0:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80019d4:	f7fe ff3a 	bl	800084c <__aeabi_ddiv>
 80019d8:	4602      	mov	r2, r0
 80019da:	460b      	mov	r3, r1
 80019dc:	ec43 2b17 	vmov	d7, r2, r3
 80019e0:	eeb0 0a47 	vmov.f32	s0, s14
 80019e4:	eef0 0a67 	vmov.f32	s1, s15
 80019e8:	f00a fe2e 	bl	800c648 <log>
 80019ec:	ec51 0b10 	vmov	r0, r1, d0
 80019f0:	a31d      	add	r3, pc, #116	; (adr r3, 8001a68 <readThermistor+0x140>)
 80019f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019f6:	f7fe fdff 	bl	80005f8 <__aeabi_dmul>
 80019fa:	4602      	mov	r2, r0
 80019fc:	460b      	mov	r3, r1
 80019fe:	4610      	mov	r0, r2
 8001a00:	4619      	mov	r1, r3
 8001a02:	a317      	add	r3, pc, #92	; (adr r3, 8001a60 <readThermistor+0x138>)
 8001a04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a08:	f7fe fc40 	bl	800028c <__adddf3>
 8001a0c:	4602      	mov	r2, r0
 8001a0e:	460b      	mov	r3, r1
 tKelvin = (BETA * ROOM_TEMP) /
 8001a10:	4620      	mov	r0, r4
 8001a12:	4629      	mov	r1, r5
 8001a14:	f7fe ff1a 	bl	800084c <__aeabi_ddiv>
 8001a18:	4602      	mov	r2, r0
 8001a1a:	460b      	mov	r3, r1
 8001a1c:	e9c7 2304 	strd	r2, r3, [r7, #16]

 tCelsius = tKelvin - 273.15;  // convert kelvin to celsius
 8001a20:	a315      	add	r3, pc, #84	; (adr r3, 8001a78 <readThermistor+0x150>)
 8001a22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a26:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001a2a:	f7fe fc2d 	bl	8000288 <__aeabi_dsub>
 8001a2e:	4602      	mov	r2, r0
 8001a30:	460b      	mov	r3, r1
 8001a32:	e9c7 2302 	strd	r2, r3, [r7, #8]

 return tCelsius;    // Return the temperature in Celsius
 8001a36:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001a3a:	ec43 2b17 	vmov	d7, r2, r3
}
 8001a3e:	eeb0 0a47 	vmov.f32	s0, s14
 8001a42:	eef0 0a67 	vmov.f32	s1, s15
 8001a46:	3720      	adds	r7, #32
 8001a48:	46bd      	mov	sp, r7
 8001a4a:	bdb0      	pop	{r4, r5, r7, pc}
 8001a4c:	f3af 8000 	nop.w
 8001a50:	00000000 	.word	0x00000000
 8001a54:	40affe00 	.word	0x40affe00
 8001a58:	00000000 	.word	0x00000000
 8001a5c:	40c2f700 	.word	0x40c2f700
 8001a60:	00000000 	.word	0x00000000
 8001a64:	40af0c00 	.word	0x40af0c00
 8001a68:	66666666 	.word	0x66666666
 8001a6c:	4072a266 	.word	0x4072a266
 8001a70:	00000000 	.word	0x00000000
 8001a74:	40c38800 	.word	0x40c38800
 8001a78:	66666666 	.word	0x66666666
 8001a7c:	40711266 	.word	0x40711266
 8001a80:	42c80000 	.word	0x42c80000
 8001a84:	3ff00000 	.word	0x3ff00000

08001a88 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001a88:	b590      	push	{r4, r7, lr}
 8001a8a:	b083      	sub	sp, #12
 8001a8c:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001a8e:	f001 f94e 	bl	8002d2e <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001a92:	f000 f9bf 	bl	8001e14 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001a96:	f000 fc2d 	bl	80022f4 <MX_GPIO_Init>
  MX_I2C1_Init();
 8001a9a:	f000 fa65 	bl	8001f68 <MX_I2C1_Init>
  MX_TIM2_Init();
 8001a9e:	f000 fb4b 	bl	8002138 <MX_TIM2_Init>
  MX_TIM15_Init();
 8001aa2:	f000 fbd5 	bl	8002250 <MX_TIM15_Init>
  MX_ADC1_Init();
 8001aa6:	f000 f9fb 	bl	8001ea0 <MX_ADC1_Init>
  MX_TIM1_Init();
 8001aaa:	f000 fa9b 	bl	8001fe4 <MX_TIM1_Init>
  /* USER CODE BEGIN 2 */
#endif


  __HAL_TIM_SET_AUTORELOAD(&htim15, BUTTON_DEBOUNCE_MS);	//Set power button debounce period
 8001aae:	4bc2      	ldr	r3, [pc, #776]	; (8001db8 <main+0x330>)
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	2264      	movs	r2, #100	; 0x64
 8001ab4:	62da      	str	r2, [r3, #44]	; 0x2c
 8001ab6:	4bc0      	ldr	r3, [pc, #768]	; (8001db8 <main+0x330>)
 8001ab8:	2264      	movs	r2, #100	; 0x64
 8001aba:	60da      	str	r2, [r3, #12]

  PID(&Fan_PID, &MeasuredTemperature, &PIDOut, &Temperautre_SetPoint, 2, 5, 1, _PID_P_ON_E, _PID_CD_DIRECT);
 8001abc:	2300      	movs	r3, #0
 8001abe:	9301      	str	r3, [sp, #4]
 8001ac0:	2301      	movs	r3, #1
 8001ac2:	9300      	str	r3, [sp, #0]
 8001ac4:	ed9f 2bb2 	vldr	d2, [pc, #712]	; 8001d90 <main+0x308>
 8001ac8:	ed9f 1bb3 	vldr	d1, [pc, #716]	; 8001d98 <main+0x310>
 8001acc:	ed9f 0bb4 	vldr	d0, [pc, #720]	; 8001da0 <main+0x318>
 8001ad0:	4bba      	ldr	r3, [pc, #744]	; (8001dbc <main+0x334>)
 8001ad2:	4abb      	ldr	r2, [pc, #748]	; (8001dc0 <main+0x338>)
 8001ad4:	49bb      	ldr	r1, [pc, #748]	; (8001dc4 <main+0x33c>)
 8001ad6:	48bc      	ldr	r0, [pc, #752]	; (8001dc8 <main+0x340>)
 8001ad8:	f7ff fa6e 	bl	8000fb8 <PID>
  PID_SetMode(&Fan_PID, _PID_MODE_AUTOMATIC);
 8001adc:	2101      	movs	r1, #1
 8001ade:	48ba      	ldr	r0, [pc, #744]	; (8001dc8 <main+0x340>)
 8001ae0:	f7ff fab6 	bl	8001050 <PID_SetMode>
  PID_SetSampleTime(&Fan_PID, 500);
 8001ae4:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001ae8:	48b7      	ldr	r0, [pc, #732]	; (8001dc8 <main+0x340>)
 8001aea:	f7ff fc25 	bl	8001338 <PID_SetSampleTime>
  PID_SetOutputLimits(&Fan_PID, 40, 100);
 8001aee:	ed9f 1bae 	vldr	d1, [pc, #696]	; 8001da8 <main+0x320>
 8001af2:	ed9f 0baf 	vldr	d0, [pc, #700]	; 8001db0 <main+0x328>
 8001af6:	48b4      	ldr	r0, [pc, #720]	; (8001dc8 <main+0x340>)
 8001af8:	f7ff fac8 	bl	800108c <PID_SetOutputLimits>

  HAL_Delay(70);	// For stability
 8001afc:	2046      	movs	r0, #70	; 0x46
 8001afe:	f001 f98b 	bl	8002e18 <HAL_Delay>

  HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);	//Calibrate ADC for better temperature reading
 8001b02:	217f      	movs	r1, #127	; 0x7f
 8001b04:	48b1      	ldr	r0, [pc, #708]	; (8001dcc <main+0x344>)
 8001b06:	f002 fbf9 	bl	80042fc <HAL_ADCEx_Calibration_Start>

#if (USINGMAX17048)
  MAX17048_Init();
 8001b0a:	f7ff fde9 	bl	80016e0 <MAX17048_Init>
#endif

  if(!BQ_Init())
 8001b0e:	f7ff f937 	bl	8000d80 <BQ_Init>
 8001b12:	4603      	mov	r3, r0
 8001b14:	f083 0301 	eor.w	r3, r3, #1
 8001b18:	b2db      	uxtb	r3, r3
 8001b1a:	2b00      	cmp	r3, #0
 8001b1c:	d01c      	beq.n	8001b58 <main+0xd0>
  {
	  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001b1e:	2100      	movs	r1, #0
 8001b20:	48ab      	ldr	r0, [pc, #684]	; (8001dd0 <main+0x348>)
 8001b22:	f004 ffc5 	bl	8006ab0 <HAL_TIM_PWM_Start>
	  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001b26:	2104      	movs	r1, #4
 8001b28:	48a9      	ldr	r0, [pc, #676]	; (8001dd0 <main+0x348>)
 8001b2a:	f004 ffc1 	bl	8006ab0 <HAL_TIM_PWM_Start>
	  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001b2e:	2108      	movs	r1, #8
 8001b30:	48a7      	ldr	r0, [pc, #668]	; (8001dd0 <main+0x348>)
 8001b32:	f004 ffbd 	bl	8006ab0 <HAL_TIM_PWM_Start>

	  while(1)		//if BQ not present, then warn using that it's not finding it by flashing red
	  {
		  Set_RGB(100, 0, 0);
 8001b36:	2200      	movs	r2, #0
 8001b38:	2100      	movs	r1, #0
 8001b3a:	2064      	movs	r0, #100	; 0x64
 8001b3c:	f7ff fe58 	bl	80017f0 <Set_RGB>
		  HAL_Delay(250);
 8001b40:	20fa      	movs	r0, #250	; 0xfa
 8001b42:	f001 f969 	bl	8002e18 <HAL_Delay>
		  Set_RGB(0, 0, 0);
 8001b46:	2200      	movs	r2, #0
 8001b48:	2100      	movs	r1, #0
 8001b4a:	2000      	movs	r0, #0
 8001b4c:	f7ff fe50 	bl	80017f0 <Set_RGB>
		  HAL_Delay(250);
 8001b50:	20fa      	movs	r0, #250	; 0xfa
 8001b52:	f001 f961 	bl	8002e18 <HAL_Delay>
		  Set_RGB(100, 0, 0);
 8001b56:	e7ee      	b.n	8001b36 <main+0xae>
	  }

  }

  HAL_Delay(70);	// For stability
 8001b58:	2046      	movs	r0, #70	; 0x46
 8001b5a:	f001 f95d 	bl	8002e18 <HAL_Delay>

  max17048_get_soc(&hi2c1, &CurrentBatteryPercentage);	//Get current Battery Percentage
 8001b5e:	499d      	ldr	r1, [pc, #628]	; (8001dd4 <main+0x34c>)
 8001b60:	489d      	ldr	r0, [pc, #628]	; (8001dd8 <main+0x350>)
 8001b62:	f000 fd27 	bl	80025b4 <max17048_get_soc>
  Set_RGB( 100, 100, 100 );
 8001b66:	2264      	movs	r2, #100	; 0x64
 8001b68:	2164      	movs	r1, #100	; 0x64
 8001b6a:	2064      	movs	r0, #100	; 0x64
 8001b6c:	f7ff fe40 	bl	80017f0 <Set_RGB>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if(BQ_FLAG)
 8001b70:	4b9a      	ldr	r3, [pc, #616]	; (8001ddc <main+0x354>)
 8001b72:	781b      	ldrb	r3, [r3, #0]
 8001b74:	2b00      	cmp	r3, #0
 8001b76:	d002      	beq.n	8001b7e <main+0xf6>
	  {
		  BQ_FLAG = false;	//clear flag
 8001b78:	4b98      	ldr	r3, [pc, #608]	; (8001ddc <main+0x354>)
 8001b7a:	2200      	movs	r2, #0
 8001b7c:	701a      	strb	r2, [r3, #0]
		   * something with the BQ INT
		   */
	  }

#if (USINGMAX17048)
	  if(MAX_FLAG)
 8001b7e:	4b98      	ldr	r3, [pc, #608]	; (8001de0 <main+0x358>)
 8001b80:	781b      	ldrb	r3, [r3, #0]
 8001b82:	2b00      	cmp	r3, #0
 8001b84:	d002      	beq.n	8001b8c <main+0x104>
	  {
		  MAX_FLAG = false;	//clear flag
 8001b86:	4b96      	ldr	r3, [pc, #600]	; (8001de0 <main+0x358>)
 8001b88:	2200      	movs	r2, #0
 8001b8a:	701a      	strb	r2, [r3, #0]
	  }

#endif

	  if(SystemPowerState)
 8001b8c:	4b95      	ldr	r3, [pc, #596]	; (8001de4 <main+0x35c>)
 8001b8e:	781b      	ldrb	r3, [r3, #0]
 8001b90:	2b00      	cmp	r3, #0
 8001b92:	f000 809e 	beq.w	8001cd2 <main+0x24a>
	  {
		  /*
		   * While system is running,the code below will always run
		   */

		  if(!InitialSystemBoot)	//Start a boot sequence once
 8001b96:	4b94      	ldr	r3, [pc, #592]	; (8001de8 <main+0x360>)
 8001b98:	781b      	ldrb	r3, [r3, #0]
 8001b9a:	f083 0301 	eor.w	r3, r3, #1
 8001b9e:	b2db      	uxtb	r3, r3
 8001ba0:	2b00      	cmp	r3, #0
 8001ba2:	d02f      	beq.n	8001c04 <main+0x17c>
		  {
			  InitialSystemBoot = true;	//Do it once
 8001ba4:	4b90      	ldr	r3, [pc, #576]	; (8001de8 <main+0x360>)
 8001ba6:	2201      	movs	r2, #1
 8001ba8:	701a      	strb	r2, [r3, #0]
			  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);	//R
 8001baa:	2100      	movs	r1, #0
 8001bac:	4888      	ldr	r0, [pc, #544]	; (8001dd0 <main+0x348>)
 8001bae:	f004 ff7f 	bl	8006ab0 <HAL_TIM_PWM_Start>
			  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);	//G
 8001bb2:	2104      	movs	r1, #4
 8001bb4:	4886      	ldr	r0, [pc, #536]	; (8001dd0 <main+0x348>)
 8001bb6:	f004 ff7b 	bl	8006ab0 <HAL_TIM_PWM_Start>
			  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);	//B
 8001bba:	2108      	movs	r1, #8
 8001bbc:	4884      	ldr	r0, [pc, #528]	; (8001dd0 <main+0x348>)
 8001bbe:	f004 ff77 	bl	8006ab0 <HAL_TIM_PWM_Start>
			  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_4);	//Fan PWM
 8001bc2:	210c      	movs	r1, #12
 8001bc4:	4889      	ldr	r0, [pc, #548]	; (8001dec <main+0x364>)
 8001bc6:	f004 ff73 	bl	8006ab0 <HAL_TIM_PWM_Start>
			  Set_RGB( 100, 0, 0 );
 8001bca:	2200      	movs	r2, #0
 8001bcc:	2100      	movs	r1, #0
 8001bce:	2064      	movs	r0, #100	; 0x64
 8001bd0:	f7ff fe0e 	bl	80017f0 <Set_RGB>
			  HAL_Delay(100);
 8001bd4:	2064      	movs	r0, #100	; 0x64
 8001bd6:	f001 f91f 	bl	8002e18 <HAL_Delay>
			  Set_RGB(0, 100, 0);
 8001bda:	2200      	movs	r2, #0
 8001bdc:	2164      	movs	r1, #100	; 0x64
 8001bde:	2000      	movs	r0, #0
 8001be0:	f7ff fe06 	bl	80017f0 <Set_RGB>
			  HAL_Delay(100);
 8001be4:	2064      	movs	r0, #100	; 0x64
 8001be6:	f001 f917 	bl	8002e18 <HAL_Delay>
			  Set_RGB(0, 0, 100);
 8001bea:	2264      	movs	r2, #100	; 0x64
 8001bec:	2100      	movs	r1, #0
 8001bee:	2000      	movs	r0, #0
 8001bf0:	f7ff fdfe 	bl	80017f0 <Set_RGB>
			  HAL_Delay(200);
 8001bf4:	20c8      	movs	r0, #200	; 0xc8
 8001bf6:	f001 f90f 	bl	8002e18 <HAL_Delay>
			  HAL_GPIO_WritePin(En_Regulators_GPIO_Port, En_Regulators_Pin, GPIO_PIN_SET);	//Turn on Regulators
 8001bfa:	2201      	movs	r2, #1
 8001bfc:	2140      	movs	r1, #64	; 0x40
 8001bfe:	487c      	ldr	r0, [pc, #496]	; (8001df0 <main+0x368>)
 8001c00:	f002 fe80 	bl	8004904 <HAL_GPIO_WritePin>
		  }


		  if(IsSystemCharging)
 8001c04:	4b7b      	ldr	r3, [pc, #492]	; (8001df4 <main+0x36c>)
 8001c06:	781b      	ldrb	r3, [r3, #0]
 8001c08:	2b00      	cmp	r3, #0
 8001c0a:	d021      	beq.n	8001c50 <main+0x1c8>
		  {
			  max17048_get_soc(&hi2c1, &CurrentBatteryPercentage);	//Get current Battery Percentage
 8001c0c:	4971      	ldr	r1, [pc, #452]	; (8001dd4 <main+0x34c>)
 8001c0e:	4872      	ldr	r0, [pc, #456]	; (8001dd8 <main+0x350>)
 8001c10:	f000 fcd0 	bl	80025b4 <max17048_get_soc>
			  if(CurrentBatteryPercentage < 75)
 8001c14:	4b6f      	ldr	r3, [pc, #444]	; (8001dd4 <main+0x34c>)
 8001c16:	781b      	ldrb	r3, [r3, #0]
 8001c18:	2b4a      	cmp	r3, #74	; 0x4a
 8001c1a:	d805      	bhi.n	8001c28 <main+0x1a0>
			  {
				  Set_RGB(100, 64, 0);
 8001c1c:	2200      	movs	r2, #0
 8001c1e:	2140      	movs	r1, #64	; 0x40
 8001c20:	2064      	movs	r0, #100	; 0x64
 8001c22:	f7ff fde5 	bl	80017f0 <Set_RGB>
 8001c26:	e040      	b.n	8001caa <main+0x222>
			  }
			  else if(CurrentBatteryPercentage >= 75 && CurrentBatteryPercentage < 90)
 8001c28:	4b6a      	ldr	r3, [pc, #424]	; (8001dd4 <main+0x34c>)
 8001c2a:	781b      	ldrb	r3, [r3, #0]
 8001c2c:	2b4a      	cmp	r3, #74	; 0x4a
 8001c2e:	d909      	bls.n	8001c44 <main+0x1bc>
 8001c30:	4b68      	ldr	r3, [pc, #416]	; (8001dd4 <main+0x34c>)
 8001c32:	781b      	ldrb	r3, [r3, #0]
 8001c34:	2b59      	cmp	r3, #89	; 0x59
 8001c36:	d805      	bhi.n	8001c44 <main+0x1bc>
			  {
				  Set_RGB(0, 100, 0);
 8001c38:	2200      	movs	r2, #0
 8001c3a:	2164      	movs	r1, #100	; 0x64
 8001c3c:	2000      	movs	r0, #0
 8001c3e:	f7ff fdd7 	bl	80017f0 <Set_RGB>
 8001c42:	e032      	b.n	8001caa <main+0x222>
			  }else
			  {
				  Set_RGB(0, 0, 100);
 8001c44:	2264      	movs	r2, #100	; 0x64
 8001c46:	2100      	movs	r1, #0
 8001c48:	2000      	movs	r0, #0
 8001c4a:	f7ff fdd1 	bl	80017f0 <Set_RGB>
 8001c4e:	e02c      	b.n	8001caa <main+0x222>
			  }
		  }
		  else
		  {
			  Set_RGB(Remap(CurrentBatteryPercentage, 0, 100, 100, 0), 0, Remap(CurrentBatteryPercentage, 0, 100, 40, 100));
 8001c50:	4b60      	ldr	r3, [pc, #384]	; (8001dd4 <main+0x34c>)
 8001c52:	781b      	ldrb	r3, [r3, #0]
 8001c54:	ee07 3a90 	vmov	s15, r3
 8001c58:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001c5c:	ed9f 2a66 	vldr	s4, [pc, #408]	; 8001df8 <main+0x370>
 8001c60:	eddf 1a66 	vldr	s3, [pc, #408]	; 8001dfc <main+0x374>
 8001c64:	ed9f 1a65 	vldr	s2, [pc, #404]	; 8001dfc <main+0x374>
 8001c68:	eddf 0a63 	vldr	s1, [pc, #396]	; 8001df8 <main+0x370>
 8001c6c:	eeb0 0a67 	vmov.f32	s0, s15
 8001c70:	f7ff fd8c 	bl	800178c <Remap>
 8001c74:	4603      	mov	r3, r0
 8001c76:	b2dc      	uxtb	r4, r3
 8001c78:	4b56      	ldr	r3, [pc, #344]	; (8001dd4 <main+0x34c>)
 8001c7a:	781b      	ldrb	r3, [r3, #0]
 8001c7c:	ee07 3a90 	vmov	s15, r3
 8001c80:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001c84:	ed9f 2a5d 	vldr	s4, [pc, #372]	; 8001dfc <main+0x374>
 8001c88:	eddf 1a5d 	vldr	s3, [pc, #372]	; 8001e00 <main+0x378>
 8001c8c:	ed9f 1a5b 	vldr	s2, [pc, #364]	; 8001dfc <main+0x374>
 8001c90:	eddf 0a59 	vldr	s1, [pc, #356]	; 8001df8 <main+0x370>
 8001c94:	eeb0 0a67 	vmov.f32	s0, s15
 8001c98:	f7ff fd78 	bl	800178c <Remap>
 8001c9c:	4603      	mov	r3, r0
 8001c9e:	b2db      	uxtb	r3, r3
 8001ca0:	461a      	mov	r2, r3
 8001ca2:	2100      	movs	r1, #0
 8001ca4:	4620      	mov	r0, r4
 8001ca6:	f7ff fda3 	bl	80017f0 <Set_RGB>
		  }

		  //Get Temperautre
		  MeasuredTemperature = readThermistor();
 8001caa:	f7ff fe3d 	bl	8001928 <readThermistor>
 8001cae:	eeb0 7a40 	vmov.f32	s14, s0
 8001cb2:	eef0 7a60 	vmov.f32	s15, s1
 8001cb6:	4b43      	ldr	r3, [pc, #268]	; (8001dc4 <main+0x33c>)
 8001cb8:	ed83 7b00 	vstr	d7, [r3]
		  /* The output is in "pid.out" */

		  /* Set New Duty cycle output*/
		  TIM1->CCR4 =PIDOut;
 8001cbc:	4b40      	ldr	r3, [pc, #256]	; (8001dc0 <main+0x338>)
 8001cbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cc2:	4c50      	ldr	r4, [pc, #320]	; (8001e04 <main+0x37c>)
 8001cc4:	4610      	mov	r0, r2
 8001cc6:	4619      	mov	r1, r3
 8001cc8:	f7fe ff6e 	bl	8000ba8 <__aeabi_d2uiz>
 8001ccc:	4603      	mov	r3, r0
 8001cce:	6423      	str	r3, [r4, #64]	; 0x40
 8001cd0:	e74e      	b.n	8001b70 <main+0xe8>



	  }else if(!SystemPowerState)
 8001cd2:	4b44      	ldr	r3, [pc, #272]	; (8001de4 <main+0x35c>)
 8001cd4:	781b      	ldrb	r3, [r3, #0]
 8001cd6:	f083 0301 	eor.w	r3, r3, #1
 8001cda:	b2db      	uxtb	r3, r3
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	f43f af47 	beq.w	8001b70 <main+0xe8>
	  {
			/*
			* While system is Down,the code below will always run
			*/

			if(InitialSystemBoot)	//Start shutdown sequence
 8001ce2:	4b41      	ldr	r3, [pc, #260]	; (8001de8 <main+0x360>)
 8001ce4:	781b      	ldrb	r3, [r3, #0]
 8001ce6:	2b00      	cmp	r3, #0
 8001ce8:	d030      	beq.n	8001d4c <main+0x2c4>
			{
				InitialSystemBoot = false;
 8001cea:	4b3f      	ldr	r3, [pc, #252]	; (8001de8 <main+0x360>)
 8001cec:	2200      	movs	r2, #0
 8001cee:	701a      	strb	r2, [r3, #0]
				Set_RGB( 0, 100, 0 );
 8001cf0:	2200      	movs	r2, #0
 8001cf2:	2164      	movs	r1, #100	; 0x64
 8001cf4:	2000      	movs	r0, #0
 8001cf6:	f7ff fd7b 	bl	80017f0 <Set_RGB>
				HAL_Delay(200);
 8001cfa:	20c8      	movs	r0, #200	; 0xc8
 8001cfc:	f001 f88c 	bl	8002e18 <HAL_Delay>
				Set_RGB(0, 0, 100);
 8001d00:	2264      	movs	r2, #100	; 0x64
 8001d02:	2100      	movs	r1, #0
 8001d04:	2000      	movs	r0, #0
 8001d06:	f7ff fd73 	bl	80017f0 <Set_RGB>
				HAL_Delay(200);
 8001d0a:	20c8      	movs	r0, #200	; 0xc8
 8001d0c:	f001 f884 	bl	8002e18 <HAL_Delay>
				Set_RGB( 0, 100, 0 );
 8001d10:	2200      	movs	r2, #0
 8001d12:	2164      	movs	r1, #100	; 0x64
 8001d14:	2000      	movs	r0, #0
 8001d16:	f7ff fd6b 	bl	80017f0 <Set_RGB>
				HAL_Delay(200);
 8001d1a:	20c8      	movs	r0, #200	; 0xc8
 8001d1c:	f001 f87c 	bl	8002e18 <HAL_Delay>
				Set_RGB(0, 0, 100);
 8001d20:	2264      	movs	r2, #100	; 0x64
 8001d22:	2100      	movs	r1, #0
 8001d24:	2000      	movs	r0, #0
 8001d26:	f7ff fd63 	bl	80017f0 <Set_RGB>
				HAL_Delay(200);
 8001d2a:	20c8      	movs	r0, #200	; 0xc8
 8001d2c:	f001 f874 	bl	8002e18 <HAL_Delay>
				Set_RGB(0, 0, 0);
 8001d30:	2200      	movs	r2, #0
 8001d32:	2100      	movs	r1, #0
 8001d34:	2000      	movs	r0, #0
 8001d36:	f7ff fd5b 	bl	80017f0 <Set_RGB>
				HAL_GPIO_WritePin(En_Regulators_GPIO_Port, En_Regulators_Pin, GPIO_PIN_RESET);	//Turn off Regulators
 8001d3a:	2200      	movs	r2, #0
 8001d3c:	2140      	movs	r1, #64	; 0x40
 8001d3e:	482c      	ldr	r0, [pc, #176]	; (8001df0 <main+0x368>)
 8001d40:	f002 fde0 	bl	8004904 <HAL_GPIO_WritePin>
				HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_4);	//Fan PWM
 8001d44:	210c      	movs	r1, #12
 8001d46:	4829      	ldr	r0, [pc, #164]	; (8001dec <main+0x364>)
 8001d48:	f004 ff90 	bl	8006c6c <HAL_TIM_PWM_Stop>
			}

			if(IsSystemCharging)
 8001d4c:	4b29      	ldr	r3, [pc, #164]	; (8001df4 <main+0x36c>)
 8001d4e:	781b      	ldrb	r3, [r3, #0]
 8001d50:	2b00      	cmp	r3, #0
 8001d52:	f43f af0d 	beq.w	8001b70 <main+0xe8>
			{
				max17048_get_soc(&hi2c1, &CurrentBatteryPercentage);	//Get current Battery Percentage
 8001d56:	491f      	ldr	r1, [pc, #124]	; (8001dd4 <main+0x34c>)
 8001d58:	481f      	ldr	r0, [pc, #124]	; (8001dd8 <main+0x350>)
 8001d5a:	f000 fc2b 	bl	80025b4 <max17048_get_soc>
				if(CurrentBatteryPercentage < 75)
 8001d5e:	4b1d      	ldr	r3, [pc, #116]	; (8001dd4 <main+0x34c>)
 8001d60:	781b      	ldrb	r3, [r3, #0]
 8001d62:	2b4a      	cmp	r3, #74	; 0x4a
 8001d64:	d805      	bhi.n	8001d72 <main+0x2ea>
				{
					Set_RGB(100, 64, 0);
 8001d66:	2200      	movs	r2, #0
 8001d68:	2140      	movs	r1, #64	; 0x40
 8001d6a:	2064      	movs	r0, #100	; 0x64
 8001d6c:	f7ff fd40 	bl	80017f0 <Set_RGB>
 8001d70:	e6fe      	b.n	8001b70 <main+0xe8>
				}
				else if(CurrentBatteryPercentage >= 75 && CurrentBatteryPercentage < 90)
 8001d72:	4b18      	ldr	r3, [pc, #96]	; (8001dd4 <main+0x34c>)
 8001d74:	781b      	ldrb	r3, [r3, #0]
 8001d76:	2b4a      	cmp	r3, #74	; 0x4a
 8001d78:	d946      	bls.n	8001e08 <main+0x380>
 8001d7a:	4b16      	ldr	r3, [pc, #88]	; (8001dd4 <main+0x34c>)
 8001d7c:	781b      	ldrb	r3, [r3, #0]
 8001d7e:	2b59      	cmp	r3, #89	; 0x59
 8001d80:	d842      	bhi.n	8001e08 <main+0x380>
				{
					Set_RGB(0, 100, 0);
 8001d82:	2200      	movs	r2, #0
 8001d84:	2164      	movs	r1, #100	; 0x64
 8001d86:	2000      	movs	r0, #0
 8001d88:	f7ff fd32 	bl	80017f0 <Set_RGB>
 8001d8c:	e041      	b.n	8001e12 <main+0x38a>
 8001d8e:	bf00      	nop
 8001d90:	00000000 	.word	0x00000000
 8001d94:	3ff00000 	.word	0x3ff00000
 8001d98:	00000000 	.word	0x00000000
 8001d9c:	40140000 	.word	0x40140000
 8001da0:	00000000 	.word	0x00000000
 8001da4:	40000000 	.word	0x40000000
 8001da8:	00000000 	.word	0x00000000
 8001dac:	40590000 	.word	0x40590000
 8001db0:	00000000 	.word	0x00000000
 8001db4:	40440000 	.word	0x40440000
 8001db8:	200003e0 	.word	0x200003e0
 8001dbc:	20000000 	.word	0x20000000
 8001dc0:	20000218 	.word	0x20000218
 8001dc4:	20000210 	.word	0x20000210
 8001dc8:	20000220 	.word	0x20000220
 8001dcc:	20000290 	.word	0x20000290
 8001dd0:	20000394 	.word	0x20000394
 8001dd4:	20000436 	.word	0x20000436
 8001dd8:	200002f4 	.word	0x200002f4
 8001ddc:	2000042d 	.word	0x2000042d
 8001de0:	2000042e 	.word	0x2000042e
 8001de4:	20000433 	.word	0x20000433
 8001de8:	20000434 	.word	0x20000434
 8001dec:	20000348 	.word	0x20000348
 8001df0:	48000800 	.word	0x48000800
 8001df4:	20000435 	.word	0x20000435
 8001df8:	00000000 	.word	0x00000000
 8001dfc:	42c80000 	.word	0x42c80000
 8001e00:	42200000 	.word	0x42200000
 8001e04:	40012c00 	.word	0x40012c00
				}else
				{
					Set_RGB(0, 0, 100);
 8001e08:	2264      	movs	r2, #100	; 0x64
 8001e0a:	2100      	movs	r1, #0
 8001e0c:	2000      	movs	r0, #0
 8001e0e:	f7ff fcef 	bl	80017f0 <Set_RGB>
	  if(BQ_FLAG)
 8001e12:	e6ad      	b.n	8001b70 <main+0xe8>

08001e14 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001e14:	b580      	push	{r7, lr}
 8001e16:	b096      	sub	sp, #88	; 0x58
 8001e18:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001e1a:	f107 0314 	add.w	r3, r7, #20
 8001e1e:	2244      	movs	r2, #68	; 0x44
 8001e20:	2100      	movs	r1, #0
 8001e22:	4618      	mov	r0, r3
 8001e24:	f005 ff98 	bl	8007d58 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001e28:	463b      	mov	r3, r7
 8001e2a:	2200      	movs	r2, #0
 8001e2c:	601a      	str	r2, [r3, #0]
 8001e2e:	605a      	str	r2, [r3, #4]
 8001e30:	609a      	str	r2, [r3, #8]
 8001e32:	60da      	str	r2, [r3, #12]
 8001e34:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8001e36:	f44f 7000 	mov.w	r0, #512	; 0x200
 8001e3a:	f003 fb9d 	bl	8005578 <HAL_PWREx_ControlVoltageScaling>
 8001e3e:	4603      	mov	r3, r0
 8001e40:	2b00      	cmp	r3, #0
 8001e42:	d001      	beq.n	8001e48 <SystemClock_Config+0x34>
  {
    Error_Handler();
 8001e44:	f000 fad2 	bl	80023ec <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 8001e48:	2310      	movs	r3, #16
 8001e4a:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8001e4c:	2301      	movs	r3, #1
 8001e4e:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8001e50:	2300      	movs	r3, #0
 8001e52:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8001e54:	2360      	movs	r3, #96	; 0x60
 8001e56:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8001e58:	2300      	movs	r3, #0
 8001e5a:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e5c:	f107 0314 	add.w	r3, r7, #20
 8001e60:	4618      	mov	r0, r3
 8001e62:	f003 fbdf 	bl	8005624 <HAL_RCC_OscConfig>
 8001e66:	4603      	mov	r3, r0
 8001e68:	2b00      	cmp	r3, #0
 8001e6a:	d001      	beq.n	8001e70 <SystemClock_Config+0x5c>
  {
    Error_Handler();
 8001e6c:	f000 fabe 	bl	80023ec <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001e70:	230f      	movs	r3, #15
 8001e72:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 8001e74:	2300      	movs	r3, #0
 8001e76:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001e78:	2300      	movs	r3, #0
 8001e7a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001e7c:	2300      	movs	r3, #0
 8001e7e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001e80:	2300      	movs	r3, #0
 8001e82:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001e84:	463b      	mov	r3, r7
 8001e86:	2100      	movs	r1, #0
 8001e88:	4618      	mov	r0, r3
 8001e8a:	f003 ffdf 	bl	8005e4c <HAL_RCC_ClockConfig>
 8001e8e:	4603      	mov	r3, r0
 8001e90:	2b00      	cmp	r3, #0
 8001e92:	d001      	beq.n	8001e98 <SystemClock_Config+0x84>
  {
    Error_Handler();
 8001e94:	f000 faaa 	bl	80023ec <Error_Handler>
  }
}
 8001e98:	bf00      	nop
 8001e9a:	3758      	adds	r7, #88	; 0x58
 8001e9c:	46bd      	mov	sp, r7
 8001e9e:	bd80      	pop	{r7, pc}

08001ea0 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	b086      	sub	sp, #24
 8001ea4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001ea6:	463b      	mov	r3, r7
 8001ea8:	2200      	movs	r2, #0
 8001eaa:	601a      	str	r2, [r3, #0]
 8001eac:	605a      	str	r2, [r3, #4]
 8001eae:	609a      	str	r2, [r3, #8]
 8001eb0:	60da      	str	r2, [r3, #12]
 8001eb2:	611a      	str	r2, [r3, #16]
 8001eb4:	615a      	str	r2, [r3, #20]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8001eb6:	4b29      	ldr	r3, [pc, #164]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001eb8:	4a29      	ldr	r2, [pc, #164]	; (8001f60 <MX_ADC1_Init+0xc0>)
 8001eba:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV4;
 8001ebc:	4b27      	ldr	r3, [pc, #156]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001ebe:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8001ec2:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001ec4:	4b25      	ldr	r3, [pc, #148]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001ec6:	2200      	movs	r2, #0
 8001ec8:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001eca:	4b24      	ldr	r3, [pc, #144]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001ecc:	2200      	movs	r2, #0
 8001ece:	60da      	str	r2, [r3, #12]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8001ed0:	4b22      	ldr	r3, [pc, #136]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001ed2:	2200      	movs	r2, #0
 8001ed4:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001ed6:	4b21      	ldr	r3, [pc, #132]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001ed8:	2204      	movs	r2, #4
 8001eda:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8001edc:	4b1f      	ldr	r3, [pc, #124]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001ede:	2200      	movs	r2, #0
 8001ee0:	761a      	strb	r2, [r3, #24]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001ee2:	4b1e      	ldr	r3, [pc, #120]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001ee4:	2200      	movs	r2, #0
 8001ee6:	765a      	strb	r2, [r3, #25]
  hadc1.Init.NbrOfConversion = 1;
 8001ee8:	4b1c      	ldr	r3, [pc, #112]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001eea:	2201      	movs	r2, #1
 8001eec:	61da      	str	r2, [r3, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001eee:	4b1b      	ldr	r3, [pc, #108]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001ef0:	2200      	movs	r2, #0
 8001ef2:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001ef6:	4b19      	ldr	r3, [pc, #100]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001ef8:	2200      	movs	r2, #0
 8001efa:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001efc:	4b17      	ldr	r3, [pc, #92]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001efe:	2200      	movs	r2, #0
 8001f00:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001f02:	4b16      	ldr	r3, [pc, #88]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001f04:	2200      	movs	r2, #0
 8001f06:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8001f0a:	4b14      	ldr	r3, [pc, #80]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001f0c:	2200      	movs	r2, #0
 8001f0e:	635a      	str	r2, [r3, #52]	; 0x34
  hadc1.Init.OversamplingMode = DISABLE;
 8001f10:	4b12      	ldr	r3, [pc, #72]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001f12:	2200      	movs	r2, #0
 8001f14:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001f18:	4810      	ldr	r0, [pc, #64]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001f1a:	f001 f9c7 	bl	80032ac <HAL_ADC_Init>
 8001f1e:	4603      	mov	r3, r0
 8001f20:	2b00      	cmp	r3, #0
 8001f22:	d001      	beq.n	8001f28 <MX_ADC1_Init+0x88>
  {
    Error_Handler();
 8001f24:	f000 fa62 	bl	80023ec <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_9;
 8001f28:	4b0e      	ldr	r3, [pc, #56]	; (8001f64 <MX_ADC1_Init+0xc4>)
 8001f2a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8001f2c:	2306      	movs	r3, #6
 8001f2e:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_247CYCLES_5;
 8001f30:	2306      	movs	r3, #6
 8001f32:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8001f34:	237f      	movs	r3, #127	; 0x7f
 8001f36:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8001f38:	2304      	movs	r3, #4
 8001f3a:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 8001f3c:	2300      	movs	r3, #0
 8001f3e:	617b      	str	r3, [r7, #20]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001f40:	463b      	mov	r3, r7
 8001f42:	4619      	mov	r1, r3
 8001f44:	4805      	ldr	r0, [pc, #20]	; (8001f5c <MX_ADC1_Init+0xbc>)
 8001f46:	f001 fc2b 	bl	80037a0 <HAL_ADC_ConfigChannel>
 8001f4a:	4603      	mov	r3, r0
 8001f4c:	2b00      	cmp	r3, #0
 8001f4e:	d001      	beq.n	8001f54 <MX_ADC1_Init+0xb4>
  {
    Error_Handler();
 8001f50:	f000 fa4c 	bl	80023ec <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001f54:	bf00      	nop
 8001f56:	3718      	adds	r7, #24
 8001f58:	46bd      	mov	sp, r7
 8001f5a:	bd80      	pop	{r7, pc}
 8001f5c:	20000290 	.word	0x20000290
 8001f60:	50040000 	.word	0x50040000
 8001f64:	25b00200 	.word	0x25b00200

08001f68 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001f68:	b580      	push	{r7, lr}
 8001f6a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001f6c:	4b1b      	ldr	r3, [pc, #108]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001f6e:	4a1c      	ldr	r2, [pc, #112]	; (8001fe0 <MX_I2C1_Init+0x78>)
 8001f70:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00000004;
 8001f72:	4b1a      	ldr	r3, [pc, #104]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001f74:	2204      	movs	r2, #4
 8001f76:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8001f78:	4b18      	ldr	r3, [pc, #96]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001f7e:	4b17      	ldr	r3, [pc, #92]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001f80:	2201      	movs	r2, #1
 8001f82:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001f84:	4b15      	ldr	r3, [pc, #84]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001f86:	2200      	movs	r2, #0
 8001f88:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8001f8a:	4b14      	ldr	r3, [pc, #80]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001f8c:	2200      	movs	r2, #0
 8001f8e:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001f90:	4b12      	ldr	r3, [pc, #72]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001f92:	2200      	movs	r2, #0
 8001f94:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001f96:	4b11      	ldr	r3, [pc, #68]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001f98:	2200      	movs	r2, #0
 8001f9a:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001f9c:	4b0f      	ldr	r3, [pc, #60]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001f9e:	2200      	movs	r2, #0
 8001fa0:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001fa2:	480e      	ldr	r0, [pc, #56]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001fa4:	f002 fcde 	bl	8004964 <HAL_I2C_Init>
 8001fa8:	4603      	mov	r3, r0
 8001faa:	2b00      	cmp	r3, #0
 8001fac:	d001      	beq.n	8001fb2 <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8001fae:	f000 fa1d 	bl	80023ec <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001fb2:	2100      	movs	r1, #0
 8001fb4:	4809      	ldr	r0, [pc, #36]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001fb6:	f003 fa39 	bl	800542c <HAL_I2CEx_ConfigAnalogFilter>
 8001fba:	4603      	mov	r3, r0
 8001fbc:	2b00      	cmp	r3, #0
 8001fbe:	d001      	beq.n	8001fc4 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8001fc0:	f000 fa14 	bl	80023ec <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001fc4:	2100      	movs	r1, #0
 8001fc6:	4805      	ldr	r0, [pc, #20]	; (8001fdc <MX_I2C1_Init+0x74>)
 8001fc8:	f003 fa7b 	bl	80054c2 <HAL_I2CEx_ConfigDigitalFilter>
 8001fcc:	4603      	mov	r3, r0
 8001fce:	2b00      	cmp	r3, #0
 8001fd0:	d001      	beq.n	8001fd6 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8001fd2:	f000 fa0b 	bl	80023ec <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001fd6:	bf00      	nop
 8001fd8:	bd80      	pop	{r7, pc}
 8001fda:	bf00      	nop
 8001fdc:	200002f4 	.word	0x200002f4
 8001fe0:	40005400 	.word	0x40005400

08001fe4 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001fe4:	b580      	push	{r7, lr}
 8001fe6:	b09a      	sub	sp, #104	; 0x68
 8001fe8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001fea:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8001fee:	2200      	movs	r2, #0
 8001ff0:	601a      	str	r2, [r3, #0]
 8001ff2:	605a      	str	r2, [r3, #4]
 8001ff4:	609a      	str	r2, [r3, #8]
 8001ff6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ff8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8001ffc:	2200      	movs	r2, #0
 8001ffe:	601a      	str	r2, [r3, #0]
 8002000:	605a      	str	r2, [r3, #4]
 8002002:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002004:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8002008:	2200      	movs	r2, #0
 800200a:	601a      	str	r2, [r3, #0]
 800200c:	605a      	str	r2, [r3, #4]
 800200e:	609a      	str	r2, [r3, #8]
 8002010:	60da      	str	r2, [r3, #12]
 8002012:	611a      	str	r2, [r3, #16]
 8002014:	615a      	str	r2, [r3, #20]
 8002016:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8002018:	1d3b      	adds	r3, r7, #4
 800201a:	222c      	movs	r2, #44	; 0x2c
 800201c:	2100      	movs	r1, #0
 800201e:	4618      	mov	r0, r3
 8002020:	f005 fe9a 	bl	8007d58 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8002024:	4b42      	ldr	r3, [pc, #264]	; (8002130 <MX_TIM1_Init+0x14c>)
 8002026:	4a43      	ldr	r2, [pc, #268]	; (8002134 <MX_TIM1_Init+0x150>)
 8002028:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 4-1;
 800202a:	4b41      	ldr	r3, [pc, #260]	; (8002130 <MX_TIM1_Init+0x14c>)
 800202c:	2203      	movs	r2, #3
 800202e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002030:	4b3f      	ldr	r3, [pc, #252]	; (8002130 <MX_TIM1_Init+0x14c>)
 8002032:	2200      	movs	r2, #0
 8002034:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 100;
 8002036:	4b3e      	ldr	r3, [pc, #248]	; (8002130 <MX_TIM1_Init+0x14c>)
 8002038:	2264      	movs	r2, #100	; 0x64
 800203a:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800203c:	4b3c      	ldr	r3, [pc, #240]	; (8002130 <MX_TIM1_Init+0x14c>)
 800203e:	2200      	movs	r2, #0
 8002040:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8002042:	4b3b      	ldr	r3, [pc, #236]	; (8002130 <MX_TIM1_Init+0x14c>)
 8002044:	2200      	movs	r2, #0
 8002046:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002048:	4b39      	ldr	r3, [pc, #228]	; (8002130 <MX_TIM1_Init+0x14c>)
 800204a:	2200      	movs	r2, #0
 800204c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800204e:	4838      	ldr	r0, [pc, #224]	; (8002130 <MX_TIM1_Init+0x14c>)
 8002050:	f004 fbf2 	bl	8006838 <HAL_TIM_Base_Init>
 8002054:	4603      	mov	r3, r0
 8002056:	2b00      	cmp	r3, #0
 8002058:	d001      	beq.n	800205e <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 800205a:	f000 f9c7 	bl	80023ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800205e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002062:	65bb      	str	r3, [r7, #88]	; 0x58
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002064:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8002068:	4619      	mov	r1, r3
 800206a:	4831      	ldr	r0, [pc, #196]	; (8002130 <MX_TIM1_Init+0x14c>)
 800206c:	f005 f8ba 	bl	80071e4 <HAL_TIM_ConfigClockSource>
 8002070:	4603      	mov	r3, r0
 8002072:	2b00      	cmp	r3, #0
 8002074:	d001      	beq.n	800207a <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 8002076:	f000 f9b9 	bl	80023ec <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 800207a:	482d      	ldr	r0, [pc, #180]	; (8002130 <MX_TIM1_Init+0x14c>)
 800207c:	f004 fcb7 	bl	80069ee <HAL_TIM_PWM_Init>
 8002080:	4603      	mov	r3, r0
 8002082:	2b00      	cmp	r3, #0
 8002084:	d001      	beq.n	800208a <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 8002086:	f000 f9b1 	bl	80023ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800208a:	2300      	movs	r3, #0
 800208c:	64fb      	str	r3, [r7, #76]	; 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 800208e:	2300      	movs	r3, #0
 8002090:	653b      	str	r3, [r7, #80]	; 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002092:	2300      	movs	r3, #0
 8002094:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8002096:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800209a:	4619      	mov	r1, r3
 800209c:	4824      	ldr	r0, [pc, #144]	; (8002130 <MX_TIM1_Init+0x14c>)
 800209e:	f005 fd35 	bl	8007b0c <HAL_TIMEx_MasterConfigSynchronization>
 80020a2:	4603      	mov	r3, r0
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d001      	beq.n	80020ac <MX_TIM1_Init+0xc8>
  {
    Error_Handler();
 80020a8:	f000 f9a0 	bl	80023ec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80020ac:	2360      	movs	r3, #96	; 0x60
 80020ae:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.Pulse = 0;
 80020b0:	2300      	movs	r3, #0
 80020b2:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80020b4:	2300      	movs	r3, #0
 80020b6:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80020b8:	2300      	movs	r3, #0
 80020ba:	643b      	str	r3, [r7, #64]	; 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80020bc:	2300      	movs	r3, #0
 80020be:	647b      	str	r3, [r7, #68]	; 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80020c0:	2300      	movs	r3, #0
 80020c2:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 80020c4:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80020c8:	220c      	movs	r2, #12
 80020ca:	4619      	mov	r1, r3
 80020cc:	4818      	ldr	r0, [pc, #96]	; (8002130 <MX_TIM1_Init+0x14c>)
 80020ce:	f004 ff75 	bl	8006fbc <HAL_TIM_PWM_ConfigChannel>
 80020d2:	4603      	mov	r3, r0
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	d001      	beq.n	80020dc <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 80020d8:	f000 f988 	bl	80023ec <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80020dc:	2300      	movs	r3, #0
 80020de:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80020e0:	2300      	movs	r3, #0
 80020e2:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80020e4:	2300      	movs	r3, #0
 80020e6:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80020e8:	2300      	movs	r3, #0
 80020ea:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80020ec:	2300      	movs	r3, #0
 80020ee:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80020f0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80020f4:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 80020f6:	2300      	movs	r3, #0
 80020f8:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 80020fa:	2300      	movs	r3, #0
 80020fc:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 80020fe:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002102:	627b      	str	r3, [r7, #36]	; 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 8002104:	2300      	movs	r3, #0
 8002106:	62bb      	str	r3, [r7, #40]	; 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8002108:	2300      	movs	r3, #0
 800210a:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800210c:	1d3b      	adds	r3, r7, #4
 800210e:	4619      	mov	r1, r3
 8002110:	4807      	ldr	r0, [pc, #28]	; (8002130 <MX_TIM1_Init+0x14c>)
 8002112:	f005 fd61 	bl	8007bd8 <HAL_TIMEx_ConfigBreakDeadTime>
 8002116:	4603      	mov	r3, r0
 8002118:	2b00      	cmp	r3, #0
 800211a:	d001      	beq.n	8002120 <MX_TIM1_Init+0x13c>
  {
    Error_Handler();
 800211c:	f000 f966 	bl	80023ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8002120:	4803      	ldr	r0, [pc, #12]	; (8002130 <MX_TIM1_Init+0x14c>)
 8002122:	f000 fc61 	bl	80029e8 <HAL_TIM_MspPostInit>

}
 8002126:	bf00      	nop
 8002128:	3768      	adds	r7, #104	; 0x68
 800212a:	46bd      	mov	sp, r7
 800212c:	bd80      	pop	{r7, pc}
 800212e:	bf00      	nop
 8002130:	20000348 	.word	0x20000348
 8002134:	40012c00 	.word	0x40012c00

08002138 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8002138:	b580      	push	{r7, lr}
 800213a:	b08e      	sub	sp, #56	; 0x38
 800213c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800213e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002142:	2200      	movs	r2, #0
 8002144:	601a      	str	r2, [r3, #0]
 8002146:	605a      	str	r2, [r3, #4]
 8002148:	609a      	str	r2, [r3, #8]
 800214a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800214c:	f107 031c 	add.w	r3, r7, #28
 8002150:	2200      	movs	r2, #0
 8002152:	601a      	str	r2, [r3, #0]
 8002154:	605a      	str	r2, [r3, #4]
 8002156:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002158:	463b      	mov	r3, r7
 800215a:	2200      	movs	r2, #0
 800215c:	601a      	str	r2, [r3, #0]
 800215e:	605a      	str	r2, [r3, #4]
 8002160:	609a      	str	r2, [r3, #8]
 8002162:	60da      	str	r2, [r3, #12]
 8002164:	611a      	str	r2, [r3, #16]
 8002166:	615a      	str	r2, [r3, #20]
 8002168:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800216a:	4b38      	ldr	r3, [pc, #224]	; (800224c <MX_TIM2_Init+0x114>)
 800216c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002170:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 4-1;
 8002172:	4b36      	ldr	r3, [pc, #216]	; (800224c <MX_TIM2_Init+0x114>)
 8002174:	2203      	movs	r2, #3
 8002176:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002178:	4b34      	ldr	r3, [pc, #208]	; (800224c <MX_TIM2_Init+0x114>)
 800217a:	2200      	movs	r2, #0
 800217c:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100-1;
 800217e:	4b33      	ldr	r3, [pc, #204]	; (800224c <MX_TIM2_Init+0x114>)
 8002180:	2263      	movs	r2, #99	; 0x63
 8002182:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002184:	4b31      	ldr	r3, [pc, #196]	; (800224c <MX_TIM2_Init+0x114>)
 8002186:	2200      	movs	r2, #0
 8002188:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800218a:	4b30      	ldr	r3, [pc, #192]	; (800224c <MX_TIM2_Init+0x114>)
 800218c:	2200      	movs	r2, #0
 800218e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002190:	482e      	ldr	r0, [pc, #184]	; (800224c <MX_TIM2_Init+0x114>)
 8002192:	f004 fb51 	bl	8006838 <HAL_TIM_Base_Init>
 8002196:	4603      	mov	r3, r0
 8002198:	2b00      	cmp	r3, #0
 800219a:	d001      	beq.n	80021a0 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 800219c:	f000 f926 	bl	80023ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80021a0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80021a4:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80021a6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80021aa:	4619      	mov	r1, r3
 80021ac:	4827      	ldr	r0, [pc, #156]	; (800224c <MX_TIM2_Init+0x114>)
 80021ae:	f005 f819 	bl	80071e4 <HAL_TIM_ConfigClockSource>
 80021b2:	4603      	mov	r3, r0
 80021b4:	2b00      	cmp	r3, #0
 80021b6:	d001      	beq.n	80021bc <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 80021b8:	f000 f918 	bl	80023ec <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80021bc:	4823      	ldr	r0, [pc, #140]	; (800224c <MX_TIM2_Init+0x114>)
 80021be:	f004 fc16 	bl	80069ee <HAL_TIM_PWM_Init>
 80021c2:	4603      	mov	r3, r0
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d001      	beq.n	80021cc <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 80021c8:	f000 f910 	bl	80023ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80021cc:	2300      	movs	r3, #0
 80021ce:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80021d0:	2300      	movs	r3, #0
 80021d2:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80021d4:	f107 031c 	add.w	r3, r7, #28
 80021d8:	4619      	mov	r1, r3
 80021da:	481c      	ldr	r0, [pc, #112]	; (800224c <MX_TIM2_Init+0x114>)
 80021dc:	f005 fc96 	bl	8007b0c <HAL_TIMEx_MasterConfigSynchronization>
 80021e0:	4603      	mov	r3, r0
 80021e2:	2b00      	cmp	r3, #0
 80021e4:	d001      	beq.n	80021ea <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80021e6:	f000 f901 	bl	80023ec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80021ea:	2360      	movs	r3, #96	; 0x60
 80021ec:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80021ee:	2300      	movs	r3, #0
 80021f0:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80021f2:	2300      	movs	r3, #0
 80021f4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80021f6:	2300      	movs	r3, #0
 80021f8:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80021fa:	463b      	mov	r3, r7
 80021fc:	2200      	movs	r2, #0
 80021fe:	4619      	mov	r1, r3
 8002200:	4812      	ldr	r0, [pc, #72]	; (800224c <MX_TIM2_Init+0x114>)
 8002202:	f004 fedb 	bl	8006fbc <HAL_TIM_PWM_ConfigChannel>
 8002206:	4603      	mov	r3, r0
 8002208:	2b00      	cmp	r3, #0
 800220a:	d001      	beq.n	8002210 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 800220c:	f000 f8ee 	bl	80023ec <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8002210:	463b      	mov	r3, r7
 8002212:	2204      	movs	r2, #4
 8002214:	4619      	mov	r1, r3
 8002216:	480d      	ldr	r0, [pc, #52]	; (800224c <MX_TIM2_Init+0x114>)
 8002218:	f004 fed0 	bl	8006fbc <HAL_TIM_PWM_ConfigChannel>
 800221c:	4603      	mov	r3, r0
 800221e:	2b00      	cmp	r3, #0
 8002220:	d001      	beq.n	8002226 <MX_TIM2_Init+0xee>
  {
    Error_Handler();
 8002222:	f000 f8e3 	bl	80023ec <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8002226:	463b      	mov	r3, r7
 8002228:	2208      	movs	r2, #8
 800222a:	4619      	mov	r1, r3
 800222c:	4807      	ldr	r0, [pc, #28]	; (800224c <MX_TIM2_Init+0x114>)
 800222e:	f004 fec5 	bl	8006fbc <HAL_TIM_PWM_ConfigChannel>
 8002232:	4603      	mov	r3, r0
 8002234:	2b00      	cmp	r3, #0
 8002236:	d001      	beq.n	800223c <MX_TIM2_Init+0x104>
  {
    Error_Handler();
 8002238:	f000 f8d8 	bl	80023ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800223c:	4803      	ldr	r0, [pc, #12]	; (800224c <MX_TIM2_Init+0x114>)
 800223e:	f000 fbd3 	bl	80029e8 <HAL_TIM_MspPostInit>

}
 8002242:	bf00      	nop
 8002244:	3738      	adds	r7, #56	; 0x38
 8002246:	46bd      	mov	sp, r7
 8002248:	bd80      	pop	{r7, pc}
 800224a:	bf00      	nop
 800224c:	20000394 	.word	0x20000394

08002250 <MX_TIM15_Init>:
  * @brief TIM15 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM15_Init(void)
{
 8002250:	b580      	push	{r7, lr}
 8002252:	b088      	sub	sp, #32
 8002254:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM15_Init 0 */

  /* USER CODE END TIM15_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002256:	f107 0310 	add.w	r3, r7, #16
 800225a:	2200      	movs	r2, #0
 800225c:	601a      	str	r2, [r3, #0]
 800225e:	605a      	str	r2, [r3, #4]
 8002260:	609a      	str	r2, [r3, #8]
 8002262:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002264:	1d3b      	adds	r3, r7, #4
 8002266:	2200      	movs	r2, #0
 8002268:	601a      	str	r2, [r3, #0]
 800226a:	605a      	str	r2, [r3, #4]
 800226c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM15_Init 1 */

  /* USER CODE END TIM15_Init 1 */
  htim15.Instance = TIM15;
 800226e:	4b1f      	ldr	r3, [pc, #124]	; (80022ec <MX_TIM15_Init+0x9c>)
 8002270:	4a1f      	ldr	r2, [pc, #124]	; (80022f0 <MX_TIM15_Init+0xa0>)
 8002272:	601a      	str	r2, [r3, #0]
  htim15.Init.Prescaler = 4000;
 8002274:	4b1d      	ldr	r3, [pc, #116]	; (80022ec <MX_TIM15_Init+0x9c>)
 8002276:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 800227a:	605a      	str	r2, [r3, #4]
  htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 800227c:	4b1b      	ldr	r3, [pc, #108]	; (80022ec <MX_TIM15_Init+0x9c>)
 800227e:	2200      	movs	r2, #0
 8002280:	609a      	str	r2, [r3, #8]
  htim15.Init.Period = 50;
 8002282:	4b1a      	ldr	r3, [pc, #104]	; (80022ec <MX_TIM15_Init+0x9c>)
 8002284:	2232      	movs	r2, #50	; 0x32
 8002286:	60da      	str	r2, [r3, #12]
  htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002288:	4b18      	ldr	r3, [pc, #96]	; (80022ec <MX_TIM15_Init+0x9c>)
 800228a:	2200      	movs	r2, #0
 800228c:	611a      	str	r2, [r3, #16]
  htim15.Init.RepetitionCounter = 0;
 800228e:	4b17      	ldr	r3, [pc, #92]	; (80022ec <MX_TIM15_Init+0x9c>)
 8002290:	2200      	movs	r2, #0
 8002292:	615a      	str	r2, [r3, #20]
  htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002294:	4b15      	ldr	r3, [pc, #84]	; (80022ec <MX_TIM15_Init+0x9c>)
 8002296:	2200      	movs	r2, #0
 8002298:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 800229a:	4814      	ldr	r0, [pc, #80]	; (80022ec <MX_TIM15_Init+0x9c>)
 800229c:	f004 facc 	bl	8006838 <HAL_TIM_Base_Init>
 80022a0:	4603      	mov	r3, r0
 80022a2:	2b00      	cmp	r3, #0
 80022a4:	d001      	beq.n	80022aa <MX_TIM15_Init+0x5a>
  {
    Error_Handler();
 80022a6:	f000 f8a1 	bl	80023ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80022aa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80022ae:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 80022b0:	f107 0310 	add.w	r3, r7, #16
 80022b4:	4619      	mov	r1, r3
 80022b6:	480d      	ldr	r0, [pc, #52]	; (80022ec <MX_TIM15_Init+0x9c>)
 80022b8:	f004 ff94 	bl	80071e4 <HAL_TIM_ConfigClockSource>
 80022bc:	4603      	mov	r3, r0
 80022be:	2b00      	cmp	r3, #0
 80022c0:	d001      	beq.n	80022c6 <MX_TIM15_Init+0x76>
  {
    Error_Handler();
 80022c2:	f000 f893 	bl	80023ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80022c6:	2300      	movs	r3, #0
 80022c8:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80022ca:	2300      	movs	r3, #0
 80022cc:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 80022ce:	1d3b      	adds	r3, r7, #4
 80022d0:	4619      	mov	r1, r3
 80022d2:	4806      	ldr	r0, [pc, #24]	; (80022ec <MX_TIM15_Init+0x9c>)
 80022d4:	f005 fc1a 	bl	8007b0c <HAL_TIMEx_MasterConfigSynchronization>
 80022d8:	4603      	mov	r3, r0
 80022da:	2b00      	cmp	r3, #0
 80022dc:	d001      	beq.n	80022e2 <MX_TIM15_Init+0x92>
  {
    Error_Handler();
 80022de:	f000 f885 	bl	80023ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM15_Init 2 */

  /* USER CODE END TIM15_Init 2 */

}
 80022e2:	bf00      	nop
 80022e4:	3720      	adds	r7, #32
 80022e6:	46bd      	mov	sp, r7
 80022e8:	bd80      	pop	{r7, pc}
 80022ea:	bf00      	nop
 80022ec:	200003e0 	.word	0x200003e0
 80022f0:	40014000 	.word	0x40014000

080022f4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80022f4:	b580      	push	{r7, lr}
 80022f6:	b088      	sub	sp, #32
 80022f8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80022fa:	f107 030c 	add.w	r3, r7, #12
 80022fe:	2200      	movs	r2, #0
 8002300:	601a      	str	r2, [r3, #0]
 8002302:	605a      	str	r2, [r3, #4]
 8002304:	609a      	str	r2, [r3, #8]
 8002306:	60da      	str	r2, [r3, #12]
 8002308:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800230a:	4b36      	ldr	r3, [pc, #216]	; (80023e4 <MX_GPIO_Init+0xf0>)
 800230c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800230e:	4a35      	ldr	r2, [pc, #212]	; (80023e4 <MX_GPIO_Init+0xf0>)
 8002310:	f043 0301 	orr.w	r3, r3, #1
 8002314:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002316:	4b33      	ldr	r3, [pc, #204]	; (80023e4 <MX_GPIO_Init+0xf0>)
 8002318:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800231a:	f003 0301 	and.w	r3, r3, #1
 800231e:	60bb      	str	r3, [r7, #8]
 8002320:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002322:	4b30      	ldr	r3, [pc, #192]	; (80023e4 <MX_GPIO_Init+0xf0>)
 8002324:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002326:	4a2f      	ldr	r2, [pc, #188]	; (80023e4 <MX_GPIO_Init+0xf0>)
 8002328:	f043 0304 	orr.w	r3, r3, #4
 800232c:	64d3      	str	r3, [r2, #76]	; 0x4c
 800232e:	4b2d      	ldr	r3, [pc, #180]	; (80023e4 <MX_GPIO_Init+0xf0>)
 8002330:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002332:	f003 0304 	and.w	r3, r3, #4
 8002336:	607b      	str	r3, [r7, #4]
 8002338:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800233a:	4b2a      	ldr	r3, [pc, #168]	; (80023e4 <MX_GPIO_Init+0xf0>)
 800233c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800233e:	4a29      	ldr	r2, [pc, #164]	; (80023e4 <MX_GPIO_Init+0xf0>)
 8002340:	f043 0302 	orr.w	r3, r3, #2
 8002344:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002346:	4b27      	ldr	r3, [pc, #156]	; (80023e4 <MX_GPIO_Init+0xf0>)
 8002348:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800234a:	f003 0302 	and.w	r3, r3, #2
 800234e:	603b      	str	r3, [r7, #0]
 8002350:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(En_Regulators_GPIO_Port, En_Regulators_Pin, GPIO_PIN_RESET);
 8002352:	2200      	movs	r2, #0
 8002354:	2140      	movs	r1, #64	; 0x40
 8002356:	4824      	ldr	r0, [pc, #144]	; (80023e8 <MX_GPIO_Init+0xf4>)
 8002358:	f002 fad4 	bl	8004904 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : En_Regulators_Pin */
  GPIO_InitStruct.Pin = En_Regulators_Pin;
 800235c:	2340      	movs	r3, #64	; 0x40
 800235e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002360:	2301      	movs	r3, #1
 8002362:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002364:	2300      	movs	r3, #0
 8002366:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002368:	2300      	movs	r3, #0
 800236a:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(En_Regulators_GPIO_Port, &GPIO_InitStruct);
 800236c:	f107 030c 	add.w	r3, r7, #12
 8002370:	4619      	mov	r1, r3
 8002372:	481d      	ldr	r0, [pc, #116]	; (80023e8 <MX_GPIO_Init+0xf4>)
 8002374:	f002 f934 	bl	80045e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : Power_Button_Pin */
  GPIO_InitStruct.Pin = Power_Button_Pin;
 8002378:	2380      	movs	r3, #128	; 0x80
 800237a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 800237c:	f44f 1344 	mov.w	r3, #3211264	; 0x310000
 8002380:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002382:	2301      	movs	r3, #1
 8002384:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(Power_Button_GPIO_Port, &GPIO_InitStruct);
 8002386:	f107 030c 	add.w	r3, r7, #12
 800238a:	4619      	mov	r1, r3
 800238c:	4816      	ldr	r0, [pc, #88]	; (80023e8 <MX_GPIO_Init+0xf4>)
 800238e:	f002 f927 	bl	80045e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : MAX_ALRT_Pin */
  GPIO_InitStruct.Pin = MAX_ALRT_Pin;
 8002392:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002396:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002398:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 800239c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800239e:	2301      	movs	r3, #1
 80023a0:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(MAX_ALRT_GPIO_Port, &GPIO_InitStruct);
 80023a2:	f107 030c 	add.w	r3, r7, #12
 80023a6:	4619      	mov	r1, r3
 80023a8:	480f      	ldr	r0, [pc, #60]	; (80023e8 <MX_GPIO_Init+0xf4>)
 80023aa:	f002 f919 	bl	80045e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : BQ_INT_Pin */
  GPIO_InitStruct.Pin = BQ_INT_Pin;
 80023ae:	f44f 7380 	mov.w	r3, #256	; 0x100
 80023b2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80023b4:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80023b8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80023ba:	2301      	movs	r3, #1
 80023bc:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(BQ_INT_GPIO_Port, &GPIO_InitStruct);
 80023be:	f107 030c 	add.w	r3, r7, #12
 80023c2:	4619      	mov	r1, r3
 80023c4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80023c8:	f002 f90a 	bl	80045e0 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 80023cc:	2200      	movs	r2, #0
 80023ce:	2100      	movs	r1, #0
 80023d0:	2017      	movs	r0, #23
 80023d2:	f002 f8ce 	bl	8004572 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80023d6:	2017      	movs	r0, #23
 80023d8:	f002 f8e7 	bl	80045aa <HAL_NVIC_EnableIRQ>

}
 80023dc:	bf00      	nop
 80023de:	3720      	adds	r7, #32
 80023e0:	46bd      	mov	sp, r7
 80023e2:	bd80      	pop	{r7, pc}
 80023e4:	40021000 	.word	0x40021000
 80023e8:	48000800 	.word	0x48000800

080023ec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80023ec:	b480      	push	{r7}
 80023ee:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80023f0:	b672      	cpsid	i
}
 80023f2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80023f4:	e7fe      	b.n	80023f4 <Error_Handler+0x8>

080023f6 <i2c_master_read_u16>:
// MAX17048 uses big endian register layout
#define SWAP16(x) ((uint16_t)(((x) << 8) | ((x) >> 8)))


bool i2c_master_read_u16(I2C_HandleTypeDef *i2cHandle, uint8_t device, uint8_t reg, uint16_t *buf )
{
 80023f6:	b580      	push	{r7, lr}
 80023f8:	b088      	sub	sp, #32
 80023fa:	af04      	add	r7, sp, #16
 80023fc:	60f8      	str	r0, [r7, #12]
 80023fe:	607b      	str	r3, [r7, #4]
 8002400:	460b      	mov	r3, r1
 8002402:	72fb      	strb	r3, [r7, #11]
 8002404:	4613      	mov	r3, r2
 8002406:	72bb      	strb	r3, [r7, #10]
	if ( HAL_I2C_Mem_Read( i2cHandle, device, reg, I2C_MEMADD_SIZE_16BIT, buf, 2, 10 ) != HAL_OK)
 8002408:	7afb      	ldrb	r3, [r7, #11]
 800240a:	b299      	uxth	r1, r3
 800240c:	7abb      	ldrb	r3, [r7, #10]
 800240e:	b29a      	uxth	r2, r3
 8002410:	230a      	movs	r3, #10
 8002412:	9302      	str	r3, [sp, #8]
 8002414:	2302      	movs	r3, #2
 8002416:	9301      	str	r3, [sp, #4]
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	9300      	str	r3, [sp, #0]
 800241c:	2302      	movs	r3, #2
 800241e:	68f8      	ldr	r0, [r7, #12]
 8002420:	f002 fc44 	bl	8004cac <HAL_I2C_Mem_Read>
 8002424:	4603      	mov	r3, r0
 8002426:	2b00      	cmp	r3, #0
 8002428:	d001      	beq.n	800242e <i2c_master_read_u16+0x38>
	{
		return 0;
 800242a:	2300      	movs	r3, #0
 800242c:	e000      	b.n	8002430 <i2c_master_read_u16+0x3a>
	}

	return 1;
 800242e:	2301      	movs	r3, #1
}
 8002430:	4618      	mov	r0, r3
 8002432:	3710      	adds	r7, #16
 8002434:	46bd      	mov	sp, r7
 8002436:	bd80      	pop	{r7, pc}

08002438 <i2c_master_write_u16>:

bool i2c_master_write_u16(I2C_HandleTypeDef *i2cHandle, uint8_t device, uint8_t reg, uint16_t *buf )
{
 8002438:	b580      	push	{r7, lr}
 800243a:	b088      	sub	sp, #32
 800243c:	af04      	add	r7, sp, #16
 800243e:	60f8      	str	r0, [r7, #12]
 8002440:	607b      	str	r3, [r7, #4]
 8002442:	460b      	mov	r3, r1
 8002444:	72fb      	strb	r3, [r7, #11]
 8002446:	4613      	mov	r3, r2
 8002448:	72bb      	strb	r3, [r7, #10]
	if ( HAL_I2C_Mem_Write( i2cHandle, device, reg, I2C_MEMADD_SIZE_16BIT, buf, 2, 10 ) != HAL_OK)
 800244a:	7afb      	ldrb	r3, [r7, #11]
 800244c:	b299      	uxth	r1, r3
 800244e:	7abb      	ldrb	r3, [r7, #10]
 8002450:	b29a      	uxth	r2, r3
 8002452:	230a      	movs	r3, #10
 8002454:	9302      	str	r3, [sp, #8]
 8002456:	2302      	movs	r3, #2
 8002458:	9301      	str	r3, [sp, #4]
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	9300      	str	r3, [sp, #0]
 800245e:	2302      	movs	r3, #2
 8002460:	68f8      	ldr	r0, [r7, #12]
 8002462:	f002 fb0f 	bl	8004a84 <HAL_I2C_Mem_Write>
 8002466:	4603      	mov	r3, r0
 8002468:	2b00      	cmp	r3, #0
 800246a:	d001      	beq.n	8002470 <i2c_master_write_u16+0x38>
	{
		return 0;
 800246c:	2300      	movs	r3, #0
 800246e:	e000      	b.n	8002472 <i2c_master_write_u16+0x3a>
	}

	return 1;
 8002470:	2301      	movs	r3, #1
}
 8002472:	4618      	mov	r0, r3
 8002474:	3710      	adds	r7, #16
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}

0800247a <read_reg>:


static inline bool read_reg(I2C_HandleTypeDef *i2cHandle, uint8_t reg, uint16_t* out) {
 800247a:	b580      	push	{r7, lr}
 800247c:	b084      	sub	sp, #16
 800247e:	af00      	add	r7, sp, #0
 8002480:	60f8      	str	r0, [r7, #12]
 8002482:	460b      	mov	r3, r1
 8002484:	607a      	str	r2, [r7, #4]
 8002486:	72fb      	strb	r3, [r7, #11]
    if (!i2c_master_read_u16(i2cHandle, MAX_ADDR, reg, out)) {
 8002488:	7afa      	ldrb	r2, [r7, #11]
 800248a:	687b      	ldr	r3, [r7, #4]
 800248c:	2136      	movs	r1, #54	; 0x36
 800248e:	68f8      	ldr	r0, [r7, #12]
 8002490:	f7ff ffb1 	bl	80023f6 <i2c_master_read_u16>
 8002494:	4603      	mov	r3, r0
 8002496:	f083 0301 	eor.w	r3, r3, #1
 800249a:	b2db      	uxtb	r3, r3
 800249c:	2b00      	cmp	r3, #0
 800249e:	d001      	beq.n	80024a4 <read_reg+0x2a>
        return false;
 80024a0:	2300      	movs	r3, #0
 80024a2:	e00e      	b.n	80024c2 <read_reg+0x48>
    }

    *out = SWAP16(*out);
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	881b      	ldrh	r3, [r3, #0]
 80024a8:	021b      	lsls	r3, r3, #8
 80024aa:	b21a      	sxth	r2, r3
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	881b      	ldrh	r3, [r3, #0]
 80024b0:	0a1b      	lsrs	r3, r3, #8
 80024b2:	b29b      	uxth	r3, r3
 80024b4:	b21b      	sxth	r3, r3
 80024b6:	4313      	orrs	r3, r2
 80024b8:	b21b      	sxth	r3, r3
 80024ba:	b29a      	uxth	r2, r3
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	801a      	strh	r2, [r3, #0]
    return true;
 80024c0:	2301      	movs	r3, #1
}
 80024c2:	4618      	mov	r0, r3
 80024c4:	3710      	adds	r7, #16
 80024c6:	46bd      	mov	sp, r7
 80024c8:	bd80      	pop	{r7, pc}

080024ca <write_reg>:

static inline bool write_reg(I2C_HandleTypeDef *i2cHandle, uint8_t reg, uint16_t data) {
 80024ca:	b580      	push	{r7, lr}
 80024cc:	b082      	sub	sp, #8
 80024ce:	af00      	add	r7, sp, #0
 80024d0:	6078      	str	r0, [r7, #4]
 80024d2:	460b      	mov	r3, r1
 80024d4:	70fb      	strb	r3, [r7, #3]
 80024d6:	4613      	mov	r3, r2
 80024d8:	803b      	strh	r3, [r7, #0]
    return i2c_master_write_u16(i2cHandle, MAX_ADDR, reg, SWAP16(data));
 80024da:	883b      	ldrh	r3, [r7, #0]
 80024dc:	021b      	lsls	r3, r3, #8
 80024de:	b21a      	sxth	r2, r3
 80024e0:	883b      	ldrh	r3, [r7, #0]
 80024e2:	0a1b      	lsrs	r3, r3, #8
 80024e4:	b29b      	uxth	r3, r3
 80024e6:	b21b      	sxth	r3, r3
 80024e8:	4313      	orrs	r3, r2
 80024ea:	b21b      	sxth	r3, r3
 80024ec:	b29b      	uxth	r3, r3
 80024ee:	78fa      	ldrb	r2, [r7, #3]
 80024f0:	2136      	movs	r1, #54	; 0x36
 80024f2:	6878      	ldr	r0, [r7, #4]
 80024f4:	f7ff ffa0 	bl	8002438 <i2c_master_write_u16>
 80024f8:	4603      	mov	r3, r0
}
 80024fa:	4618      	mov	r0, r3
 80024fc:	3708      	adds	r7, #8
 80024fe:	46bd      	mov	sp, r7
 8002500:	bd80      	pop	{r7, pc}

08002502 <modify_reg>:

static inline bool modify_reg(I2C_HandleTypeDef *i2cHandle, uint8_t reg, uint16_t data, uint16_t mask) {
 8002502:	b580      	push	{r7, lr}
 8002504:	b086      	sub	sp, #24
 8002506:	af00      	add	r7, sp, #0
 8002508:	60f8      	str	r0, [r7, #12]
 800250a:	4608      	mov	r0, r1
 800250c:	4611      	mov	r1, r2
 800250e:	461a      	mov	r2, r3
 8002510:	4603      	mov	r3, r0
 8002512:	72fb      	strb	r3, [r7, #11]
 8002514:	460b      	mov	r3, r1
 8002516:	813b      	strh	r3, [r7, #8]
 8002518:	4613      	mov	r3, r2
 800251a:	80fb      	strh	r3, [r7, #6]
    uint16_t buf;
    if (!read_reg(i2cHandle, reg, &buf)) {
 800251c:	f107 0216 	add.w	r2, r7, #22
 8002520:	7afb      	ldrb	r3, [r7, #11]
 8002522:	4619      	mov	r1, r3
 8002524:	68f8      	ldr	r0, [r7, #12]
 8002526:	f7ff ffa8 	bl	800247a <read_reg>
 800252a:	4603      	mov	r3, r0
 800252c:	f083 0301 	eor.w	r3, r3, #1
 8002530:	b2db      	uxtb	r3, r3
 8002532:	2b00      	cmp	r3, #0
 8002534:	d001      	beq.n	800253a <modify_reg+0x38>
        return false;
 8002536:	2300      	movs	r3, #0
 8002538:	e017      	b.n	800256a <modify_reg+0x68>
    }

    buf = (buf & ~mask) | (data & mask);
 800253a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800253e:	43db      	mvns	r3, r3
 8002540:	b21a      	sxth	r2, r3
 8002542:	8afb      	ldrh	r3, [r7, #22]
 8002544:	b21b      	sxth	r3, r3
 8002546:	4013      	ands	r3, r2
 8002548:	b21a      	sxth	r2, r3
 800254a:	8939      	ldrh	r1, [r7, #8]
 800254c:	88fb      	ldrh	r3, [r7, #6]
 800254e:	400b      	ands	r3, r1
 8002550:	b29b      	uxth	r3, r3
 8002552:	b21b      	sxth	r3, r3
 8002554:	4313      	orrs	r3, r2
 8002556:	b21b      	sxth	r3, r3
 8002558:	b29b      	uxth	r3, r3
 800255a:	82fb      	strh	r3, [r7, #22]
    return write_reg(i2cHandle, reg, buf);
 800255c:	8afa      	ldrh	r2, [r7, #22]
 800255e:	7afb      	ldrb	r3, [r7, #11]
 8002560:	4619      	mov	r1, r3
 8002562:	68f8      	ldr	r0, [r7, #12]
 8002564:	f7ff ffb1 	bl	80024ca <write_reg>
 8002568:	4603      	mov	r3, r0
}
 800256a:	4618      	mov	r0, r3
 800256c:	3718      	adds	r7, #24
 800256e:	46bd      	mov	sp, r7
 8002570:	bd80      	pop	{r7, pc}

08002572 <max17048_is_present>:

bool max17048_is_present(I2C_HandleTypeDef *i2cHandle) {
 8002572:	b580      	push	{r7, lr}
 8002574:	b084      	sub	sp, #16
 8002576:	af00      	add	r7, sp, #0
 8002578:	6078      	str	r0, [r7, #4]
    uint16_t data;
    if (!read_reg(i2cHandle, VERSION, &data)) {
 800257a:	f107 030e 	add.w	r3, r7, #14
 800257e:	461a      	mov	r2, r3
 8002580:	2108      	movs	r1, #8
 8002582:	6878      	ldr	r0, [r7, #4]
 8002584:	f7ff ff79 	bl	800247a <read_reg>
 8002588:	4603      	mov	r3, r0
 800258a:	f083 0301 	eor.w	r3, r3, #1
 800258e:	b2db      	uxtb	r3, r3
 8002590:	2b00      	cmp	r3, #0
 8002592:	d001      	beq.n	8002598 <max17048_is_present+0x26>
        return false;
 8002594:	2300      	movs	r3, #0
 8002596:	e009      	b.n	80025ac <max17048_is_present+0x3a>
    }

    return ((data & VERSION_MSK) == PART_NUMBER);
 8002598:	89fb      	ldrh	r3, [r7, #14]
 800259a:	461a      	mov	r2, r3
 800259c:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 80025a0:	4013      	ands	r3, r2
 80025a2:	2b10      	cmp	r3, #16
 80025a4:	bf0c      	ite	eq
 80025a6:	2301      	moveq	r3, #1
 80025a8:	2300      	movne	r3, #0
 80025aa:	b2db      	uxtb	r3, r3
}
 80025ac:	4618      	mov	r0, r3
 80025ae:	3710      	adds	r7, #16
 80025b0:	46bd      	mov	sp, r7
 80025b2:	bd80      	pop	{r7, pc}

080025b4 <max17048_get_soc>:

    *mv = (max17048_voltage_t)(VCELL_TO_MV(data));
    return true;
}

bool max17048_get_soc(I2C_HandleTypeDef *i2cHandle, max17048_soc_t* percent) {
 80025b4:	b580      	push	{r7, lr}
 80025b6:	b084      	sub	sp, #16
 80025b8:	af00      	add	r7, sp, #0
 80025ba:	6078      	str	r0, [r7, #4]
 80025bc:	6039      	str	r1, [r7, #0]
    uint16_t data;
    if (!read_reg(i2cHandle, SOC, &data)) {
 80025be:	f107 030e 	add.w	r3, r7, #14
 80025c2:	461a      	mov	r2, r3
 80025c4:	2104      	movs	r1, #4
 80025c6:	6878      	ldr	r0, [r7, #4]
 80025c8:	f7ff ff57 	bl	800247a <read_reg>
 80025cc:	4603      	mov	r3, r0
 80025ce:	f083 0301 	eor.w	r3, r3, #1
 80025d2:	b2db      	uxtb	r3, r3
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	d001      	beq.n	80025dc <max17048_get_soc+0x28>
        return false;
 80025d8:	2300      	movs	r3, #0
 80025da:	e006      	b.n	80025ea <max17048_get_soc+0x36>
    }

    *percent = (max17048_soc_t)(data >> 8);
 80025dc:	89fb      	ldrh	r3, [r7, #14]
 80025de:	0a1b      	lsrs	r3, r3, #8
 80025e0:	b29b      	uxth	r3, r3
 80025e2:	b2da      	uxtb	r2, r3
 80025e4:	683b      	ldr	r3, [r7, #0]
 80025e6:	701a      	strb	r2, [r3, #0]
    return true;
 80025e8:	2301      	movs	r3, #1
}
 80025ea:	4618      	mov	r0, r3
 80025ec:	3710      	adds	r7, #16
 80025ee:	46bd      	mov	sp, r7
 80025f0:	bd80      	pop	{r7, pc}

080025f2 <max17048_set_bat_low_soc>:

bool max17048_set_bat_low_soc(I2C_HandleTypeDef *i2cHandle, max17048_soc_t percent) {
 80025f2:	b580      	push	{r7, lr}
 80025f4:	b084      	sub	sp, #16
 80025f6:	af00      	add	r7, sp, #0
 80025f8:	6078      	str	r0, [r7, #4]
 80025fa:	460b      	mov	r3, r1
 80025fc:	70fb      	strb	r3, [r7, #3]
    if (percent < BAT_LOW_MIN || percent > BAT_LOW_MAX) {
 80025fe:	78fb      	ldrb	r3, [r7, #3]
 8002600:	2b00      	cmp	r3, #0
 8002602:	d002      	beq.n	800260a <max17048_set_bat_low_soc+0x18>
 8002604:	78fb      	ldrb	r3, [r7, #3]
 8002606:	2b20      	cmp	r3, #32
 8002608:	d901      	bls.n	800260e <max17048_set_bat_low_soc+0x1c>
        return false;
 800260a:	2300      	movs	r3, #0
 800260c:	e011      	b.n	8002632 <max17048_set_bat_low_soc+0x40>
    }
    uint16_t data = (uint16_t)((BAT_LOW_MAX - (percent % BAT_LOW_MAX)) & BAT_LOW_MSK);
 800260e:	78fb      	ldrb	r3, [r7, #3]
 8002610:	b29b      	uxth	r3, r3
 8002612:	f003 031f 	and.w	r3, r3, #31
 8002616:	b29b      	uxth	r3, r3
 8002618:	f1c3 0320 	rsb	r3, r3, #32
 800261c:	b29b      	uxth	r3, r3
 800261e:	f003 031f 	and.w	r3, r3, #31
 8002622:	81fb      	strh	r3, [r7, #14]

    return modify_reg(i2cHandle, CONFIG, data, BAT_LOW_MSK);
 8002624:	89fa      	ldrh	r2, [r7, #14]
 8002626:	231f      	movs	r3, #31
 8002628:	210c      	movs	r1, #12
 800262a:	6878      	ldr	r0, [r7, #4]
 800262c:	f7ff ff69 	bl	8002502 <modify_reg>
 8002630:	4603      	mov	r3, r0
}
 8002632:	4618      	mov	r0, r3
 8002634:	3710      	adds	r7, #16
 8002636:	46bd      	mov	sp, r7
 8002638:	bd80      	pop	{r7, pc}
	...

0800263c <max17048_set_undervolted_voltage>:

bool max17048_set_undervolted_voltage(I2C_HandleTypeDef *i2cHandle, max17048_voltage_t mv) {
 800263c:	b580      	push	{r7, lr}
 800263e:	b084      	sub	sp, #16
 8002640:	af00      	add	r7, sp, #0
 8002642:	6078      	str	r0, [r7, #4]
 8002644:	460b      	mov	r3, r1
 8002646:	807b      	strh	r3, [r7, #2]
    uint16_t data = (uint16_t)(((mv / VALRT_RESOLUTION) << VALRT_MIN_POS) & VALRT_MIN_MSK);
 8002648:	887b      	ldrh	r3, [r7, #2]
 800264a:	4a0b      	ldr	r2, [pc, #44]	; (8002678 <max17048_set_undervolted_voltage+0x3c>)
 800264c:	fba2 2303 	umull	r2, r3, r2, r3
 8002650:	091b      	lsrs	r3, r3, #4
 8002652:	b29b      	uxth	r3, r3
 8002654:	021b      	lsls	r3, r3, #8
 8002656:	b29b      	uxth	r3, r3
 8002658:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800265c:	81fb      	strh	r3, [r7, #14]

    return modify_reg(i2cHandle, VALRT, data, VALRT_MIN_MSK);
 800265e:	89fa      	ldrh	r2, [r7, #14]
 8002660:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 8002664:	2114      	movs	r1, #20
 8002666:	6878      	ldr	r0, [r7, #4]
 8002668:	f7ff ff4b 	bl	8002502 <modify_reg>
 800266c:	4603      	mov	r3, r0
}
 800266e:	4618      	mov	r0, r3
 8002670:	3710      	adds	r7, #16
 8002672:	46bd      	mov	sp, r7
 8002674:	bd80      	pop	{r7, pc}
 8002676:	bf00      	nop
 8002678:	cccccccd 	.word	0xcccccccd

0800267c <max17048_set_overvolted_voltage>:

bool max17048_set_overvolted_voltage(I2C_HandleTypeDef *i2cHandle, max17048_voltage_t mv) {
 800267c:	b580      	push	{r7, lr}
 800267e:	b084      	sub	sp, #16
 8002680:	af00      	add	r7, sp, #0
 8002682:	6078      	str	r0, [r7, #4]
 8002684:	460b      	mov	r3, r1
 8002686:	807b      	strh	r3, [r7, #2]
    uint16_t data = (uint16_t)(((mv / VALRT_RESOLUTION) << VALRT_MAX_POS) & VALRT_MAX_MSK);
 8002688:	887b      	ldrh	r3, [r7, #2]
 800268a:	4a09      	ldr	r2, [pc, #36]	; (80026b0 <max17048_set_overvolted_voltage+0x34>)
 800268c:	fba2 2303 	umull	r2, r3, r2, r3
 8002690:	091b      	lsrs	r3, r3, #4
 8002692:	b29b      	uxth	r3, r3
 8002694:	b2db      	uxtb	r3, r3
 8002696:	81fb      	strh	r3, [r7, #14]

    return modify_reg(i2cHandle, VALRT, data, VALRT_MAX_MSK);
 8002698:	89fa      	ldrh	r2, [r7, #14]
 800269a:	23ff      	movs	r3, #255	; 0xff
 800269c:	2114      	movs	r1, #20
 800269e:	6878      	ldr	r0, [r7, #4]
 80026a0:	f7ff ff2f 	bl	8002502 <modify_reg>
 80026a4:	4603      	mov	r3, r0
}
 80026a6:	4618      	mov	r0, r3
 80026a8:	3710      	adds	r7, #16
 80026aa:	46bd      	mov	sp, r7
 80026ac:	bd80      	pop	{r7, pc}
 80026ae:	bf00      	nop
 80026b0:	cccccccd 	.word	0xcccccccd

080026b4 <max17048_set_reset_voltage>:

bool max17048_set_reset_voltage(I2C_HandleTypeDef *i2cHandle, max17048_voltage_t mv) {
 80026b4:	b580      	push	{r7, lr}
 80026b6:	b084      	sub	sp, #16
 80026b8:	af00      	add	r7, sp, #0
 80026ba:	6078      	str	r0, [r7, #4]
 80026bc:	460b      	mov	r3, r1
 80026be:	807b      	strh	r3, [r7, #2]
    uint16_t data = (uint16_t)(((mv / VRESET_RESOLUTION) << VRESET_POS) & VRESET_MSK);
 80026c0:	887b      	ldrh	r3, [r7, #2]
 80026c2:	4a0c      	ldr	r2, [pc, #48]	; (80026f4 <max17048_set_reset_voltage+0x40>)
 80026c4:	fba2 2303 	umull	r2, r3, r2, r3
 80026c8:	095b      	lsrs	r3, r3, #5
 80026ca:	b29b      	uxth	r3, r3
 80026cc:	025b      	lsls	r3, r3, #9
 80026ce:	b29b      	uxth	r3, r3
 80026d0:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 80026d4:	f023 0301 	bic.w	r3, r3, #1
 80026d8:	81fb      	strh	r3, [r7, #14]

    return modify_reg(i2cHandle, VRESET_ID, data, VRESET_MSK);
 80026da:	89fa      	ldrh	r2, [r7, #14]
 80026dc:	f44f 437e 	mov.w	r3, #65024	; 0xfe00
 80026e0:	2118      	movs	r1, #24
 80026e2:	6878      	ldr	r0, [r7, #4]
 80026e4:	f7ff ff0d 	bl	8002502 <modify_reg>
 80026e8:	4603      	mov	r3, r0
}
 80026ea:	4618      	mov	r0, r3
 80026ec:	3710      	adds	r7, #16
 80026ee:	46bd      	mov	sp, r7
 80026f0:	bd80      	pop	{r7, pc}
 80026f2:	bf00      	nop
 80026f4:	cccccccd 	.word	0xcccccccd

080026f8 <max17048_set_soc_change_alert>:

bool max17048_set_soc_change_alert(I2C_HandleTypeDef *i2cHandle, bool enable) {
 80026f8:	b580      	push	{r7, lr}
 80026fa:	b084      	sub	sp, #16
 80026fc:	af00      	add	r7, sp, #0
 80026fe:	6078      	str	r0, [r7, #4]
 8002700:	460b      	mov	r3, r1
 8002702:	70fb      	strb	r3, [r7, #3]
    uint16_t data = (uint16_t)((enable << ALSC_BIT_POS) & ALSC_BIT_MSK);
 8002704:	78fb      	ldrb	r3, [r7, #3]
 8002706:	019b      	lsls	r3, r3, #6
 8002708:	b29b      	uxth	r3, r3
 800270a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800270e:	81fb      	strh	r3, [r7, #14]

    return modify_reg(i2cHandle, CONFIG, data, ALSC_BIT_MSK);
 8002710:	89fa      	ldrh	r2, [r7, #14]
 8002712:	2340      	movs	r3, #64	; 0x40
 8002714:	210c      	movs	r1, #12
 8002716:	6878      	ldr	r0, [r7, #4]
 8002718:	f7ff fef3 	bl	8002502 <modify_reg>
 800271c:	4603      	mov	r3, r0
}
 800271e:	4618      	mov	r0, r3
 8002720:	3710      	adds	r7, #16
 8002722:	46bd      	mov	sp, r7
 8002724:	bd80      	pop	{r7, pc}

08002726 <max17048_set_voltage_reset_alert>:

bool max17048_set_voltage_reset_alert(I2C_HandleTypeDef *i2cHandle, bool enable) {
 8002726:	b580      	push	{r7, lr}
 8002728:	b084      	sub	sp, #16
 800272a:	af00      	add	r7, sp, #0
 800272c:	6078      	str	r0, [r7, #4]
 800272e:	460b      	mov	r3, r1
 8002730:	70fb      	strb	r3, [r7, #3]
    uint16_t data = (uint16_t)((enable << ENVR_BIT_POS) & ENVR_BIT_MSK);
 8002732:	78fb      	ldrb	r3, [r7, #3]
 8002734:	039b      	lsls	r3, r3, #14
 8002736:	b29b      	uxth	r3, r3
 8002738:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800273c:	81fb      	strh	r3, [r7, #14]

    return modify_reg(i2cHandle, STATUS, data, ENVR_BIT_MSK);
 800273e:	89fa      	ldrh	r2, [r7, #14]
 8002740:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002744:	211a      	movs	r1, #26
 8002746:	6878      	ldr	r0, [r7, #4]
 8002748:	f7ff fedb 	bl	8002502 <modify_reg>
 800274c:	4603      	mov	r3, r0
}
 800274e:	4618      	mov	r0, r3
 8002750:	3710      	adds	r7, #16
 8002752:	46bd      	mov	sp, r7
 8002754:	bd80      	pop	{r7, pc}

08002756 <max17048_clear_alerts>:

bool max17048_clear_alerts(I2C_HandleTypeDef *i2cHandle) {
 8002756:	b580      	push	{r7, lr}
 8002758:	b084      	sub	sp, #16
 800275a:	af00      	add	r7, sp, #0
 800275c:	6078      	str	r0, [r7, #4]
    bool ok = true;
 800275e:	2301      	movs	r3, #1
 8002760:	73fb      	strb	r3, [r7, #15]

    if (ok) ok = modify_reg(i2cHandle, STATUS, 0, ALRT_STATUS_MSK);
 8002762:	7bfb      	ldrb	r3, [r7, #15]
 8002764:	2b00      	cmp	r3, #0
 8002766:	d008      	beq.n	800277a <max17048_clear_alerts+0x24>
 8002768:	f44f 537c 	mov.w	r3, #16128	; 0x3f00
 800276c:	2200      	movs	r2, #0
 800276e:	211a      	movs	r1, #26
 8002770:	6878      	ldr	r0, [r7, #4]
 8002772:	f7ff fec6 	bl	8002502 <modify_reg>
 8002776:	4603      	mov	r3, r0
 8002778:	73fb      	strb	r3, [r7, #15]
    if (ok) ok = modify_reg(i2cHandle, CONFIG, 0, ALRT_BIT_MSK);
 800277a:	7bfb      	ldrb	r3, [r7, #15]
 800277c:	2b00      	cmp	r3, #0
 800277e:	d007      	beq.n	8002790 <max17048_clear_alerts+0x3a>
 8002780:	2320      	movs	r3, #32
 8002782:	2200      	movs	r2, #0
 8002784:	210c      	movs	r1, #12
 8002786:	6878      	ldr	r0, [r7, #4]
 8002788:	f7ff febb 	bl	8002502 <modify_reg>
 800278c:	4603      	mov	r3, r0
 800278e:	73fb      	strb	r3, [r7, #15]

    return ok;
 8002790:	7bfb      	ldrb	r3, [r7, #15]
}
 8002792:	4618      	mov	r0, r3
 8002794:	3710      	adds	r7, #16
 8002796:	46bd      	mov	sp, r7
 8002798:	bd80      	pop	{r7, pc}
	...

0800279c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800279c:	b480      	push	{r7}
 800279e:	b083      	sub	sp, #12
 80027a0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80027a2:	4b0f      	ldr	r3, [pc, #60]	; (80027e0 <HAL_MspInit+0x44>)
 80027a4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80027a6:	4a0e      	ldr	r2, [pc, #56]	; (80027e0 <HAL_MspInit+0x44>)
 80027a8:	f043 0301 	orr.w	r3, r3, #1
 80027ac:	6613      	str	r3, [r2, #96]	; 0x60
 80027ae:	4b0c      	ldr	r3, [pc, #48]	; (80027e0 <HAL_MspInit+0x44>)
 80027b0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80027b2:	f003 0301 	and.w	r3, r3, #1
 80027b6:	607b      	str	r3, [r7, #4]
 80027b8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80027ba:	4b09      	ldr	r3, [pc, #36]	; (80027e0 <HAL_MspInit+0x44>)
 80027bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80027be:	4a08      	ldr	r2, [pc, #32]	; (80027e0 <HAL_MspInit+0x44>)
 80027c0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80027c4:	6593      	str	r3, [r2, #88]	; 0x58
 80027c6:	4b06      	ldr	r3, [pc, #24]	; (80027e0 <HAL_MspInit+0x44>)
 80027c8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80027ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80027ce:	603b      	str	r3, [r7, #0]
 80027d0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80027d2:	bf00      	nop
 80027d4:	370c      	adds	r7, #12
 80027d6:	46bd      	mov	sp, r7
 80027d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027dc:	4770      	bx	lr
 80027de:	bf00      	nop
 80027e0:	40021000 	.word	0x40021000

080027e4 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80027e4:	b580      	push	{r7, lr}
 80027e6:	b0a0      	sub	sp, #128	; 0x80
 80027e8:	af00      	add	r7, sp, #0
 80027ea:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027ec:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 80027f0:	2200      	movs	r2, #0
 80027f2:	601a      	str	r2, [r3, #0]
 80027f4:	605a      	str	r2, [r3, #4]
 80027f6:	609a      	str	r2, [r3, #8]
 80027f8:	60da      	str	r2, [r3, #12]
 80027fa:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80027fc:	f107 0310 	add.w	r3, r7, #16
 8002800:	225c      	movs	r2, #92	; 0x5c
 8002802:	2100      	movs	r1, #0
 8002804:	4618      	mov	r0, r3
 8002806:	f005 faa7 	bl	8007d58 <memset>
  if(hadc->Instance==ADC1)
 800280a:	687b      	ldr	r3, [r7, #4]
 800280c:	681b      	ldr	r3, [r3, #0]
 800280e:	4a1e      	ldr	r2, [pc, #120]	; (8002888 <HAL_ADC_MspInit+0xa4>)
 8002810:	4293      	cmp	r3, r2
 8002812:	d134      	bne.n	800287e <HAL_ADC_MspInit+0x9a>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8002814:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002818:	613b      	str	r3, [r7, #16]
    PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_SYSCLK;
 800281a:	f04f 5340 	mov.w	r3, #805306368	; 0x30000000
 800281e:	663b      	str	r3, [r7, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002820:	f107 0310 	add.w	r3, r7, #16
 8002824:	4618      	mov	r0, r3
 8002826:	f003 fcfd 	bl	8006224 <HAL_RCCEx_PeriphCLKConfig>
 800282a:	4603      	mov	r3, r0
 800282c:	2b00      	cmp	r3, #0
 800282e:	d001      	beq.n	8002834 <HAL_ADC_MspInit+0x50>
    {
      Error_Handler();
 8002830:	f7ff fddc 	bl	80023ec <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC_CLK_ENABLE();
 8002834:	4b15      	ldr	r3, [pc, #84]	; (800288c <HAL_ADC_MspInit+0xa8>)
 8002836:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002838:	4a14      	ldr	r2, [pc, #80]	; (800288c <HAL_ADC_MspInit+0xa8>)
 800283a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800283e:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002840:	4b12      	ldr	r3, [pc, #72]	; (800288c <HAL_ADC_MspInit+0xa8>)
 8002842:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002844:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002848:	60fb      	str	r3, [r7, #12]
 800284a:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800284c:	4b0f      	ldr	r3, [pc, #60]	; (800288c <HAL_ADC_MspInit+0xa8>)
 800284e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002850:	4a0e      	ldr	r2, [pc, #56]	; (800288c <HAL_ADC_MspInit+0xa8>)
 8002852:	f043 0301 	orr.w	r3, r3, #1
 8002856:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002858:	4b0c      	ldr	r3, [pc, #48]	; (800288c <HAL_ADC_MspInit+0xa8>)
 800285a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800285c:	f003 0301 	and.w	r3, r3, #1
 8002860:	60bb      	str	r3, [r7, #8]
 8002862:	68bb      	ldr	r3, [r7, #8]
    /**ADC1 GPIO Configuration
    PA4     ------> ADC1_IN9
    */
    GPIO_InitStruct.Pin = NTC_IN_Pin;
 8002864:	2310      	movs	r3, #16
 8002866:	66fb      	str	r3, [r7, #108]	; 0x6c
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 8002868:	230b      	movs	r3, #11
 800286a:	673b      	str	r3, [r7, #112]	; 0x70
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800286c:	2300      	movs	r3, #0
 800286e:	677b      	str	r3, [r7, #116]	; 0x74
    HAL_GPIO_Init(NTC_IN_GPIO_Port, &GPIO_InitStruct);
 8002870:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8002874:	4619      	mov	r1, r3
 8002876:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800287a:	f001 feb1 	bl	80045e0 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800287e:	bf00      	nop
 8002880:	3780      	adds	r7, #128	; 0x80
 8002882:	46bd      	mov	sp, r7
 8002884:	bd80      	pop	{r7, pc}
 8002886:	bf00      	nop
 8002888:	50040000 	.word	0x50040000
 800288c:	40021000 	.word	0x40021000

08002890 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002890:	b580      	push	{r7, lr}
 8002892:	b0a0      	sub	sp, #128	; 0x80
 8002894:	af00      	add	r7, sp, #0
 8002896:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002898:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800289c:	2200      	movs	r2, #0
 800289e:	601a      	str	r2, [r3, #0]
 80028a0:	605a      	str	r2, [r3, #4]
 80028a2:	609a      	str	r2, [r3, #8]
 80028a4:	60da      	str	r2, [r3, #12]
 80028a6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80028a8:	f107 0310 	add.w	r3, r7, #16
 80028ac:	225c      	movs	r2, #92	; 0x5c
 80028ae:	2100      	movs	r1, #0
 80028b0:	4618      	mov	r0, r3
 80028b2:	f005 fa51 	bl	8007d58 <memset>
  if(hi2c->Instance==I2C1)
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	681b      	ldr	r3, [r3, #0]
 80028ba:	4a1f      	ldr	r2, [pc, #124]	; (8002938 <HAL_I2C_MspInit+0xa8>)
 80028bc:	4293      	cmp	r3, r2
 80028be:	d137      	bne.n	8002930 <HAL_I2C_MspInit+0xa0>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 80028c0:	2340      	movs	r3, #64	; 0x40
 80028c2:	613b      	str	r3, [r7, #16]
    PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 80028c4:	2300      	movs	r3, #0
 80028c6:	643b      	str	r3, [r7, #64]	; 0x40
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80028c8:	f107 0310 	add.w	r3, r7, #16
 80028cc:	4618      	mov	r0, r3
 80028ce:	f003 fca9 	bl	8006224 <HAL_RCCEx_PeriphCLKConfig>
 80028d2:	4603      	mov	r3, r0
 80028d4:	2b00      	cmp	r3, #0
 80028d6:	d001      	beq.n	80028dc <HAL_I2C_MspInit+0x4c>
    {
      Error_Handler();
 80028d8:	f7ff fd88 	bl	80023ec <Error_Handler>
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80028dc:	4b17      	ldr	r3, [pc, #92]	; (800293c <HAL_I2C_MspInit+0xac>)
 80028de:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80028e0:	4a16      	ldr	r2, [pc, #88]	; (800293c <HAL_I2C_MspInit+0xac>)
 80028e2:	f043 0301 	orr.w	r3, r3, #1
 80028e6:	64d3      	str	r3, [r2, #76]	; 0x4c
 80028e8:	4b14      	ldr	r3, [pc, #80]	; (800293c <HAL_I2C_MspInit+0xac>)
 80028ea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80028ec:	f003 0301 	and.w	r3, r3, #1
 80028f0:	60fb      	str	r3, [r7, #12]
 80028f2:	68fb      	ldr	r3, [r7, #12]
    /**I2C1 GPIO Configuration
    PA9     ------> I2C1_SCL
    PA10     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80028f4:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80028f8:	66fb      	str	r3, [r7, #108]	; 0x6c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80028fa:	2312      	movs	r3, #18
 80028fc:	673b      	str	r3, [r7, #112]	; 0x70
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80028fe:	2300      	movs	r3, #0
 8002900:	677b      	str	r3, [r7, #116]	; 0x74
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002902:	2303      	movs	r3, #3
 8002904:	67bb      	str	r3, [r7, #120]	; 0x78
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002906:	2304      	movs	r3, #4
 8002908:	67fb      	str	r3, [r7, #124]	; 0x7c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800290a:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800290e:	4619      	mov	r1, r3
 8002910:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002914:	f001 fe64 	bl	80045e0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002918:	4b08      	ldr	r3, [pc, #32]	; (800293c <HAL_I2C_MspInit+0xac>)
 800291a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800291c:	4a07      	ldr	r2, [pc, #28]	; (800293c <HAL_I2C_MspInit+0xac>)
 800291e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002922:	6593      	str	r3, [r2, #88]	; 0x58
 8002924:	4b05      	ldr	r3, [pc, #20]	; (800293c <HAL_I2C_MspInit+0xac>)
 8002926:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002928:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800292c:	60bb      	str	r3, [r7, #8]
 800292e:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8002930:	bf00      	nop
 8002932:	3780      	adds	r7, #128	; 0x80
 8002934:	46bd      	mov	sp, r7
 8002936:	bd80      	pop	{r7, pc}
 8002938:	40005400 	.word	0x40005400
 800293c:	40021000 	.word	0x40021000

08002940 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002940:	b580      	push	{r7, lr}
 8002942:	b086      	sub	sp, #24
 8002944:	af00      	add	r7, sp, #0
 8002946:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	4a23      	ldr	r2, [pc, #140]	; (80029dc <HAL_TIM_Base_MspInit+0x9c>)
 800294e:	4293      	cmp	r3, r2
 8002950:	d114      	bne.n	800297c <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002952:	4b23      	ldr	r3, [pc, #140]	; (80029e0 <HAL_TIM_Base_MspInit+0xa0>)
 8002954:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002956:	4a22      	ldr	r2, [pc, #136]	; (80029e0 <HAL_TIM_Base_MspInit+0xa0>)
 8002958:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800295c:	6613      	str	r3, [r2, #96]	; 0x60
 800295e:	4b20      	ldr	r3, [pc, #128]	; (80029e0 <HAL_TIM_Base_MspInit+0xa0>)
 8002960:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002962:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002966:	617b      	str	r3, [r7, #20]
 8002968:	697b      	ldr	r3, [r7, #20]
    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 0, 0);
 800296a:	2200      	movs	r2, #0
 800296c:	2100      	movs	r1, #0
 800296e:	2018      	movs	r0, #24
 8002970:	f001 fdff 	bl	8004572 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 8002974:	2018      	movs	r0, #24
 8002976:	f001 fe18 	bl	80045aa <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM15_MspInit 1 */

  /* USER CODE END TIM15_MspInit 1 */
  }

}
 800297a:	e02a      	b.n	80029d2 <HAL_TIM_Base_MspInit+0x92>
  else if(htim_base->Instance==TIM2)
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002984:	d10c      	bne.n	80029a0 <HAL_TIM_Base_MspInit+0x60>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002986:	4b16      	ldr	r3, [pc, #88]	; (80029e0 <HAL_TIM_Base_MspInit+0xa0>)
 8002988:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800298a:	4a15      	ldr	r2, [pc, #84]	; (80029e0 <HAL_TIM_Base_MspInit+0xa0>)
 800298c:	f043 0301 	orr.w	r3, r3, #1
 8002990:	6593      	str	r3, [r2, #88]	; 0x58
 8002992:	4b13      	ldr	r3, [pc, #76]	; (80029e0 <HAL_TIM_Base_MspInit+0xa0>)
 8002994:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002996:	f003 0301 	and.w	r3, r3, #1
 800299a:	613b      	str	r3, [r7, #16]
 800299c:	693b      	ldr	r3, [r7, #16]
}
 800299e:	e018      	b.n	80029d2 <HAL_TIM_Base_MspInit+0x92>
  else if(htim_base->Instance==TIM15)
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	4a0f      	ldr	r2, [pc, #60]	; (80029e4 <HAL_TIM_Base_MspInit+0xa4>)
 80029a6:	4293      	cmp	r3, r2
 80029a8:	d113      	bne.n	80029d2 <HAL_TIM_Base_MspInit+0x92>
    __HAL_RCC_TIM15_CLK_ENABLE();
 80029aa:	4b0d      	ldr	r3, [pc, #52]	; (80029e0 <HAL_TIM_Base_MspInit+0xa0>)
 80029ac:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80029ae:	4a0c      	ldr	r2, [pc, #48]	; (80029e0 <HAL_TIM_Base_MspInit+0xa0>)
 80029b0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80029b4:	6613      	str	r3, [r2, #96]	; 0x60
 80029b6:	4b0a      	ldr	r3, [pc, #40]	; (80029e0 <HAL_TIM_Base_MspInit+0xa0>)
 80029b8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80029ba:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80029be:	60fb      	str	r3, [r7, #12]
 80029c0:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 0, 0);
 80029c2:	2200      	movs	r2, #0
 80029c4:	2100      	movs	r1, #0
 80029c6:	2018      	movs	r0, #24
 80029c8:	f001 fdd3 	bl	8004572 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 80029cc:	2018      	movs	r0, #24
 80029ce:	f001 fdec 	bl	80045aa <HAL_NVIC_EnableIRQ>
}
 80029d2:	bf00      	nop
 80029d4:	3718      	adds	r7, #24
 80029d6:	46bd      	mov	sp, r7
 80029d8:	bd80      	pop	{r7, pc}
 80029da:	bf00      	nop
 80029dc:	40012c00 	.word	0x40012c00
 80029e0:	40021000 	.word	0x40021000
 80029e4:	40014000 	.word	0x40014000

080029e8 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80029e8:	b580      	push	{r7, lr}
 80029ea:	b08a      	sub	sp, #40	; 0x28
 80029ec:	af00      	add	r7, sp, #0
 80029ee:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029f0:	f107 0314 	add.w	r3, r7, #20
 80029f4:	2200      	movs	r2, #0
 80029f6:	601a      	str	r2, [r3, #0]
 80029f8:	605a      	str	r2, [r3, #4]
 80029fa:	609a      	str	r2, [r3, #8]
 80029fc:	60da      	str	r2, [r3, #12]
 80029fe:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8002a00:	687b      	ldr	r3, [r7, #4]
 8002a02:	681b      	ldr	r3, [r3, #0]
 8002a04:	4a23      	ldr	r2, [pc, #140]	; (8002a94 <HAL_TIM_MspPostInit+0xac>)
 8002a06:	4293      	cmp	r3, r2
 8002a08:	d11e      	bne.n	8002a48 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a0a:	4b23      	ldr	r3, [pc, #140]	; (8002a98 <HAL_TIM_MspPostInit+0xb0>)
 8002a0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a0e:	4a22      	ldr	r2, [pc, #136]	; (8002a98 <HAL_TIM_MspPostInit+0xb0>)
 8002a10:	f043 0301 	orr.w	r3, r3, #1
 8002a14:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002a16:	4b20      	ldr	r3, [pc, #128]	; (8002a98 <HAL_TIM_MspPostInit+0xb0>)
 8002a18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a1a:	f003 0301 	and.w	r3, r3, #1
 8002a1e:	613b      	str	r3, [r7, #16]
 8002a20:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA11     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = FAN_PWM_Pin;
 8002a22:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002a26:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a28:	2302      	movs	r3, #2
 8002a2a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a2c:	2300      	movs	r3, #0
 8002a2e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002a30:	2300      	movs	r3, #0
 8002a32:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002a34:	2301      	movs	r3, #1
 8002a36:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(FAN_PWM_GPIO_Port, &GPIO_InitStruct);
 8002a38:	f107 0314 	add.w	r3, r7, #20
 8002a3c:	4619      	mov	r1, r3
 8002a3e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002a42:	f001 fdcd 	bl	80045e0 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8002a46:	e021      	b.n	8002a8c <HAL_TIM_MspPostInit+0xa4>
  else if(htim->Instance==TIM2)
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	681b      	ldr	r3, [r3, #0]
 8002a4c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002a50:	d11c      	bne.n	8002a8c <HAL_TIM_MspPostInit+0xa4>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a52:	4b11      	ldr	r3, [pc, #68]	; (8002a98 <HAL_TIM_MspPostInit+0xb0>)
 8002a54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a56:	4a10      	ldr	r2, [pc, #64]	; (8002a98 <HAL_TIM_MspPostInit+0xb0>)
 8002a58:	f043 0301 	orr.w	r3, r3, #1
 8002a5c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002a5e:	4b0e      	ldr	r3, [pc, #56]	; (8002a98 <HAL_TIM_MspPostInit+0xb0>)
 8002a60:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a62:	f003 0301 	and.w	r3, r3, #1
 8002a66:	60fb      	str	r3, [r7, #12]
 8002a68:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = RGB_R_Pin|RGB_G_Pin|RGB_B_Pin;
 8002a6a:	2307      	movs	r3, #7
 8002a6c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a6e:	2302      	movs	r3, #2
 8002a70:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a72:	2300      	movs	r3, #0
 8002a74:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002a76:	2300      	movs	r3, #0
 8002a78:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a7e:	f107 0314 	add.w	r3, r7, #20
 8002a82:	4619      	mov	r1, r3
 8002a84:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002a88:	f001 fdaa 	bl	80045e0 <HAL_GPIO_Init>
}
 8002a8c:	bf00      	nop
 8002a8e:	3728      	adds	r7, #40	; 0x28
 8002a90:	46bd      	mov	sp, r7
 8002a92:	bd80      	pop	{r7, pc}
 8002a94:	40012c00 	.word	0x40012c00
 8002a98:	40021000 	.word	0x40021000

08002a9c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002a9c:	b480      	push	{r7}
 8002a9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002aa0:	e7fe      	b.n	8002aa0 <NMI_Handler+0x4>

08002aa2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002aa2:	b480      	push	{r7}
 8002aa4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002aa6:	e7fe      	b.n	8002aa6 <HardFault_Handler+0x4>

08002aa8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002aa8:	b480      	push	{r7}
 8002aaa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002aac:	e7fe      	b.n	8002aac <MemManage_Handler+0x4>

08002aae <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002aae:	b480      	push	{r7}
 8002ab0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002ab2:	e7fe      	b.n	8002ab2 <BusFault_Handler+0x4>

08002ab4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002ab4:	b480      	push	{r7}
 8002ab6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002ab8:	e7fe      	b.n	8002ab8 <UsageFault_Handler+0x4>

08002aba <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002aba:	b480      	push	{r7}
 8002abc:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002abe:	bf00      	nop
 8002ac0:	46bd      	mov	sp, r7
 8002ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ac6:	4770      	bx	lr

08002ac8 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002ac8:	b480      	push	{r7}
 8002aca:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002acc:	bf00      	nop
 8002ace:	46bd      	mov	sp, r7
 8002ad0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ad4:	4770      	bx	lr

08002ad6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002ad6:	b480      	push	{r7}
 8002ad8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002ada:	bf00      	nop
 8002adc:	46bd      	mov	sp, r7
 8002ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ae2:	4770      	bx	lr

08002ae4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002ae4:	b580      	push	{r7, lr}
 8002ae6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002ae8:	f000 f976 	bl	8002dd8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002aec:	bf00      	nop
 8002aee:	bd80      	pop	{r7, pc}

08002af0 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8002af0:	b580      	push	{r7, lr}
 8002af2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Power_Button_Pin);
 8002af4:	2080      	movs	r0, #128	; 0x80
 8002af6:	f001 ff1d 	bl	8004934 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(BQ_INT_Pin);
 8002afa:	f44f 7080 	mov.w	r0, #256	; 0x100
 8002afe:	f001 ff19 	bl	8004934 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(MAX_ALRT_Pin);
 8002b02:	f44f 7000 	mov.w	r0, #512	; 0x200
 8002b06:	f001 ff15 	bl	8004934 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8002b0a:	bf00      	nop
 8002b0c:	bd80      	pop	{r7, pc}
	...

08002b10 <TIM1_BRK_TIM15_IRQHandler>:

/**
  * @brief This function handles TIM1 break interrupt and TIM15 global interrupt.
  */
void TIM1_BRK_TIM15_IRQHandler(void)
{
 8002b10:	b580      	push	{r7, lr}
 8002b12:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_BRK_TIM15_IRQn 0 */

  /* USER CODE END TIM1_BRK_TIM15_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8002b14:	4803      	ldr	r0, [pc, #12]	; (8002b24 <TIM1_BRK_TIM15_IRQHandler+0x14>)
 8002b16:	f004 f931 	bl	8006d7c <HAL_TIM_IRQHandler>
  HAL_TIM_IRQHandler(&htim15);
 8002b1a:	4803      	ldr	r0, [pc, #12]	; (8002b28 <TIM1_BRK_TIM15_IRQHandler+0x18>)
 8002b1c:	f004 f92e 	bl	8006d7c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_BRK_TIM15_IRQn 1 */

  /* USER CODE END TIM1_BRK_TIM15_IRQn 1 */
}
 8002b20:	bf00      	nop
 8002b22:	bd80      	pop	{r7, pc}
 8002b24:	20000348 	.word	0x20000348
 8002b28:	200003e0 	.word	0x200003e0

08002b2c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002b2c:	b480      	push	{r7}
 8002b2e:	af00      	add	r7, sp, #0
	return 1;
 8002b30:	2301      	movs	r3, #1
}
 8002b32:	4618      	mov	r0, r3
 8002b34:	46bd      	mov	sp, r7
 8002b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b3a:	4770      	bx	lr

08002b3c <_kill>:

int _kill(int pid, int sig)
{
 8002b3c:	b580      	push	{r7, lr}
 8002b3e:	b082      	sub	sp, #8
 8002b40:	af00      	add	r7, sp, #0
 8002b42:	6078      	str	r0, [r7, #4]
 8002b44:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8002b46:	f005 f8dd 	bl	8007d04 <__errno>
 8002b4a:	4603      	mov	r3, r0
 8002b4c:	2216      	movs	r2, #22
 8002b4e:	601a      	str	r2, [r3, #0]
	return -1;
 8002b50:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002b54:	4618      	mov	r0, r3
 8002b56:	3708      	adds	r7, #8
 8002b58:	46bd      	mov	sp, r7
 8002b5a:	bd80      	pop	{r7, pc}

08002b5c <_exit>:

void _exit (int status)
{
 8002b5c:	b580      	push	{r7, lr}
 8002b5e:	b082      	sub	sp, #8
 8002b60:	af00      	add	r7, sp, #0
 8002b62:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002b64:	f04f 31ff 	mov.w	r1, #4294967295
 8002b68:	6878      	ldr	r0, [r7, #4]
 8002b6a:	f7ff ffe7 	bl	8002b3c <_kill>
	while (1) {}		/* Make sure we hang here */
 8002b6e:	e7fe      	b.n	8002b6e <_exit+0x12>

08002b70 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002b70:	b580      	push	{r7, lr}
 8002b72:	b086      	sub	sp, #24
 8002b74:	af00      	add	r7, sp, #0
 8002b76:	60f8      	str	r0, [r7, #12]
 8002b78:	60b9      	str	r1, [r7, #8]
 8002b7a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002b7c:	2300      	movs	r3, #0
 8002b7e:	617b      	str	r3, [r7, #20]
 8002b80:	e00a      	b.n	8002b98 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8002b82:	f3af 8000 	nop.w
 8002b86:	4601      	mov	r1, r0
 8002b88:	68bb      	ldr	r3, [r7, #8]
 8002b8a:	1c5a      	adds	r2, r3, #1
 8002b8c:	60ba      	str	r2, [r7, #8]
 8002b8e:	b2ca      	uxtb	r2, r1
 8002b90:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002b92:	697b      	ldr	r3, [r7, #20]
 8002b94:	3301      	adds	r3, #1
 8002b96:	617b      	str	r3, [r7, #20]
 8002b98:	697a      	ldr	r2, [r7, #20]
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	429a      	cmp	r2, r3
 8002b9e:	dbf0      	blt.n	8002b82 <_read+0x12>
	}

return len;
 8002ba0:	687b      	ldr	r3, [r7, #4]
}
 8002ba2:	4618      	mov	r0, r3
 8002ba4:	3718      	adds	r7, #24
 8002ba6:	46bd      	mov	sp, r7
 8002ba8:	bd80      	pop	{r7, pc}

08002baa <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002baa:	b580      	push	{r7, lr}
 8002bac:	b086      	sub	sp, #24
 8002bae:	af00      	add	r7, sp, #0
 8002bb0:	60f8      	str	r0, [r7, #12]
 8002bb2:	60b9      	str	r1, [r7, #8]
 8002bb4:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002bb6:	2300      	movs	r3, #0
 8002bb8:	617b      	str	r3, [r7, #20]
 8002bba:	e009      	b.n	8002bd0 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002bbc:	68bb      	ldr	r3, [r7, #8]
 8002bbe:	1c5a      	adds	r2, r3, #1
 8002bc0:	60ba      	str	r2, [r7, #8]
 8002bc2:	781b      	ldrb	r3, [r3, #0]
 8002bc4:	4618      	mov	r0, r3
 8002bc6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002bca:	697b      	ldr	r3, [r7, #20]
 8002bcc:	3301      	adds	r3, #1
 8002bce:	617b      	str	r3, [r7, #20]
 8002bd0:	697a      	ldr	r2, [r7, #20]
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	429a      	cmp	r2, r3
 8002bd6:	dbf1      	blt.n	8002bbc <_write+0x12>
	}
	return len;
 8002bd8:	687b      	ldr	r3, [r7, #4]
}
 8002bda:	4618      	mov	r0, r3
 8002bdc:	3718      	adds	r7, #24
 8002bde:	46bd      	mov	sp, r7
 8002be0:	bd80      	pop	{r7, pc}

08002be2 <_close>:

int _close(int file)
{
 8002be2:	b480      	push	{r7}
 8002be4:	b083      	sub	sp, #12
 8002be6:	af00      	add	r7, sp, #0
 8002be8:	6078      	str	r0, [r7, #4]
	return -1;
 8002bea:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002bee:	4618      	mov	r0, r3
 8002bf0:	370c      	adds	r7, #12
 8002bf2:	46bd      	mov	sp, r7
 8002bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bf8:	4770      	bx	lr

08002bfa <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002bfa:	b480      	push	{r7}
 8002bfc:	b083      	sub	sp, #12
 8002bfe:	af00      	add	r7, sp, #0
 8002c00:	6078      	str	r0, [r7, #4]
 8002c02:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002c04:	683b      	ldr	r3, [r7, #0]
 8002c06:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002c0a:	605a      	str	r2, [r3, #4]
	return 0;
 8002c0c:	2300      	movs	r3, #0
}
 8002c0e:	4618      	mov	r0, r3
 8002c10:	370c      	adds	r7, #12
 8002c12:	46bd      	mov	sp, r7
 8002c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c18:	4770      	bx	lr

08002c1a <_isatty>:

int _isatty(int file)
{
 8002c1a:	b480      	push	{r7}
 8002c1c:	b083      	sub	sp, #12
 8002c1e:	af00      	add	r7, sp, #0
 8002c20:	6078      	str	r0, [r7, #4]
	return 1;
 8002c22:	2301      	movs	r3, #1
}
 8002c24:	4618      	mov	r0, r3
 8002c26:	370c      	adds	r7, #12
 8002c28:	46bd      	mov	sp, r7
 8002c2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c2e:	4770      	bx	lr

08002c30 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002c30:	b480      	push	{r7}
 8002c32:	b085      	sub	sp, #20
 8002c34:	af00      	add	r7, sp, #0
 8002c36:	60f8      	str	r0, [r7, #12]
 8002c38:	60b9      	str	r1, [r7, #8]
 8002c3a:	607a      	str	r2, [r7, #4]
	return 0;
 8002c3c:	2300      	movs	r3, #0
}
 8002c3e:	4618      	mov	r0, r3
 8002c40:	3714      	adds	r7, #20
 8002c42:	46bd      	mov	sp, r7
 8002c44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c48:	4770      	bx	lr
	...

08002c4c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002c4c:	b580      	push	{r7, lr}
 8002c4e:	b086      	sub	sp, #24
 8002c50:	af00      	add	r7, sp, #0
 8002c52:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002c54:	4a14      	ldr	r2, [pc, #80]	; (8002ca8 <_sbrk+0x5c>)
 8002c56:	4b15      	ldr	r3, [pc, #84]	; (8002cac <_sbrk+0x60>)
 8002c58:	1ad3      	subs	r3, r2, r3
 8002c5a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002c5c:	697b      	ldr	r3, [r7, #20]
 8002c5e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002c60:	4b13      	ldr	r3, [pc, #76]	; (8002cb0 <_sbrk+0x64>)
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	2b00      	cmp	r3, #0
 8002c66:	d102      	bne.n	8002c6e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002c68:	4b11      	ldr	r3, [pc, #68]	; (8002cb0 <_sbrk+0x64>)
 8002c6a:	4a12      	ldr	r2, [pc, #72]	; (8002cb4 <_sbrk+0x68>)
 8002c6c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002c6e:	4b10      	ldr	r3, [pc, #64]	; (8002cb0 <_sbrk+0x64>)
 8002c70:	681a      	ldr	r2, [r3, #0]
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	4413      	add	r3, r2
 8002c76:	693a      	ldr	r2, [r7, #16]
 8002c78:	429a      	cmp	r2, r3
 8002c7a:	d207      	bcs.n	8002c8c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002c7c:	f005 f842 	bl	8007d04 <__errno>
 8002c80:	4603      	mov	r3, r0
 8002c82:	220c      	movs	r2, #12
 8002c84:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002c86:	f04f 33ff 	mov.w	r3, #4294967295
 8002c8a:	e009      	b.n	8002ca0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002c8c:	4b08      	ldr	r3, [pc, #32]	; (8002cb0 <_sbrk+0x64>)
 8002c8e:	681b      	ldr	r3, [r3, #0]
 8002c90:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002c92:	4b07      	ldr	r3, [pc, #28]	; (8002cb0 <_sbrk+0x64>)
 8002c94:	681a      	ldr	r2, [r3, #0]
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	4413      	add	r3, r2
 8002c9a:	4a05      	ldr	r2, [pc, #20]	; (8002cb0 <_sbrk+0x64>)
 8002c9c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002c9e:	68fb      	ldr	r3, [r7, #12]
}
 8002ca0:	4618      	mov	r0, r3
 8002ca2:	3718      	adds	r7, #24
 8002ca4:	46bd      	mov	sp, r7
 8002ca6:	bd80      	pop	{r7, pc}
 8002ca8:	20010000 	.word	0x20010000
 8002cac:	00000400 	.word	0x00000400
 8002cb0:	20000438 	.word	0x20000438
 8002cb4:	20000450 	.word	0x20000450

08002cb8 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 8002cb8:	b480      	push	{r7}
 8002cba:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8002cbc:	4b06      	ldr	r3, [pc, #24]	; (8002cd8 <SystemInit+0x20>)
 8002cbe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002cc2:	4a05      	ldr	r2, [pc, #20]	; (8002cd8 <SystemInit+0x20>)
 8002cc4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002cc8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
#endif
}
 8002ccc:	bf00      	nop
 8002cce:	46bd      	mov	sp, r7
 8002cd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cd4:	4770      	bx	lr
 8002cd6:	bf00      	nop
 8002cd8:	e000ed00 	.word	0xe000ed00

08002cdc <Reset_Handler>:
 8002cdc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002d14 <LoopForever+0x2>
 8002ce0:	f7ff ffea 	bl	8002cb8 <SystemInit>
 8002ce4:	480c      	ldr	r0, [pc, #48]	; (8002d18 <LoopForever+0x6>)
 8002ce6:	490d      	ldr	r1, [pc, #52]	; (8002d1c <LoopForever+0xa>)
 8002ce8:	4a0d      	ldr	r2, [pc, #52]	; (8002d20 <LoopForever+0xe>)
 8002cea:	2300      	movs	r3, #0
 8002cec:	e002      	b.n	8002cf4 <LoopCopyDataInit>

08002cee <CopyDataInit>:
 8002cee:	58d4      	ldr	r4, [r2, r3]
 8002cf0:	50c4      	str	r4, [r0, r3]
 8002cf2:	3304      	adds	r3, #4

08002cf4 <LoopCopyDataInit>:
 8002cf4:	18c4      	adds	r4, r0, r3
 8002cf6:	428c      	cmp	r4, r1
 8002cf8:	d3f9      	bcc.n	8002cee <CopyDataInit>
 8002cfa:	4a0a      	ldr	r2, [pc, #40]	; (8002d24 <LoopForever+0x12>)
 8002cfc:	4c0a      	ldr	r4, [pc, #40]	; (8002d28 <LoopForever+0x16>)
 8002cfe:	2300      	movs	r3, #0
 8002d00:	e001      	b.n	8002d06 <LoopFillZerobss>

08002d02 <FillZerobss>:
 8002d02:	6013      	str	r3, [r2, #0]
 8002d04:	3204      	adds	r2, #4

08002d06 <LoopFillZerobss>:
 8002d06:	42a2      	cmp	r2, r4
 8002d08:	d3fb      	bcc.n	8002d02 <FillZerobss>
 8002d0a:	f005 f801 	bl	8007d10 <__libc_init_array>
 8002d0e:	f7fe febb 	bl	8001a88 <main>

08002d12 <LoopForever>:
 8002d12:	e7fe      	b.n	8002d12 <LoopForever>
 8002d14:	20010000 	.word	0x20010000
 8002d18:	20000000 	.word	0x20000000
 8002d1c:	200001ec 	.word	0x200001ec
 8002d20:	0800cf44 	.word	0x0800cf44
 8002d24:	200001f0 	.word	0x200001f0
 8002d28:	20000450 	.word	0x20000450

08002d2c <ADC1_IRQHandler>:
 8002d2c:	e7fe      	b.n	8002d2c <ADC1_IRQHandler>

08002d2e <HAL_Init>:
 8002d2e:	b580      	push	{r7, lr}
 8002d30:	b082      	sub	sp, #8
 8002d32:	af00      	add	r7, sp, #0
 8002d34:	2300      	movs	r3, #0
 8002d36:	71fb      	strb	r3, [r7, #7]
 8002d38:	2003      	movs	r0, #3
 8002d3a:	f001 fc0f 	bl	800455c <HAL_NVIC_SetPriorityGrouping>
 8002d3e:	200f      	movs	r0, #15
 8002d40:	f000 f80e 	bl	8002d60 <HAL_InitTick>
 8002d44:	4603      	mov	r3, r0
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	d002      	beq.n	8002d50 <HAL_Init+0x22>
 8002d4a:	2301      	movs	r3, #1
 8002d4c:	71fb      	strb	r3, [r7, #7]
 8002d4e:	e001      	b.n	8002d54 <HAL_Init+0x26>
 8002d50:	f7ff fd24 	bl	800279c <HAL_MspInit>
 8002d54:	79fb      	ldrb	r3, [r7, #7]
 8002d56:	4618      	mov	r0, r3
 8002d58:	3708      	adds	r7, #8
 8002d5a:	46bd      	mov	sp, r7
 8002d5c:	bd80      	pop	{r7, pc}
	...

08002d60 <HAL_InitTick>:
 8002d60:	b580      	push	{r7, lr}
 8002d62:	b084      	sub	sp, #16
 8002d64:	af00      	add	r7, sp, #0
 8002d66:	6078      	str	r0, [r7, #4]
 8002d68:	2300      	movs	r3, #0
 8002d6a:	73fb      	strb	r3, [r7, #15]
 8002d6c:	4b17      	ldr	r3, [pc, #92]	; (8002dcc <HAL_InitTick+0x6c>)
 8002d6e:	781b      	ldrb	r3, [r3, #0]
 8002d70:	2b00      	cmp	r3, #0
 8002d72:	d023      	beq.n	8002dbc <HAL_InitTick+0x5c>
 8002d74:	4b16      	ldr	r3, [pc, #88]	; (8002dd0 <HAL_InitTick+0x70>)
 8002d76:	681a      	ldr	r2, [r3, #0]
 8002d78:	4b14      	ldr	r3, [pc, #80]	; (8002dcc <HAL_InitTick+0x6c>)
 8002d7a:	781b      	ldrb	r3, [r3, #0]
 8002d7c:	4619      	mov	r1, r3
 8002d7e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002d82:	fbb3 f3f1 	udiv	r3, r3, r1
 8002d86:	fbb2 f3f3 	udiv	r3, r2, r3
 8002d8a:	4618      	mov	r0, r3
 8002d8c:	f001 fc1b 	bl	80045c6 <HAL_SYSTICK_Config>
 8002d90:	4603      	mov	r3, r0
 8002d92:	2b00      	cmp	r3, #0
 8002d94:	d10f      	bne.n	8002db6 <HAL_InitTick+0x56>
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	2b0f      	cmp	r3, #15
 8002d9a:	d809      	bhi.n	8002db0 <HAL_InitTick+0x50>
 8002d9c:	2200      	movs	r2, #0
 8002d9e:	6879      	ldr	r1, [r7, #4]
 8002da0:	f04f 30ff 	mov.w	r0, #4294967295
 8002da4:	f001 fbe5 	bl	8004572 <HAL_NVIC_SetPriority>
 8002da8:	4a0a      	ldr	r2, [pc, #40]	; (8002dd4 <HAL_InitTick+0x74>)
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	6013      	str	r3, [r2, #0]
 8002dae:	e007      	b.n	8002dc0 <HAL_InitTick+0x60>
 8002db0:	2301      	movs	r3, #1
 8002db2:	73fb      	strb	r3, [r7, #15]
 8002db4:	e004      	b.n	8002dc0 <HAL_InitTick+0x60>
 8002db6:	2301      	movs	r3, #1
 8002db8:	73fb      	strb	r3, [r7, #15]
 8002dba:	e001      	b.n	8002dc0 <HAL_InitTick+0x60>
 8002dbc:	2301      	movs	r3, #1
 8002dbe:	73fb      	strb	r3, [r7, #15]
 8002dc0:	7bfb      	ldrb	r3, [r7, #15]
 8002dc2:	4618      	mov	r0, r3
 8002dc4:	3710      	adds	r7, #16
 8002dc6:	46bd      	mov	sp, r7
 8002dc8:	bd80      	pop	{r7, pc}
 8002dca:	bf00      	nop
 8002dcc:	20000014 	.word	0x20000014
 8002dd0:	2000000c 	.word	0x2000000c
 8002dd4:	20000010 	.word	0x20000010

08002dd8 <HAL_IncTick>:
 8002dd8:	b480      	push	{r7}
 8002dda:	af00      	add	r7, sp, #0
 8002ddc:	4b06      	ldr	r3, [pc, #24]	; (8002df8 <HAL_IncTick+0x20>)
 8002dde:	781b      	ldrb	r3, [r3, #0]
 8002de0:	461a      	mov	r2, r3
 8002de2:	4b06      	ldr	r3, [pc, #24]	; (8002dfc <HAL_IncTick+0x24>)
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	4413      	add	r3, r2
 8002de8:	4a04      	ldr	r2, [pc, #16]	; (8002dfc <HAL_IncTick+0x24>)
 8002dea:	6013      	str	r3, [r2, #0]
 8002dec:	bf00      	nop
 8002dee:	46bd      	mov	sp, r7
 8002df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002df4:	4770      	bx	lr
 8002df6:	bf00      	nop
 8002df8:	20000014 	.word	0x20000014
 8002dfc:	2000043c 	.word	0x2000043c

08002e00 <HAL_GetTick>:
 8002e00:	b480      	push	{r7}
 8002e02:	af00      	add	r7, sp, #0
 8002e04:	4b03      	ldr	r3, [pc, #12]	; (8002e14 <HAL_GetTick+0x14>)
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	4618      	mov	r0, r3
 8002e0a:	46bd      	mov	sp, r7
 8002e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e10:	4770      	bx	lr
 8002e12:	bf00      	nop
 8002e14:	2000043c 	.word	0x2000043c

08002e18 <HAL_Delay>:
 8002e18:	b580      	push	{r7, lr}
 8002e1a:	b084      	sub	sp, #16
 8002e1c:	af00      	add	r7, sp, #0
 8002e1e:	6078      	str	r0, [r7, #4]
 8002e20:	f7ff ffee 	bl	8002e00 <HAL_GetTick>
 8002e24:	60b8      	str	r0, [r7, #8]
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	60fb      	str	r3, [r7, #12]
 8002e2a:	68fb      	ldr	r3, [r7, #12]
 8002e2c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002e30:	d005      	beq.n	8002e3e <HAL_Delay+0x26>
 8002e32:	4b0a      	ldr	r3, [pc, #40]	; (8002e5c <HAL_Delay+0x44>)
 8002e34:	781b      	ldrb	r3, [r3, #0]
 8002e36:	461a      	mov	r2, r3
 8002e38:	68fb      	ldr	r3, [r7, #12]
 8002e3a:	4413      	add	r3, r2
 8002e3c:	60fb      	str	r3, [r7, #12]
 8002e3e:	bf00      	nop
 8002e40:	f7ff ffde 	bl	8002e00 <HAL_GetTick>
 8002e44:	4602      	mov	r2, r0
 8002e46:	68bb      	ldr	r3, [r7, #8]
 8002e48:	1ad3      	subs	r3, r2, r3
 8002e4a:	68fa      	ldr	r2, [r7, #12]
 8002e4c:	429a      	cmp	r2, r3
 8002e4e:	d8f7      	bhi.n	8002e40 <HAL_Delay+0x28>
 8002e50:	bf00      	nop
 8002e52:	bf00      	nop
 8002e54:	3710      	adds	r7, #16
 8002e56:	46bd      	mov	sp, r7
 8002e58:	bd80      	pop	{r7, pc}
 8002e5a:	bf00      	nop
 8002e5c:	20000014 	.word	0x20000014

08002e60 <HAL_ResumeTick>:
 8002e60:	b480      	push	{r7}
 8002e62:	af00      	add	r7, sp, #0
 8002e64:	4b05      	ldr	r3, [pc, #20]	; (8002e7c <HAL_ResumeTick+0x1c>)
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	4a04      	ldr	r2, [pc, #16]	; (8002e7c <HAL_ResumeTick+0x1c>)
 8002e6a:	f043 0302 	orr.w	r3, r3, #2
 8002e6e:	6013      	str	r3, [r2, #0]
 8002e70:	bf00      	nop
 8002e72:	46bd      	mov	sp, r7
 8002e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e78:	4770      	bx	lr
 8002e7a:	bf00      	nop
 8002e7c:	e000e010 	.word	0xe000e010

08002e80 <LL_ADC_SetCommonClock>:
 8002e80:	b480      	push	{r7}
 8002e82:	b083      	sub	sp, #12
 8002e84:	af00      	add	r7, sp, #0
 8002e86:	6078      	str	r0, [r7, #4]
 8002e88:	6039      	str	r1, [r7, #0]
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	689b      	ldr	r3, [r3, #8]
 8002e8e:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 8002e92:	683b      	ldr	r3, [r7, #0]
 8002e94:	431a      	orrs	r2, r3
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	609a      	str	r2, [r3, #8]
 8002e9a:	bf00      	nop
 8002e9c:	370c      	adds	r7, #12
 8002e9e:	46bd      	mov	sp, r7
 8002ea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ea4:	4770      	bx	lr

08002ea6 <LL_ADC_SetCommonPathInternalCh>:
 8002ea6:	b480      	push	{r7}
 8002ea8:	b083      	sub	sp, #12
 8002eaa:	af00      	add	r7, sp, #0
 8002eac:	6078      	str	r0, [r7, #4]
 8002eae:	6039      	str	r1, [r7, #0]
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	689b      	ldr	r3, [r3, #8]
 8002eb4:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 8002eb8:	683b      	ldr	r3, [r7, #0]
 8002eba:	431a      	orrs	r2, r3
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	609a      	str	r2, [r3, #8]
 8002ec0:	bf00      	nop
 8002ec2:	370c      	adds	r7, #12
 8002ec4:	46bd      	mov	sp, r7
 8002ec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eca:	4770      	bx	lr

08002ecc <LL_ADC_GetCommonPathInternalCh>:
 8002ecc:	b480      	push	{r7}
 8002ece:	b083      	sub	sp, #12
 8002ed0:	af00      	add	r7, sp, #0
 8002ed2:	6078      	str	r0, [r7, #4]
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	689b      	ldr	r3, [r3, #8]
 8002ed8:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
 8002edc:	4618      	mov	r0, r3
 8002ede:	370c      	adds	r7, #12
 8002ee0:	46bd      	mov	sp, r7
 8002ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ee6:	4770      	bx	lr

08002ee8 <LL_ADC_SetOffset>:
 8002ee8:	b480      	push	{r7}
 8002eea:	b087      	sub	sp, #28
 8002eec:	af00      	add	r7, sp, #0
 8002eee:	60f8      	str	r0, [r7, #12]
 8002ef0:	60b9      	str	r1, [r7, #8]
 8002ef2:	607a      	str	r2, [r7, #4]
 8002ef4:	603b      	str	r3, [r7, #0]
 8002ef6:	68fb      	ldr	r3, [r7, #12]
 8002ef8:	3360      	adds	r3, #96	; 0x60
 8002efa:	461a      	mov	r2, r3
 8002efc:	68bb      	ldr	r3, [r7, #8]
 8002efe:	009b      	lsls	r3, r3, #2
 8002f00:	4413      	add	r3, r2
 8002f02:	617b      	str	r3, [r7, #20]
 8002f04:	697b      	ldr	r3, [r7, #20]
 8002f06:	681a      	ldr	r2, [r3, #0]
 8002f08:	4b08      	ldr	r3, [pc, #32]	; (8002f2c <LL_ADC_SetOffset+0x44>)
 8002f0a:	4013      	ands	r3, r2
 8002f0c:	687a      	ldr	r2, [r7, #4]
 8002f0e:	f002 41f8 	and.w	r1, r2, #2080374784	; 0x7c000000
 8002f12:	683a      	ldr	r2, [r7, #0]
 8002f14:	430a      	orrs	r2, r1
 8002f16:	4313      	orrs	r3, r2
 8002f18:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 8002f1c:	697b      	ldr	r3, [r7, #20]
 8002f1e:	601a      	str	r2, [r3, #0]
 8002f20:	bf00      	nop
 8002f22:	371c      	adds	r7, #28
 8002f24:	46bd      	mov	sp, r7
 8002f26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f2a:	4770      	bx	lr
 8002f2c:	03fff000 	.word	0x03fff000

08002f30 <LL_ADC_GetOffsetChannel>:
 8002f30:	b480      	push	{r7}
 8002f32:	b085      	sub	sp, #20
 8002f34:	af00      	add	r7, sp, #0
 8002f36:	6078      	str	r0, [r7, #4]
 8002f38:	6039      	str	r1, [r7, #0]
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	3360      	adds	r3, #96	; 0x60
 8002f3e:	461a      	mov	r2, r3
 8002f40:	683b      	ldr	r3, [r7, #0]
 8002f42:	009b      	lsls	r3, r3, #2
 8002f44:	4413      	add	r3, r2
 8002f46:	60fb      	str	r3, [r7, #12]
 8002f48:	68fb      	ldr	r3, [r7, #12]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	f003 43f8 	and.w	r3, r3, #2080374784	; 0x7c000000
 8002f50:	4618      	mov	r0, r3
 8002f52:	3714      	adds	r7, #20
 8002f54:	46bd      	mov	sp, r7
 8002f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f5a:	4770      	bx	lr

08002f5c <LL_ADC_SetOffsetState>:
 8002f5c:	b480      	push	{r7}
 8002f5e:	b087      	sub	sp, #28
 8002f60:	af00      	add	r7, sp, #0
 8002f62:	60f8      	str	r0, [r7, #12]
 8002f64:	60b9      	str	r1, [r7, #8]
 8002f66:	607a      	str	r2, [r7, #4]
 8002f68:	68fb      	ldr	r3, [r7, #12]
 8002f6a:	3360      	adds	r3, #96	; 0x60
 8002f6c:	461a      	mov	r2, r3
 8002f6e:	68bb      	ldr	r3, [r7, #8]
 8002f70:	009b      	lsls	r3, r3, #2
 8002f72:	4413      	add	r3, r2
 8002f74:	617b      	str	r3, [r7, #20]
 8002f76:	697b      	ldr	r3, [r7, #20]
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	431a      	orrs	r2, r3
 8002f82:	697b      	ldr	r3, [r7, #20]
 8002f84:	601a      	str	r2, [r3, #0]
 8002f86:	bf00      	nop
 8002f88:	371c      	adds	r7, #28
 8002f8a:	46bd      	mov	sp, r7
 8002f8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f90:	4770      	bx	lr

08002f92 <LL_ADC_REG_IsTriggerSourceSWStart>:
 8002f92:	b480      	push	{r7}
 8002f94:	b083      	sub	sp, #12
 8002f96:	af00      	add	r7, sp, #0
 8002f98:	6078      	str	r0, [r7, #4]
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	68db      	ldr	r3, [r3, #12]
 8002f9e:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8002fa2:	2b00      	cmp	r3, #0
 8002fa4:	d101      	bne.n	8002faa <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8002fa6:	2301      	movs	r3, #1
 8002fa8:	e000      	b.n	8002fac <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8002faa:	2300      	movs	r3, #0
 8002fac:	4618      	mov	r0, r3
 8002fae:	370c      	adds	r7, #12
 8002fb0:	46bd      	mov	sp, r7
 8002fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fb6:	4770      	bx	lr

08002fb8 <LL_ADC_REG_SetSequencerRanks>:
 8002fb8:	b480      	push	{r7}
 8002fba:	b087      	sub	sp, #28
 8002fbc:	af00      	add	r7, sp, #0
 8002fbe:	60f8      	str	r0, [r7, #12]
 8002fc0:	60b9      	str	r1, [r7, #8]
 8002fc2:	607a      	str	r2, [r7, #4]
 8002fc4:	68fb      	ldr	r3, [r7, #12]
 8002fc6:	3330      	adds	r3, #48	; 0x30
 8002fc8:	461a      	mov	r2, r3
 8002fca:	68bb      	ldr	r3, [r7, #8]
 8002fcc:	0a1b      	lsrs	r3, r3, #8
 8002fce:	009b      	lsls	r3, r3, #2
 8002fd0:	f003 030c 	and.w	r3, r3, #12
 8002fd4:	4413      	add	r3, r2
 8002fd6:	617b      	str	r3, [r7, #20]
 8002fd8:	697b      	ldr	r3, [r7, #20]
 8002fda:	681a      	ldr	r2, [r3, #0]
 8002fdc:	68bb      	ldr	r3, [r7, #8]
 8002fde:	f003 031f 	and.w	r3, r3, #31
 8002fe2:	211f      	movs	r1, #31
 8002fe4:	fa01 f303 	lsl.w	r3, r1, r3
 8002fe8:	43db      	mvns	r3, r3
 8002fea:	401a      	ands	r2, r3
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	0e9b      	lsrs	r3, r3, #26
 8002ff0:	f003 011f 	and.w	r1, r3, #31
 8002ff4:	68bb      	ldr	r3, [r7, #8]
 8002ff6:	f003 031f 	and.w	r3, r3, #31
 8002ffa:	fa01 f303 	lsl.w	r3, r1, r3
 8002ffe:	431a      	orrs	r2, r3
 8003000:	697b      	ldr	r3, [r7, #20]
 8003002:	601a      	str	r2, [r3, #0]
 8003004:	bf00      	nop
 8003006:	371c      	adds	r7, #28
 8003008:	46bd      	mov	sp, r7
 800300a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800300e:	4770      	bx	lr

08003010 <LL_ADC_SetChannelSamplingTime>:
 8003010:	b480      	push	{r7}
 8003012:	b087      	sub	sp, #28
 8003014:	af00      	add	r7, sp, #0
 8003016:	60f8      	str	r0, [r7, #12]
 8003018:	60b9      	str	r1, [r7, #8]
 800301a:	607a      	str	r2, [r7, #4]
 800301c:	68fb      	ldr	r3, [r7, #12]
 800301e:	3314      	adds	r3, #20
 8003020:	461a      	mov	r2, r3
 8003022:	68bb      	ldr	r3, [r7, #8]
 8003024:	0e5b      	lsrs	r3, r3, #25
 8003026:	009b      	lsls	r3, r3, #2
 8003028:	f003 0304 	and.w	r3, r3, #4
 800302c:	4413      	add	r3, r2
 800302e:	617b      	str	r3, [r7, #20]
 8003030:	697b      	ldr	r3, [r7, #20]
 8003032:	681a      	ldr	r2, [r3, #0]
 8003034:	68bb      	ldr	r3, [r7, #8]
 8003036:	0d1b      	lsrs	r3, r3, #20
 8003038:	f003 031f 	and.w	r3, r3, #31
 800303c:	2107      	movs	r1, #7
 800303e:	fa01 f303 	lsl.w	r3, r1, r3
 8003042:	43db      	mvns	r3, r3
 8003044:	401a      	ands	r2, r3
 8003046:	68bb      	ldr	r3, [r7, #8]
 8003048:	0d1b      	lsrs	r3, r3, #20
 800304a:	f003 031f 	and.w	r3, r3, #31
 800304e:	6879      	ldr	r1, [r7, #4]
 8003050:	fa01 f303 	lsl.w	r3, r1, r3
 8003054:	431a      	orrs	r2, r3
 8003056:	697b      	ldr	r3, [r7, #20]
 8003058:	601a      	str	r2, [r3, #0]
 800305a:	bf00      	nop
 800305c:	371c      	adds	r7, #28
 800305e:	46bd      	mov	sp, r7
 8003060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003064:	4770      	bx	lr
	...

08003068 <LL_ADC_SetChannelSingleDiff>:
 8003068:	b480      	push	{r7}
 800306a:	b085      	sub	sp, #20
 800306c:	af00      	add	r7, sp, #0
 800306e:	60f8      	str	r0, [r7, #12]
 8003070:	60b9      	str	r1, [r7, #8]
 8003072:	607a      	str	r2, [r7, #4]
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 800307a:	68bb      	ldr	r3, [r7, #8]
 800307c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003080:	43db      	mvns	r3, r3
 8003082:	401a      	ands	r2, r3
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	f003 0318 	and.w	r3, r3, #24
 800308a:	4908      	ldr	r1, [pc, #32]	; (80030ac <LL_ADC_SetChannelSingleDiff+0x44>)
 800308c:	40d9      	lsrs	r1, r3
 800308e:	68bb      	ldr	r3, [r7, #8]
 8003090:	400b      	ands	r3, r1
 8003092:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003096:	431a      	orrs	r2, r3
 8003098:	68fb      	ldr	r3, [r7, #12]
 800309a:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 800309e:	bf00      	nop
 80030a0:	3714      	adds	r7, #20
 80030a2:	46bd      	mov	sp, r7
 80030a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030a8:	4770      	bx	lr
 80030aa:	bf00      	nop
 80030ac:	0007ffff 	.word	0x0007ffff

080030b0 <LL_ADC_DisableDeepPowerDown>:
 80030b0:	b480      	push	{r7}
 80030b2:	b083      	sub	sp, #12
 80030b4:	af00      	add	r7, sp, #0
 80030b6:	6078      	str	r0, [r7, #4]
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	689b      	ldr	r3, [r3, #8]
 80030bc:	f023 4320 	bic.w	r3, r3, #2684354560	; 0xa0000000
 80030c0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80030c4:	687a      	ldr	r2, [r7, #4]
 80030c6:	6093      	str	r3, [r2, #8]
 80030c8:	bf00      	nop
 80030ca:	370c      	adds	r7, #12
 80030cc:	46bd      	mov	sp, r7
 80030ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030d2:	4770      	bx	lr

080030d4 <LL_ADC_IsDeepPowerDownEnabled>:
 80030d4:	b480      	push	{r7}
 80030d6:	b083      	sub	sp, #12
 80030d8:	af00      	add	r7, sp, #0
 80030da:	6078      	str	r0, [r7, #4]
 80030dc:	687b      	ldr	r3, [r7, #4]
 80030de:	689b      	ldr	r3, [r3, #8]
 80030e0:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80030e4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80030e8:	d101      	bne.n	80030ee <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 80030ea:	2301      	movs	r3, #1
 80030ec:	e000      	b.n	80030f0 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 80030ee:	2300      	movs	r3, #0
 80030f0:	4618      	mov	r0, r3
 80030f2:	370c      	adds	r7, #12
 80030f4:	46bd      	mov	sp, r7
 80030f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030fa:	4770      	bx	lr

080030fc <LL_ADC_EnableInternalRegulator>:
 80030fc:	b480      	push	{r7}
 80030fe:	b083      	sub	sp, #12
 8003100:	af00      	add	r7, sp, #0
 8003102:	6078      	str	r0, [r7, #4]
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	689b      	ldr	r3, [r3, #8]
 8003108:	f023 4310 	bic.w	r3, r3, #2415919104	; 0x90000000
 800310c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003110:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	609a      	str	r2, [r3, #8]
 8003118:	bf00      	nop
 800311a:	370c      	adds	r7, #12
 800311c:	46bd      	mov	sp, r7
 800311e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003122:	4770      	bx	lr

08003124 <LL_ADC_IsInternalRegulatorEnabled>:
 8003124:	b480      	push	{r7}
 8003126:	b083      	sub	sp, #12
 8003128:	af00      	add	r7, sp, #0
 800312a:	6078      	str	r0, [r7, #4]
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	689b      	ldr	r3, [r3, #8]
 8003130:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003134:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8003138:	d101      	bne.n	800313e <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 800313a:	2301      	movs	r3, #1
 800313c:	e000      	b.n	8003140 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 800313e:	2300      	movs	r3, #0
 8003140:	4618      	mov	r0, r3
 8003142:	370c      	adds	r7, #12
 8003144:	46bd      	mov	sp, r7
 8003146:	f85d 7b04 	ldr.w	r7, [sp], #4
 800314a:	4770      	bx	lr

0800314c <LL_ADC_Enable>:
 800314c:	b480      	push	{r7}
 800314e:	b083      	sub	sp, #12
 8003150:	af00      	add	r7, sp, #0
 8003152:	6078      	str	r0, [r7, #4]
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	689b      	ldr	r3, [r3, #8]
 8003158:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800315c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003160:	f043 0201 	orr.w	r2, r3, #1
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	609a      	str	r2, [r3, #8]
 8003168:	bf00      	nop
 800316a:	370c      	adds	r7, #12
 800316c:	46bd      	mov	sp, r7
 800316e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003172:	4770      	bx	lr

08003174 <LL_ADC_Disable>:
 8003174:	b480      	push	{r7}
 8003176:	b083      	sub	sp, #12
 8003178:	af00      	add	r7, sp, #0
 800317a:	6078      	str	r0, [r7, #4]
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	689b      	ldr	r3, [r3, #8]
 8003180:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003184:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003188:	f043 0202 	orr.w	r2, r3, #2
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	609a      	str	r2, [r3, #8]
 8003190:	bf00      	nop
 8003192:	370c      	adds	r7, #12
 8003194:	46bd      	mov	sp, r7
 8003196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800319a:	4770      	bx	lr

0800319c <LL_ADC_IsEnabled>:
 800319c:	b480      	push	{r7}
 800319e:	b083      	sub	sp, #12
 80031a0:	af00      	add	r7, sp, #0
 80031a2:	6078      	str	r0, [r7, #4]
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	689b      	ldr	r3, [r3, #8]
 80031a8:	f003 0301 	and.w	r3, r3, #1
 80031ac:	2b01      	cmp	r3, #1
 80031ae:	d101      	bne.n	80031b4 <LL_ADC_IsEnabled+0x18>
 80031b0:	2301      	movs	r3, #1
 80031b2:	e000      	b.n	80031b6 <LL_ADC_IsEnabled+0x1a>
 80031b4:	2300      	movs	r3, #0
 80031b6:	4618      	mov	r0, r3
 80031b8:	370c      	adds	r7, #12
 80031ba:	46bd      	mov	sp, r7
 80031bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031c0:	4770      	bx	lr

080031c2 <LL_ADC_IsDisableOngoing>:
 80031c2:	b480      	push	{r7}
 80031c4:	b083      	sub	sp, #12
 80031c6:	af00      	add	r7, sp, #0
 80031c8:	6078      	str	r0, [r7, #4]
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	689b      	ldr	r3, [r3, #8]
 80031ce:	f003 0302 	and.w	r3, r3, #2
 80031d2:	2b02      	cmp	r3, #2
 80031d4:	d101      	bne.n	80031da <LL_ADC_IsDisableOngoing+0x18>
 80031d6:	2301      	movs	r3, #1
 80031d8:	e000      	b.n	80031dc <LL_ADC_IsDisableOngoing+0x1a>
 80031da:	2300      	movs	r3, #0
 80031dc:	4618      	mov	r0, r3
 80031de:	370c      	adds	r7, #12
 80031e0:	46bd      	mov	sp, r7
 80031e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031e6:	4770      	bx	lr

080031e8 <LL_ADC_REG_StartConversion>:
 80031e8:	b480      	push	{r7}
 80031ea:	b083      	sub	sp, #12
 80031ec:	af00      	add	r7, sp, #0
 80031ee:	6078      	str	r0, [r7, #4]
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	689b      	ldr	r3, [r3, #8]
 80031f4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80031f8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80031fc:	f043 0204 	orr.w	r2, r3, #4
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	609a      	str	r2, [r3, #8]
 8003204:	bf00      	nop
 8003206:	370c      	adds	r7, #12
 8003208:	46bd      	mov	sp, r7
 800320a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800320e:	4770      	bx	lr

08003210 <LL_ADC_REG_StopConversion>:
 8003210:	b480      	push	{r7}
 8003212:	b083      	sub	sp, #12
 8003214:	af00      	add	r7, sp, #0
 8003216:	6078      	str	r0, [r7, #4]
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	689b      	ldr	r3, [r3, #8]
 800321c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003220:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003224:	f043 0210 	orr.w	r2, r3, #16
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	609a      	str	r2, [r3, #8]
 800322c:	bf00      	nop
 800322e:	370c      	adds	r7, #12
 8003230:	46bd      	mov	sp, r7
 8003232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003236:	4770      	bx	lr

08003238 <LL_ADC_REG_IsConversionOngoing>:
 8003238:	b480      	push	{r7}
 800323a:	b083      	sub	sp, #12
 800323c:	af00      	add	r7, sp, #0
 800323e:	6078      	str	r0, [r7, #4]
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	689b      	ldr	r3, [r3, #8]
 8003244:	f003 0304 	and.w	r3, r3, #4
 8003248:	2b04      	cmp	r3, #4
 800324a:	d101      	bne.n	8003250 <LL_ADC_REG_IsConversionOngoing+0x18>
 800324c:	2301      	movs	r3, #1
 800324e:	e000      	b.n	8003252 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003250:	2300      	movs	r3, #0
 8003252:	4618      	mov	r0, r3
 8003254:	370c      	adds	r7, #12
 8003256:	46bd      	mov	sp, r7
 8003258:	f85d 7b04 	ldr.w	r7, [sp], #4
 800325c:	4770      	bx	lr

0800325e <LL_ADC_INJ_StopConversion>:
 800325e:	b480      	push	{r7}
 8003260:	b083      	sub	sp, #12
 8003262:	af00      	add	r7, sp, #0
 8003264:	6078      	str	r0, [r7, #4]
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	689b      	ldr	r3, [r3, #8]
 800326a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800326e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003272:	f043 0220 	orr.w	r2, r3, #32
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	609a      	str	r2, [r3, #8]
 800327a:	bf00      	nop
 800327c:	370c      	adds	r7, #12
 800327e:	46bd      	mov	sp, r7
 8003280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003284:	4770      	bx	lr

08003286 <LL_ADC_INJ_IsConversionOngoing>:
 8003286:	b480      	push	{r7}
 8003288:	b083      	sub	sp, #12
 800328a:	af00      	add	r7, sp, #0
 800328c:	6078      	str	r0, [r7, #4]
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	689b      	ldr	r3, [r3, #8]
 8003292:	f003 0308 	and.w	r3, r3, #8
 8003296:	2b08      	cmp	r3, #8
 8003298:	d101      	bne.n	800329e <LL_ADC_INJ_IsConversionOngoing+0x18>
 800329a:	2301      	movs	r3, #1
 800329c:	e000      	b.n	80032a0 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 800329e:	2300      	movs	r3, #0
 80032a0:	4618      	mov	r0, r3
 80032a2:	370c      	adds	r7, #12
 80032a4:	46bd      	mov	sp, r7
 80032a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032aa:	4770      	bx	lr

080032ac <HAL_ADC_Init>:
 80032ac:	b580      	push	{r7, lr}
 80032ae:	b088      	sub	sp, #32
 80032b0:	af00      	add	r7, sp, #0
 80032b2:	6078      	str	r0, [r7, #4]
 80032b4:	2300      	movs	r3, #0
 80032b6:	77fb      	strb	r3, [r7, #31]
 80032b8:	2300      	movs	r3, #0
 80032ba:	60bb      	str	r3, [r7, #8]
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	2b00      	cmp	r3, #0
 80032c0:	d101      	bne.n	80032c6 <HAL_ADC_Init+0x1a>
 80032c2:	2301      	movs	r3, #1
 80032c4:	e12c      	b.n	8003520 <HAL_ADC_Init+0x274>
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	691b      	ldr	r3, [r3, #16]
 80032ca:	2b00      	cmp	r3, #0
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80032d0:	2b00      	cmp	r3, #0
 80032d2:	d109      	bne.n	80032e8 <HAL_ADC_Init+0x3c>
 80032d4:	6878      	ldr	r0, [r7, #4]
 80032d6:	f7ff fa85 	bl	80027e4 <HAL_ADC_MspInit>
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	2200      	movs	r2, #0
 80032de:	659a      	str	r2, [r3, #88]	; 0x58
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	2200      	movs	r2, #0
 80032e4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	4618      	mov	r0, r3
 80032ee:	f7ff fef1 	bl	80030d4 <LL_ADC_IsDeepPowerDownEnabled>
 80032f2:	4603      	mov	r3, r0
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d004      	beq.n	8003302 <HAL_ADC_Init+0x56>
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	4618      	mov	r0, r3
 80032fe:	f7ff fed7 	bl	80030b0 <LL_ADC_DisableDeepPowerDown>
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	4618      	mov	r0, r3
 8003308:	f7ff ff0c 	bl	8003124 <LL_ADC_IsInternalRegulatorEnabled>
 800330c:	4603      	mov	r3, r0
 800330e:	2b00      	cmp	r3, #0
 8003310:	d115      	bne.n	800333e <HAL_ADC_Init+0x92>
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	4618      	mov	r0, r3
 8003318:	f7ff fef0 	bl	80030fc <LL_ADC_EnableInternalRegulator>
 800331c:	4b82      	ldr	r3, [pc, #520]	; (8003528 <HAL_ADC_Init+0x27c>)
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	099b      	lsrs	r3, r3, #6
 8003322:	4a82      	ldr	r2, [pc, #520]	; (800352c <HAL_ADC_Init+0x280>)
 8003324:	fba2 2303 	umull	r2, r3, r2, r3
 8003328:	099b      	lsrs	r3, r3, #6
 800332a:	3301      	adds	r3, #1
 800332c:	005b      	lsls	r3, r3, #1
 800332e:	60bb      	str	r3, [r7, #8]
 8003330:	e002      	b.n	8003338 <HAL_ADC_Init+0x8c>
 8003332:	68bb      	ldr	r3, [r7, #8]
 8003334:	3b01      	subs	r3, #1
 8003336:	60bb      	str	r3, [r7, #8]
 8003338:	68bb      	ldr	r3, [r7, #8]
 800333a:	2b00      	cmp	r3, #0
 800333c:	d1f9      	bne.n	8003332 <HAL_ADC_Init+0x86>
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	4618      	mov	r0, r3
 8003344:	f7ff feee 	bl	8003124 <LL_ADC_IsInternalRegulatorEnabled>
 8003348:	4603      	mov	r3, r0
 800334a:	2b00      	cmp	r3, #0
 800334c:	d10d      	bne.n	800336a <HAL_ADC_Init+0xbe>
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003352:	f043 0210 	orr.w	r2, r3, #16
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	655a      	str	r2, [r3, #84]	; 0x54
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800335e:	f043 0201 	orr.w	r2, r3, #1
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	659a      	str	r2, [r3, #88]	; 0x58
 8003366:	2301      	movs	r3, #1
 8003368:	77fb      	strb	r3, [r7, #31]
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	681b      	ldr	r3, [r3, #0]
 800336e:	4618      	mov	r0, r3
 8003370:	f7ff ff62 	bl	8003238 <LL_ADC_REG_IsConversionOngoing>
 8003374:	6178      	str	r0, [r7, #20]
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800337a:	f003 0310 	and.w	r3, r3, #16
 800337e:	2b00      	cmp	r3, #0
 8003380:	f040 80c5 	bne.w	800350e <HAL_ADC_Init+0x262>
 8003384:	697b      	ldr	r3, [r7, #20]
 8003386:	2b00      	cmp	r3, #0
 8003388:	f040 80c1 	bne.w	800350e <HAL_ADC_Init+0x262>
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003390:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 8003394:	f043 0202 	orr.w	r2, r3, #2
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	655a      	str	r2, [r3, #84]	; 0x54
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	4618      	mov	r0, r3
 80033a2:	f7ff fefb 	bl	800319c <LL_ADC_IsEnabled>
 80033a6:	4603      	mov	r3, r0
 80033a8:	2b00      	cmp	r3, #0
 80033aa:	d10b      	bne.n	80033c4 <HAL_ADC_Init+0x118>
 80033ac:	4860      	ldr	r0, [pc, #384]	; (8003530 <HAL_ADC_Init+0x284>)
 80033ae:	f7ff fef5 	bl	800319c <LL_ADC_IsEnabled>
 80033b2:	4603      	mov	r3, r0
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	d105      	bne.n	80033c4 <HAL_ADC_Init+0x118>
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	685b      	ldr	r3, [r3, #4]
 80033bc:	4619      	mov	r1, r3
 80033be:	485d      	ldr	r0, [pc, #372]	; (8003534 <HAL_ADC_Init+0x288>)
 80033c0:	f7ff fd5e 	bl	8002e80 <LL_ADC_SetCommonClock>
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	7e5b      	ldrb	r3, [r3, #25]
 80033c8:	035a      	lsls	r2, r3, #13
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80033ce:	431a      	orrs	r2, r3
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	68db      	ldr	r3, [r3, #12]
 80033d4:	431a      	orrs	r2, r3
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	689b      	ldr	r3, [r3, #8]
 80033da:	431a      	orrs	r2, r3
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	f893 3020 	ldrb.w	r3, [r3, #32]
 80033e2:	041b      	lsls	r3, r3, #16
 80033e4:	4313      	orrs	r3, r2
 80033e6:	61bb      	str	r3, [r7, #24]
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	f893 3020 	ldrb.w	r3, [r3, #32]
 80033ee:	2b01      	cmp	r3, #1
 80033f0:	d106      	bne.n	8003400 <HAL_ADC_Init+0x154>
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033f6:	3b01      	subs	r3, #1
 80033f8:	045b      	lsls	r3, r3, #17
 80033fa:	69ba      	ldr	r2, [r7, #24]
 80033fc:	4313      	orrs	r3, r2
 80033fe:	61bb      	str	r3, [r7, #24]
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003404:	2b00      	cmp	r3, #0
 8003406:	d009      	beq.n	800341c <HAL_ADC_Init+0x170>
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800340c:	f403 7270 	and.w	r2, r3, #960	; 0x3c0
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003414:	4313      	orrs	r3, r2
 8003416:	69ba      	ldr	r2, [r7, #24]
 8003418:	4313      	orrs	r3, r2
 800341a:	61bb      	str	r3, [r7, #24]
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	681b      	ldr	r3, [r3, #0]
 8003420:	68da      	ldr	r2, [r3, #12]
 8003422:	4b45      	ldr	r3, [pc, #276]	; (8003538 <HAL_ADC_Init+0x28c>)
 8003424:	4013      	ands	r3, r2
 8003426:	687a      	ldr	r2, [r7, #4]
 8003428:	6812      	ldr	r2, [r2, #0]
 800342a:	69b9      	ldr	r1, [r7, #24]
 800342c:	430b      	orrs	r3, r1
 800342e:	60d3      	str	r3, [r2, #12]
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	4618      	mov	r0, r3
 8003436:	f7ff feff 	bl	8003238 <LL_ADC_REG_IsConversionOngoing>
 800343a:	6138      	str	r0, [r7, #16]
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	4618      	mov	r0, r3
 8003442:	f7ff ff20 	bl	8003286 <LL_ADC_INJ_IsConversionOngoing>
 8003446:	60f8      	str	r0, [r7, #12]
 8003448:	693b      	ldr	r3, [r7, #16]
 800344a:	2b00      	cmp	r3, #0
 800344c:	d13d      	bne.n	80034ca <HAL_ADC_Init+0x21e>
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	2b00      	cmp	r3, #0
 8003452:	d13a      	bne.n	80034ca <HAL_ADC_Init+0x21e>
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	7e1b      	ldrb	r3, [r3, #24]
 8003458:	039a      	lsls	r2, r3, #14
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8003460:	005b      	lsls	r3, r3, #1
 8003462:	4313      	orrs	r3, r2
 8003464:	61bb      	str	r3, [r7, #24]
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	681b      	ldr	r3, [r3, #0]
 800346a:	68db      	ldr	r3, [r3, #12]
 800346c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003470:	f023 0302 	bic.w	r3, r3, #2
 8003474:	687a      	ldr	r2, [r7, #4]
 8003476:	6812      	ldr	r2, [r2, #0]
 8003478:	69b9      	ldr	r1, [r7, #24]
 800347a:	430b      	orrs	r3, r1
 800347c:	60d3      	str	r3, [r2, #12]
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003484:	2b01      	cmp	r3, #1
 8003486:	d118      	bne.n	80034ba <HAL_ADC_Init+0x20e>
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	691b      	ldr	r3, [r3, #16]
 800348e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8003492:	f023 0304 	bic.w	r3, r3, #4
 8003496:	687a      	ldr	r2, [r7, #4]
 8003498:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 800349a:	687a      	ldr	r2, [r7, #4]
 800349c:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800349e:	4311      	orrs	r1, r2
 80034a0:	687a      	ldr	r2, [r7, #4]
 80034a2:	6c52      	ldr	r2, [r2, #68]	; 0x44
 80034a4:	4311      	orrs	r1, r2
 80034a6:	687a      	ldr	r2, [r7, #4]
 80034a8:	6c92      	ldr	r2, [r2, #72]	; 0x48
 80034aa:	430a      	orrs	r2, r1
 80034ac:	431a      	orrs	r2, r3
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	f042 0201 	orr.w	r2, r2, #1
 80034b6:	611a      	str	r2, [r3, #16]
 80034b8:	e007      	b.n	80034ca <HAL_ADC_Init+0x21e>
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	691a      	ldr	r2, [r3, #16]
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	681b      	ldr	r3, [r3, #0]
 80034c4:	f022 0201 	bic.w	r2, r2, #1
 80034c8:	611a      	str	r2, [r3, #16]
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	691b      	ldr	r3, [r3, #16]
 80034ce:	2b01      	cmp	r3, #1
 80034d0:	d10c      	bne.n	80034ec <HAL_ADC_Init+0x240>
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034d8:	f023 010f 	bic.w	r1, r3, #15
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	69db      	ldr	r3, [r3, #28]
 80034e0:	1e5a      	subs	r2, r3, #1
 80034e2:	687b      	ldr	r3, [r7, #4]
 80034e4:	681b      	ldr	r3, [r3, #0]
 80034e6:	430a      	orrs	r2, r1
 80034e8:	631a      	str	r2, [r3, #48]	; 0x30
 80034ea:	e007      	b.n	80034fc <HAL_ADC_Init+0x250>
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	f022 020f 	bic.w	r2, r2, #15
 80034fa:	631a      	str	r2, [r3, #48]	; 0x30
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003500:	f023 0303 	bic.w	r3, r3, #3
 8003504:	f043 0201 	orr.w	r2, r3, #1
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	655a      	str	r2, [r3, #84]	; 0x54
 800350c:	e007      	b.n	800351e <HAL_ADC_Init+0x272>
 800350e:	687b      	ldr	r3, [r7, #4]
 8003510:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003512:	f043 0210 	orr.w	r2, r3, #16
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	655a      	str	r2, [r3, #84]	; 0x54
 800351a:	2301      	movs	r3, #1
 800351c:	77fb      	strb	r3, [r7, #31]
 800351e:	7ffb      	ldrb	r3, [r7, #31]
 8003520:	4618      	mov	r0, r3
 8003522:	3720      	adds	r7, #32
 8003524:	46bd      	mov	sp, r7
 8003526:	bd80      	pop	{r7, pc}
 8003528:	2000000c 	.word	0x2000000c
 800352c:	053e2d63 	.word	0x053e2d63
 8003530:	50040000 	.word	0x50040000
 8003534:	50040300 	.word	0x50040300
 8003538:	fff0c007 	.word	0xfff0c007

0800353c <HAL_ADC_Start>:
 800353c:	b580      	push	{r7, lr}
 800353e:	b084      	sub	sp, #16
 8003540:	af00      	add	r7, sp, #0
 8003542:	6078      	str	r0, [r7, #4]
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	4618      	mov	r0, r3
 800354a:	f7ff fe75 	bl	8003238 <LL_ADC_REG_IsConversionOngoing>
 800354e:	4603      	mov	r3, r0
 8003550:	2b00      	cmp	r3, #0
 8003552:	d14f      	bne.n	80035f4 <HAL_ADC_Start+0xb8>
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800355a:	2b01      	cmp	r3, #1
 800355c:	d101      	bne.n	8003562 <HAL_ADC_Start+0x26>
 800355e:	2302      	movs	r3, #2
 8003560:	e04b      	b.n	80035fa <HAL_ADC_Start+0xbe>
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	2201      	movs	r2, #1
 8003566:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800356a:	6878      	ldr	r0, [r7, #4]
 800356c:	f000 fdb4 	bl	80040d8 <ADC_Enable>
 8003570:	4603      	mov	r3, r0
 8003572:	73fb      	strb	r3, [r7, #15]
 8003574:	7bfb      	ldrb	r3, [r7, #15]
 8003576:	2b00      	cmp	r3, #0
 8003578:	d137      	bne.n	80035ea <HAL_ADC_Start+0xae>
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800357e:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8003582:	f023 0301 	bic.w	r3, r3, #1
 8003586:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800358a:	687b      	ldr	r3, [r7, #4]
 800358c:	655a      	str	r2, [r3, #84]	; 0x54
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003592:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003596:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800359a:	d106      	bne.n	80035aa <HAL_ADC_Start+0x6e>
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80035a0:	f023 0206 	bic.w	r2, r3, #6
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	659a      	str	r2, [r3, #88]	; 0x58
 80035a8:	e002      	b.n	80035b0 <HAL_ADC_Start+0x74>
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	2200      	movs	r2, #0
 80035ae:	659a      	str	r2, [r3, #88]	; 0x58
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	681b      	ldr	r3, [r3, #0]
 80035b4:	221c      	movs	r2, #28
 80035b6:	601a      	str	r2, [r3, #0]
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	2200      	movs	r2, #0
 80035bc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	681b      	ldr	r3, [r3, #0]
 80035c4:	68db      	ldr	r3, [r3, #12]
 80035c6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80035ca:	2b00      	cmp	r3, #0
 80035cc:	d007      	beq.n	80035de <HAL_ADC_Start+0xa2>
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80035d2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80035d6:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	655a      	str	r2, [r3, #84]	; 0x54
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	681b      	ldr	r3, [r3, #0]
 80035e2:	4618      	mov	r0, r3
 80035e4:	f7ff fe00 	bl	80031e8 <LL_ADC_REG_StartConversion>
 80035e8:	e006      	b.n	80035f8 <HAL_ADC_Start+0xbc>
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	2200      	movs	r2, #0
 80035ee:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80035f2:	e001      	b.n	80035f8 <HAL_ADC_Start+0xbc>
 80035f4:	2302      	movs	r3, #2
 80035f6:	73fb      	strb	r3, [r7, #15]
 80035f8:	7bfb      	ldrb	r3, [r7, #15]
 80035fa:	4618      	mov	r0, r3
 80035fc:	3710      	adds	r7, #16
 80035fe:	46bd      	mov	sp, r7
 8003600:	bd80      	pop	{r7, pc}

08003602 <HAL_ADC_Stop>:
 8003602:	b580      	push	{r7, lr}
 8003604:	b084      	sub	sp, #16
 8003606:	af00      	add	r7, sp, #0
 8003608:	6078      	str	r0, [r7, #4]
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8003610:	2b01      	cmp	r3, #1
 8003612:	d101      	bne.n	8003618 <HAL_ADC_Stop+0x16>
 8003614:	2302      	movs	r3, #2
 8003616:	e023      	b.n	8003660 <HAL_ADC_Stop+0x5e>
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	2201      	movs	r2, #1
 800361c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003620:	2103      	movs	r1, #3
 8003622:	6878      	ldr	r0, [r7, #4]
 8003624:	f000 fc9c 	bl	8003f60 <ADC_ConversionStop>
 8003628:	4603      	mov	r3, r0
 800362a:	73fb      	strb	r3, [r7, #15]
 800362c:	7bfb      	ldrb	r3, [r7, #15]
 800362e:	2b00      	cmp	r3, #0
 8003630:	d111      	bne.n	8003656 <HAL_ADC_Stop+0x54>
 8003632:	6878      	ldr	r0, [r7, #4]
 8003634:	f000 fdd6 	bl	80041e4 <ADC_Disable>
 8003638:	4603      	mov	r3, r0
 800363a:	73fb      	strb	r3, [r7, #15]
 800363c:	7bfb      	ldrb	r3, [r7, #15]
 800363e:	2b00      	cmp	r3, #0
 8003640:	d109      	bne.n	8003656 <HAL_ADC_Stop+0x54>
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003646:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800364a:	f023 0301 	bic.w	r3, r3, #1
 800364e:	f043 0201 	orr.w	r2, r3, #1
 8003652:	687b      	ldr	r3, [r7, #4]
 8003654:	655a      	str	r2, [r3, #84]	; 0x54
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	2200      	movs	r2, #0
 800365a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800365e:	7bfb      	ldrb	r3, [r7, #15]
 8003660:	4618      	mov	r0, r3
 8003662:	3710      	adds	r7, #16
 8003664:	46bd      	mov	sp, r7
 8003666:	bd80      	pop	{r7, pc}

08003668 <HAL_ADC_PollForConversion>:
 8003668:	b580      	push	{r7, lr}
 800366a:	b086      	sub	sp, #24
 800366c:	af00      	add	r7, sp, #0
 800366e:	6078      	str	r0, [r7, #4]
 8003670:	6039      	str	r1, [r7, #0]
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	695b      	ldr	r3, [r3, #20]
 8003676:	2b08      	cmp	r3, #8
 8003678:	d102      	bne.n	8003680 <HAL_ADC_PollForConversion+0x18>
 800367a:	2308      	movs	r3, #8
 800367c:	617b      	str	r3, [r7, #20]
 800367e:	e010      	b.n	80036a2 <HAL_ADC_PollForConversion+0x3a>
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	68db      	ldr	r3, [r3, #12]
 8003686:	f003 0301 	and.w	r3, r3, #1
 800368a:	2b00      	cmp	r3, #0
 800368c:	d007      	beq.n	800369e <HAL_ADC_PollForConversion+0x36>
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003692:	f043 0220 	orr.w	r2, r3, #32
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	655a      	str	r2, [r3, #84]	; 0x54
 800369a:	2301      	movs	r3, #1
 800369c:	e06f      	b.n	800377e <HAL_ADC_PollForConversion+0x116>
 800369e:	2304      	movs	r3, #4
 80036a0:	617b      	str	r3, [r7, #20]
 80036a2:	f7ff fbad 	bl	8002e00 <HAL_GetTick>
 80036a6:	6138      	str	r0, [r7, #16]
 80036a8:	e021      	b.n	80036ee <HAL_ADC_PollForConversion+0x86>
 80036aa:	683b      	ldr	r3, [r7, #0]
 80036ac:	f1b3 3fff 	cmp.w	r3, #4294967295
 80036b0:	d01d      	beq.n	80036ee <HAL_ADC_PollForConversion+0x86>
 80036b2:	f7ff fba5 	bl	8002e00 <HAL_GetTick>
 80036b6:	4602      	mov	r2, r0
 80036b8:	693b      	ldr	r3, [r7, #16]
 80036ba:	1ad3      	subs	r3, r2, r3
 80036bc:	683a      	ldr	r2, [r7, #0]
 80036be:	429a      	cmp	r2, r3
 80036c0:	d302      	bcc.n	80036c8 <HAL_ADC_PollForConversion+0x60>
 80036c2:	683b      	ldr	r3, [r7, #0]
 80036c4:	2b00      	cmp	r3, #0
 80036c6:	d112      	bne.n	80036ee <HAL_ADC_PollForConversion+0x86>
 80036c8:	687b      	ldr	r3, [r7, #4]
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	681a      	ldr	r2, [r3, #0]
 80036ce:	697b      	ldr	r3, [r7, #20]
 80036d0:	4013      	ands	r3, r2
 80036d2:	2b00      	cmp	r3, #0
 80036d4:	d10b      	bne.n	80036ee <HAL_ADC_PollForConversion+0x86>
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80036da:	f043 0204 	orr.w	r2, r3, #4
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	655a      	str	r2, [r3, #84]	; 0x54
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	2200      	movs	r2, #0
 80036e6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80036ea:	2303      	movs	r3, #3
 80036ec:	e047      	b.n	800377e <HAL_ADC_PollForConversion+0x116>
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	681a      	ldr	r2, [r3, #0]
 80036f4:	697b      	ldr	r3, [r7, #20]
 80036f6:	4013      	ands	r3, r2
 80036f8:	2b00      	cmp	r3, #0
 80036fa:	d0d6      	beq.n	80036aa <HAL_ADC_PollForConversion+0x42>
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003700:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	655a      	str	r2, [r3, #84]	; 0x54
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	681b      	ldr	r3, [r3, #0]
 800370c:	4618      	mov	r0, r3
 800370e:	f7ff fc40 	bl	8002f92 <LL_ADC_REG_IsTriggerSourceSWStart>
 8003712:	4603      	mov	r3, r0
 8003714:	2b00      	cmp	r3, #0
 8003716:	d01c      	beq.n	8003752 <HAL_ADC_PollForConversion+0xea>
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	7e5b      	ldrb	r3, [r3, #25]
 800371c:	2b00      	cmp	r3, #0
 800371e:	d118      	bne.n	8003752 <HAL_ADC_PollForConversion+0xea>
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	f003 0308 	and.w	r3, r3, #8
 800372a:	2b08      	cmp	r3, #8
 800372c:	d111      	bne.n	8003752 <HAL_ADC_PollForConversion+0xea>
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003732:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	655a      	str	r2, [r3, #84]	; 0x54
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800373e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003742:	2b00      	cmp	r3, #0
 8003744:	d105      	bne.n	8003752 <HAL_ADC_PollForConversion+0xea>
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800374a:	f043 0201 	orr.w	r2, r3, #1
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	655a      	str	r2, [r3, #84]	; 0x54
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	681b      	ldr	r3, [r3, #0]
 8003756:	68db      	ldr	r3, [r3, #12]
 8003758:	60fb      	str	r3, [r7, #12]
 800375a:	697b      	ldr	r3, [r7, #20]
 800375c:	2b08      	cmp	r3, #8
 800375e:	d104      	bne.n	800376a <HAL_ADC_PollForConversion+0x102>
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	681b      	ldr	r3, [r3, #0]
 8003764:	2208      	movs	r2, #8
 8003766:	601a      	str	r2, [r3, #0]
 8003768:	e008      	b.n	800377c <HAL_ADC_PollForConversion+0x114>
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003770:	2b00      	cmp	r3, #0
 8003772:	d103      	bne.n	800377c <HAL_ADC_PollForConversion+0x114>
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	220c      	movs	r2, #12
 800377a:	601a      	str	r2, [r3, #0]
 800377c:	2300      	movs	r3, #0
 800377e:	4618      	mov	r0, r3
 8003780:	3718      	adds	r7, #24
 8003782:	46bd      	mov	sp, r7
 8003784:	bd80      	pop	{r7, pc}

08003786 <HAL_ADC_GetValue>:
 8003786:	b480      	push	{r7}
 8003788:	b083      	sub	sp, #12
 800378a:	af00      	add	r7, sp, #0
 800378c:	6078      	str	r0, [r7, #4]
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	681b      	ldr	r3, [r3, #0]
 8003792:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003794:	4618      	mov	r0, r3
 8003796:	370c      	adds	r7, #12
 8003798:	46bd      	mov	sp, r7
 800379a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800379e:	4770      	bx	lr

080037a0 <HAL_ADC_ConfigChannel>:
 80037a0:	b580      	push	{r7, lr}
 80037a2:	b0b6      	sub	sp, #216	; 0xd8
 80037a4:	af00      	add	r7, sp, #0
 80037a6:	6078      	str	r0, [r7, #4]
 80037a8:	6039      	str	r1, [r7, #0]
 80037aa:	2300      	movs	r3, #0
 80037ac:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 80037b0:	2300      	movs	r3, #0
 80037b2:	60fb      	str	r3, [r7, #12]
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80037ba:	2b01      	cmp	r3, #1
 80037bc:	d101      	bne.n	80037c2 <HAL_ADC_ConfigChannel+0x22>
 80037be:	2302      	movs	r3, #2
 80037c0:	e3b9      	b.n	8003f36 <HAL_ADC_ConfigChannel+0x796>
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	2201      	movs	r2, #1
 80037c6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	4618      	mov	r0, r3
 80037d0:	f7ff fd32 	bl	8003238 <LL_ADC_REG_IsConversionOngoing>
 80037d4:	4603      	mov	r3, r0
 80037d6:	2b00      	cmp	r3, #0
 80037d8:	f040 839e 	bne.w	8003f18 <HAL_ADC_ConfigChannel+0x778>
 80037dc:	683b      	ldr	r3, [r7, #0]
 80037de:	685b      	ldr	r3, [r3, #4]
 80037e0:	2b05      	cmp	r3, #5
 80037e2:	d824      	bhi.n	800382e <HAL_ADC_ConfigChannel+0x8e>
 80037e4:	683b      	ldr	r3, [r7, #0]
 80037e6:	685b      	ldr	r3, [r3, #4]
 80037e8:	3b02      	subs	r3, #2
 80037ea:	2b03      	cmp	r3, #3
 80037ec:	d81b      	bhi.n	8003826 <HAL_ADC_ConfigChannel+0x86>
 80037ee:	a201      	add	r2, pc, #4	; (adr r2, 80037f4 <HAL_ADC_ConfigChannel+0x54>)
 80037f0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80037f4:	08003805 	.word	0x08003805
 80037f8:	0800380d 	.word	0x0800380d
 80037fc:	08003815 	.word	0x08003815
 8003800:	0800381d 	.word	0x0800381d
 8003804:	683b      	ldr	r3, [r7, #0]
 8003806:	220c      	movs	r2, #12
 8003808:	605a      	str	r2, [r3, #4]
 800380a:	e011      	b.n	8003830 <HAL_ADC_ConfigChannel+0x90>
 800380c:	683b      	ldr	r3, [r7, #0]
 800380e:	2212      	movs	r2, #18
 8003810:	605a      	str	r2, [r3, #4]
 8003812:	e00d      	b.n	8003830 <HAL_ADC_ConfigChannel+0x90>
 8003814:	683b      	ldr	r3, [r7, #0]
 8003816:	2218      	movs	r2, #24
 8003818:	605a      	str	r2, [r3, #4]
 800381a:	e009      	b.n	8003830 <HAL_ADC_ConfigChannel+0x90>
 800381c:	683b      	ldr	r3, [r7, #0]
 800381e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003822:	605a      	str	r2, [r3, #4]
 8003824:	e004      	b.n	8003830 <HAL_ADC_ConfigChannel+0x90>
 8003826:	683b      	ldr	r3, [r7, #0]
 8003828:	2206      	movs	r2, #6
 800382a:	605a      	str	r2, [r3, #4]
 800382c:	e000      	b.n	8003830 <HAL_ADC_ConfigChannel+0x90>
 800382e:	bf00      	nop
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	6818      	ldr	r0, [r3, #0]
 8003834:	683b      	ldr	r3, [r7, #0]
 8003836:	6859      	ldr	r1, [r3, #4]
 8003838:	683b      	ldr	r3, [r7, #0]
 800383a:	681b      	ldr	r3, [r3, #0]
 800383c:	461a      	mov	r2, r3
 800383e:	f7ff fbbb 	bl	8002fb8 <LL_ADC_REG_SetSequencerRanks>
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	681b      	ldr	r3, [r3, #0]
 8003846:	4618      	mov	r0, r3
 8003848:	f7ff fcf6 	bl	8003238 <LL_ADC_REG_IsConversionOngoing>
 800384c:	f8c7 00d0 	str.w	r0, [r7, #208]	; 0xd0
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	681b      	ldr	r3, [r3, #0]
 8003854:	4618      	mov	r0, r3
 8003856:	f7ff fd16 	bl	8003286 <LL_ADC_INJ_IsConversionOngoing>
 800385a:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc
 800385e:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 8003862:	2b00      	cmp	r3, #0
 8003864:	f040 81a6 	bne.w	8003bb4 <HAL_ADC_ConfigChannel+0x414>
 8003868:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800386c:	2b00      	cmp	r3, #0
 800386e:	f040 81a1 	bne.w	8003bb4 <HAL_ADC_ConfigChannel+0x414>
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	6818      	ldr	r0, [r3, #0]
 8003876:	683b      	ldr	r3, [r7, #0]
 8003878:	6819      	ldr	r1, [r3, #0]
 800387a:	683b      	ldr	r3, [r7, #0]
 800387c:	689b      	ldr	r3, [r3, #8]
 800387e:	461a      	mov	r2, r3
 8003880:	f7ff fbc6 	bl	8003010 <LL_ADC_SetChannelSamplingTime>
 8003884:	683b      	ldr	r3, [r7, #0]
 8003886:	695a      	ldr	r2, [r3, #20]
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	68db      	ldr	r3, [r3, #12]
 800388e:	08db      	lsrs	r3, r3, #3
 8003890:	f003 0303 	and.w	r3, r3, #3
 8003894:	005b      	lsls	r3, r3, #1
 8003896:	fa02 f303 	lsl.w	r3, r2, r3
 800389a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800389e:	683b      	ldr	r3, [r7, #0]
 80038a0:	691b      	ldr	r3, [r3, #16]
 80038a2:	2b04      	cmp	r3, #4
 80038a4:	d00a      	beq.n	80038bc <HAL_ADC_ConfigChannel+0x11c>
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	6818      	ldr	r0, [r3, #0]
 80038aa:	683b      	ldr	r3, [r7, #0]
 80038ac:	6919      	ldr	r1, [r3, #16]
 80038ae:	683b      	ldr	r3, [r7, #0]
 80038b0:	681a      	ldr	r2, [r3, #0]
 80038b2:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 80038b6:	f7ff fb17 	bl	8002ee8 <LL_ADC_SetOffset>
 80038ba:	e17b      	b.n	8003bb4 <HAL_ADC_ConfigChannel+0x414>
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	681b      	ldr	r3, [r3, #0]
 80038c0:	2100      	movs	r1, #0
 80038c2:	4618      	mov	r0, r3
 80038c4:	f7ff fb34 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 80038c8:	4603      	mov	r3, r0
 80038ca:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80038ce:	2b00      	cmp	r3, #0
 80038d0:	d10a      	bne.n	80038e8 <HAL_ADC_ConfigChannel+0x148>
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	681b      	ldr	r3, [r3, #0]
 80038d6:	2100      	movs	r1, #0
 80038d8:	4618      	mov	r0, r3
 80038da:	f7ff fb29 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 80038de:	4603      	mov	r3, r0
 80038e0:	0e9b      	lsrs	r3, r3, #26
 80038e2:	f003 021f 	and.w	r2, r3, #31
 80038e6:	e01e      	b.n	8003926 <HAL_ADC_ConfigChannel+0x186>
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	2100      	movs	r1, #0
 80038ee:	4618      	mov	r0, r3
 80038f0:	f7ff fb1e 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 80038f4:	4603      	mov	r3, r0
 80038f6:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 80038fa:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 80038fe:	fa93 f3a3 	rbit	r3, r3
 8003902:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8003906:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800390a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800390e:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8003912:	2b00      	cmp	r3, #0
 8003914:	d101      	bne.n	800391a <HAL_ADC_ConfigChannel+0x17a>
 8003916:	2320      	movs	r3, #32
 8003918:	e004      	b.n	8003924 <HAL_ADC_ConfigChannel+0x184>
 800391a:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800391e:	fab3 f383 	clz	r3, r3
 8003922:	b2db      	uxtb	r3, r3
 8003924:	461a      	mov	r2, r3
 8003926:	683b      	ldr	r3, [r7, #0]
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800392e:	2b00      	cmp	r3, #0
 8003930:	d105      	bne.n	800393e <HAL_ADC_ConfigChannel+0x19e>
 8003932:	683b      	ldr	r3, [r7, #0]
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	0e9b      	lsrs	r3, r3, #26
 8003938:	f003 031f 	and.w	r3, r3, #31
 800393c:	e018      	b.n	8003970 <HAL_ADC_ConfigChannel+0x1d0>
 800393e:	683b      	ldr	r3, [r7, #0]
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8003946:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 800394a:	fa93 f3a3 	rbit	r3, r3
 800394e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8003952:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8003956:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800395a:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800395e:	2b00      	cmp	r3, #0
 8003960:	d101      	bne.n	8003966 <HAL_ADC_ConfigChannel+0x1c6>
 8003962:	2320      	movs	r3, #32
 8003964:	e004      	b.n	8003970 <HAL_ADC_ConfigChannel+0x1d0>
 8003966:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800396a:	fab3 f383 	clz	r3, r3
 800396e:	b2db      	uxtb	r3, r3
 8003970:	429a      	cmp	r2, r3
 8003972:	d106      	bne.n	8003982 <HAL_ADC_ConfigChannel+0x1e2>
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	2200      	movs	r2, #0
 800397a:	2100      	movs	r1, #0
 800397c:	4618      	mov	r0, r3
 800397e:	f7ff faed 	bl	8002f5c <LL_ADC_SetOffsetState>
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	681b      	ldr	r3, [r3, #0]
 8003986:	2101      	movs	r1, #1
 8003988:	4618      	mov	r0, r3
 800398a:	f7ff fad1 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 800398e:	4603      	mov	r3, r0
 8003990:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003994:	2b00      	cmp	r3, #0
 8003996:	d10a      	bne.n	80039ae <HAL_ADC_ConfigChannel+0x20e>
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	2101      	movs	r1, #1
 800399e:	4618      	mov	r0, r3
 80039a0:	f7ff fac6 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 80039a4:	4603      	mov	r3, r0
 80039a6:	0e9b      	lsrs	r3, r3, #26
 80039a8:	f003 021f 	and.w	r2, r3, #31
 80039ac:	e01e      	b.n	80039ec <HAL_ADC_ConfigChannel+0x24c>
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	2101      	movs	r1, #1
 80039b4:	4618      	mov	r0, r3
 80039b6:	f7ff fabb 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 80039ba:	4603      	mov	r3, r0
 80039bc:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80039c0:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 80039c4:	fa93 f3a3 	rbit	r3, r3
 80039c8:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80039cc:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80039d0:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80039d4:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 80039d8:	2b00      	cmp	r3, #0
 80039da:	d101      	bne.n	80039e0 <HAL_ADC_ConfigChannel+0x240>
 80039dc:	2320      	movs	r3, #32
 80039de:	e004      	b.n	80039ea <HAL_ADC_ConfigChannel+0x24a>
 80039e0:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 80039e4:	fab3 f383 	clz	r3, r3
 80039e8:	b2db      	uxtb	r3, r3
 80039ea:	461a      	mov	r2, r3
 80039ec:	683b      	ldr	r3, [r7, #0]
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80039f4:	2b00      	cmp	r3, #0
 80039f6:	d105      	bne.n	8003a04 <HAL_ADC_ConfigChannel+0x264>
 80039f8:	683b      	ldr	r3, [r7, #0]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	0e9b      	lsrs	r3, r3, #26
 80039fe:	f003 031f 	and.w	r3, r3, #31
 8003a02:	e018      	b.n	8003a36 <HAL_ADC_ConfigChannel+0x296>
 8003a04:	683b      	ldr	r3, [r7, #0]
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8003a0c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8003a10:	fa93 f3a3 	rbit	r3, r3
 8003a14:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8003a18:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8003a1c:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8003a20:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8003a24:	2b00      	cmp	r3, #0
 8003a26:	d101      	bne.n	8003a2c <HAL_ADC_ConfigChannel+0x28c>
 8003a28:	2320      	movs	r3, #32
 8003a2a:	e004      	b.n	8003a36 <HAL_ADC_ConfigChannel+0x296>
 8003a2c:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8003a30:	fab3 f383 	clz	r3, r3
 8003a34:	b2db      	uxtb	r3, r3
 8003a36:	429a      	cmp	r2, r3
 8003a38:	d106      	bne.n	8003a48 <HAL_ADC_ConfigChannel+0x2a8>
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	681b      	ldr	r3, [r3, #0]
 8003a3e:	2200      	movs	r2, #0
 8003a40:	2101      	movs	r1, #1
 8003a42:	4618      	mov	r0, r3
 8003a44:	f7ff fa8a 	bl	8002f5c <LL_ADC_SetOffsetState>
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	2102      	movs	r1, #2
 8003a4e:	4618      	mov	r0, r3
 8003a50:	f7ff fa6e 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 8003a54:	4603      	mov	r3, r0
 8003a56:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003a5a:	2b00      	cmp	r3, #0
 8003a5c:	d10a      	bne.n	8003a74 <HAL_ADC_ConfigChannel+0x2d4>
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	681b      	ldr	r3, [r3, #0]
 8003a62:	2102      	movs	r1, #2
 8003a64:	4618      	mov	r0, r3
 8003a66:	f7ff fa63 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 8003a6a:	4603      	mov	r3, r0
 8003a6c:	0e9b      	lsrs	r3, r3, #26
 8003a6e:	f003 021f 	and.w	r2, r3, #31
 8003a72:	e01e      	b.n	8003ab2 <HAL_ADC_ConfigChannel+0x312>
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	681b      	ldr	r3, [r3, #0]
 8003a78:	2102      	movs	r1, #2
 8003a7a:	4618      	mov	r0, r3
 8003a7c:	f7ff fa58 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 8003a80:	4603      	mov	r3, r0
 8003a82:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8003a86:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8003a8a:	fa93 f3a3 	rbit	r3, r3
 8003a8e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8003a92:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8003a96:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8003a9a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	d101      	bne.n	8003aa6 <HAL_ADC_ConfigChannel+0x306>
 8003aa2:	2320      	movs	r3, #32
 8003aa4:	e004      	b.n	8003ab0 <HAL_ADC_ConfigChannel+0x310>
 8003aa6:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8003aaa:	fab3 f383 	clz	r3, r3
 8003aae:	b2db      	uxtb	r3, r3
 8003ab0:	461a      	mov	r2, r3
 8003ab2:	683b      	ldr	r3, [r7, #0]
 8003ab4:	681b      	ldr	r3, [r3, #0]
 8003ab6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003aba:	2b00      	cmp	r3, #0
 8003abc:	d105      	bne.n	8003aca <HAL_ADC_ConfigChannel+0x32a>
 8003abe:	683b      	ldr	r3, [r7, #0]
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	0e9b      	lsrs	r3, r3, #26
 8003ac4:	f003 031f 	and.w	r3, r3, #31
 8003ac8:	e016      	b.n	8003af8 <HAL_ADC_ConfigChannel+0x358>
 8003aca:	683b      	ldr	r3, [r7, #0]
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8003ad2:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8003ad6:	fa93 f3a3 	rbit	r3, r3
 8003ada:	67fb      	str	r3, [r7, #124]	; 0x7c
 8003adc:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8003ade:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8003ae2:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8003ae6:	2b00      	cmp	r3, #0
 8003ae8:	d101      	bne.n	8003aee <HAL_ADC_ConfigChannel+0x34e>
 8003aea:	2320      	movs	r3, #32
 8003aec:	e004      	b.n	8003af8 <HAL_ADC_ConfigChannel+0x358>
 8003aee:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8003af2:	fab3 f383 	clz	r3, r3
 8003af6:	b2db      	uxtb	r3, r3
 8003af8:	429a      	cmp	r2, r3
 8003afa:	d106      	bne.n	8003b0a <HAL_ADC_ConfigChannel+0x36a>
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	2200      	movs	r2, #0
 8003b02:	2102      	movs	r1, #2
 8003b04:	4618      	mov	r0, r3
 8003b06:	f7ff fa29 	bl	8002f5c <LL_ADC_SetOffsetState>
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	681b      	ldr	r3, [r3, #0]
 8003b0e:	2103      	movs	r1, #3
 8003b10:	4618      	mov	r0, r3
 8003b12:	f7ff fa0d 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 8003b16:	4603      	mov	r3, r0
 8003b18:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003b1c:	2b00      	cmp	r3, #0
 8003b1e:	d10a      	bne.n	8003b36 <HAL_ADC_ConfigChannel+0x396>
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	2103      	movs	r1, #3
 8003b26:	4618      	mov	r0, r3
 8003b28:	f7ff fa02 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 8003b2c:	4603      	mov	r3, r0
 8003b2e:	0e9b      	lsrs	r3, r3, #26
 8003b30:	f003 021f 	and.w	r2, r3, #31
 8003b34:	e017      	b.n	8003b66 <HAL_ADC_ConfigChannel+0x3c6>
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	2103      	movs	r1, #3
 8003b3c:	4618      	mov	r0, r3
 8003b3e:	f7ff f9f7 	bl	8002f30 <LL_ADC_GetOffsetChannel>
 8003b42:	4603      	mov	r3, r0
 8003b44:	677b      	str	r3, [r7, #116]	; 0x74
 8003b46:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003b48:	fa93 f3a3 	rbit	r3, r3
 8003b4c:	673b      	str	r3, [r7, #112]	; 0x70
 8003b4e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003b50:	67bb      	str	r3, [r7, #120]	; 0x78
 8003b52:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	d101      	bne.n	8003b5c <HAL_ADC_ConfigChannel+0x3bc>
 8003b58:	2320      	movs	r3, #32
 8003b5a:	e003      	b.n	8003b64 <HAL_ADC_ConfigChannel+0x3c4>
 8003b5c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8003b5e:	fab3 f383 	clz	r3, r3
 8003b62:	b2db      	uxtb	r3, r3
 8003b64:	461a      	mov	r2, r3
 8003b66:	683b      	ldr	r3, [r7, #0]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003b6e:	2b00      	cmp	r3, #0
 8003b70:	d105      	bne.n	8003b7e <HAL_ADC_ConfigChannel+0x3de>
 8003b72:	683b      	ldr	r3, [r7, #0]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	0e9b      	lsrs	r3, r3, #26
 8003b78:	f003 031f 	and.w	r3, r3, #31
 8003b7c:	e011      	b.n	8003ba2 <HAL_ADC_ConfigChannel+0x402>
 8003b7e:	683b      	ldr	r3, [r7, #0]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	66bb      	str	r3, [r7, #104]	; 0x68
 8003b84:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8003b86:	fa93 f3a3 	rbit	r3, r3
 8003b8a:	667b      	str	r3, [r7, #100]	; 0x64
 8003b8c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8003b8e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8003b90:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003b92:	2b00      	cmp	r3, #0
 8003b94:	d101      	bne.n	8003b9a <HAL_ADC_ConfigChannel+0x3fa>
 8003b96:	2320      	movs	r3, #32
 8003b98:	e003      	b.n	8003ba2 <HAL_ADC_ConfigChannel+0x402>
 8003b9a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003b9c:	fab3 f383 	clz	r3, r3
 8003ba0:	b2db      	uxtb	r3, r3
 8003ba2:	429a      	cmp	r2, r3
 8003ba4:	d106      	bne.n	8003bb4 <HAL_ADC_ConfigChannel+0x414>
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	2200      	movs	r2, #0
 8003bac:	2103      	movs	r1, #3
 8003bae:	4618      	mov	r0, r3
 8003bb0:	f7ff f9d4 	bl	8002f5c <LL_ADC_SetOffsetState>
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	4618      	mov	r0, r3
 8003bba:	f7ff faef 	bl	800319c <LL_ADC_IsEnabled>
 8003bbe:	4603      	mov	r3, r0
 8003bc0:	2b00      	cmp	r3, #0
 8003bc2:	f040 813f 	bne.w	8003e44 <HAL_ADC_ConfigChannel+0x6a4>
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	6818      	ldr	r0, [r3, #0]
 8003bca:	683b      	ldr	r3, [r7, #0]
 8003bcc:	6819      	ldr	r1, [r3, #0]
 8003bce:	683b      	ldr	r3, [r7, #0]
 8003bd0:	68db      	ldr	r3, [r3, #12]
 8003bd2:	461a      	mov	r2, r3
 8003bd4:	f7ff fa48 	bl	8003068 <LL_ADC_SetChannelSingleDiff>
 8003bd8:	683b      	ldr	r3, [r7, #0]
 8003bda:	68db      	ldr	r3, [r3, #12]
 8003bdc:	4a8e      	ldr	r2, [pc, #568]	; (8003e18 <HAL_ADC_ConfigChannel+0x678>)
 8003bde:	4293      	cmp	r3, r2
 8003be0:	f040 8130 	bne.w	8003e44 <HAL_ADC_ConfigChannel+0x6a4>
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	6818      	ldr	r0, [r3, #0]
 8003be8:	683b      	ldr	r3, [r7, #0]
 8003bea:	681b      	ldr	r3, [r3, #0]
 8003bec:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003bf0:	2b00      	cmp	r3, #0
 8003bf2:	d10b      	bne.n	8003c0c <HAL_ADC_ConfigChannel+0x46c>
 8003bf4:	683b      	ldr	r3, [r7, #0]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	0e9b      	lsrs	r3, r3, #26
 8003bfa:	3301      	adds	r3, #1
 8003bfc:	f003 031f 	and.w	r3, r3, #31
 8003c00:	2b09      	cmp	r3, #9
 8003c02:	bf94      	ite	ls
 8003c04:	2301      	movls	r3, #1
 8003c06:	2300      	movhi	r3, #0
 8003c08:	b2db      	uxtb	r3, r3
 8003c0a:	e019      	b.n	8003c40 <HAL_ADC_ConfigChannel+0x4a0>
 8003c0c:	683b      	ldr	r3, [r7, #0]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003c12:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8003c14:	fa93 f3a3 	rbit	r3, r3
 8003c18:	65bb      	str	r3, [r7, #88]	; 0x58
 8003c1a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8003c1c:	663b      	str	r3, [r7, #96]	; 0x60
 8003c1e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	d101      	bne.n	8003c28 <HAL_ADC_ConfigChannel+0x488>
 8003c24:	2320      	movs	r3, #32
 8003c26:	e003      	b.n	8003c30 <HAL_ADC_ConfigChannel+0x490>
 8003c28:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003c2a:	fab3 f383 	clz	r3, r3
 8003c2e:	b2db      	uxtb	r3, r3
 8003c30:	3301      	adds	r3, #1
 8003c32:	f003 031f 	and.w	r3, r3, #31
 8003c36:	2b09      	cmp	r3, #9
 8003c38:	bf94      	ite	ls
 8003c3a:	2301      	movls	r3, #1
 8003c3c:	2300      	movhi	r3, #0
 8003c3e:	b2db      	uxtb	r3, r3
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	d079      	beq.n	8003d38 <HAL_ADC_ConfigChannel+0x598>
 8003c44:	683b      	ldr	r3, [r7, #0]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003c4c:	2b00      	cmp	r3, #0
 8003c4e:	d107      	bne.n	8003c60 <HAL_ADC_ConfigChannel+0x4c0>
 8003c50:	683b      	ldr	r3, [r7, #0]
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	0e9b      	lsrs	r3, r3, #26
 8003c56:	3301      	adds	r3, #1
 8003c58:	069b      	lsls	r3, r3, #26
 8003c5a:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8003c5e:	e015      	b.n	8003c8c <HAL_ADC_ConfigChannel+0x4ec>
 8003c60:	683b      	ldr	r3, [r7, #0]
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	653b      	str	r3, [r7, #80]	; 0x50
 8003c66:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003c68:	fa93 f3a3 	rbit	r3, r3
 8003c6c:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003c6e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8003c70:	657b      	str	r3, [r7, #84]	; 0x54
 8003c72:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d101      	bne.n	8003c7c <HAL_ADC_ConfigChannel+0x4dc>
 8003c78:	2320      	movs	r3, #32
 8003c7a:	e003      	b.n	8003c84 <HAL_ADC_ConfigChannel+0x4e4>
 8003c7c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003c7e:	fab3 f383 	clz	r3, r3
 8003c82:	b2db      	uxtb	r3, r3
 8003c84:	3301      	adds	r3, #1
 8003c86:	069b      	lsls	r3, r3, #26
 8003c88:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8003c8c:	683b      	ldr	r3, [r7, #0]
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003c94:	2b00      	cmp	r3, #0
 8003c96:	d109      	bne.n	8003cac <HAL_ADC_ConfigChannel+0x50c>
 8003c98:	683b      	ldr	r3, [r7, #0]
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	0e9b      	lsrs	r3, r3, #26
 8003c9e:	3301      	adds	r3, #1
 8003ca0:	f003 031f 	and.w	r3, r3, #31
 8003ca4:	2101      	movs	r1, #1
 8003ca6:	fa01 f303 	lsl.w	r3, r1, r3
 8003caa:	e017      	b.n	8003cdc <HAL_ADC_ConfigChannel+0x53c>
 8003cac:	683b      	ldr	r3, [r7, #0]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	647b      	str	r3, [r7, #68]	; 0x44
 8003cb2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003cb4:	fa93 f3a3 	rbit	r3, r3
 8003cb8:	643b      	str	r3, [r7, #64]	; 0x40
 8003cba:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003cbc:	64bb      	str	r3, [r7, #72]	; 0x48
 8003cbe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003cc0:	2b00      	cmp	r3, #0
 8003cc2:	d101      	bne.n	8003cc8 <HAL_ADC_ConfigChannel+0x528>
 8003cc4:	2320      	movs	r3, #32
 8003cc6:	e003      	b.n	8003cd0 <HAL_ADC_ConfigChannel+0x530>
 8003cc8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003cca:	fab3 f383 	clz	r3, r3
 8003cce:	b2db      	uxtb	r3, r3
 8003cd0:	3301      	adds	r3, #1
 8003cd2:	f003 031f 	and.w	r3, r3, #31
 8003cd6:	2101      	movs	r1, #1
 8003cd8:	fa01 f303 	lsl.w	r3, r1, r3
 8003cdc:	ea42 0103 	orr.w	r1, r2, r3
 8003ce0:	683b      	ldr	r3, [r7, #0]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003ce8:	2b00      	cmp	r3, #0
 8003cea:	d10a      	bne.n	8003d02 <HAL_ADC_ConfigChannel+0x562>
 8003cec:	683b      	ldr	r3, [r7, #0]
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	0e9b      	lsrs	r3, r3, #26
 8003cf2:	3301      	adds	r3, #1
 8003cf4:	f003 021f 	and.w	r2, r3, #31
 8003cf8:	4613      	mov	r3, r2
 8003cfa:	005b      	lsls	r3, r3, #1
 8003cfc:	4413      	add	r3, r2
 8003cfe:	051b      	lsls	r3, r3, #20
 8003d00:	e018      	b.n	8003d34 <HAL_ADC_ConfigChannel+0x594>
 8003d02:	683b      	ldr	r3, [r7, #0]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	63bb      	str	r3, [r7, #56]	; 0x38
 8003d08:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003d0a:	fa93 f3a3 	rbit	r3, r3
 8003d0e:	637b      	str	r3, [r7, #52]	; 0x34
 8003d10:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003d12:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003d14:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003d16:	2b00      	cmp	r3, #0
 8003d18:	d101      	bne.n	8003d1e <HAL_ADC_ConfigChannel+0x57e>
 8003d1a:	2320      	movs	r3, #32
 8003d1c:	e003      	b.n	8003d26 <HAL_ADC_ConfigChannel+0x586>
 8003d1e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003d20:	fab3 f383 	clz	r3, r3
 8003d24:	b2db      	uxtb	r3, r3
 8003d26:	3301      	adds	r3, #1
 8003d28:	f003 021f 	and.w	r2, r3, #31
 8003d2c:	4613      	mov	r3, r2
 8003d2e:	005b      	lsls	r3, r3, #1
 8003d30:	4413      	add	r3, r2
 8003d32:	051b      	lsls	r3, r3, #20
 8003d34:	430b      	orrs	r3, r1
 8003d36:	e080      	b.n	8003e3a <HAL_ADC_ConfigChannel+0x69a>
 8003d38:	683b      	ldr	r3, [r7, #0]
 8003d3a:	681b      	ldr	r3, [r3, #0]
 8003d3c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d107      	bne.n	8003d54 <HAL_ADC_ConfigChannel+0x5b4>
 8003d44:	683b      	ldr	r3, [r7, #0]
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	0e9b      	lsrs	r3, r3, #26
 8003d4a:	3301      	adds	r3, #1
 8003d4c:	069b      	lsls	r3, r3, #26
 8003d4e:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8003d52:	e015      	b.n	8003d80 <HAL_ADC_ConfigChannel+0x5e0>
 8003d54:	683b      	ldr	r3, [r7, #0]
 8003d56:	681b      	ldr	r3, [r3, #0]
 8003d58:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003d5a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003d5c:	fa93 f3a3 	rbit	r3, r3
 8003d60:	62bb      	str	r3, [r7, #40]	; 0x28
 8003d62:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003d64:	633b      	str	r3, [r7, #48]	; 0x30
 8003d66:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	d101      	bne.n	8003d70 <HAL_ADC_ConfigChannel+0x5d0>
 8003d6c:	2320      	movs	r3, #32
 8003d6e:	e003      	b.n	8003d78 <HAL_ADC_ConfigChannel+0x5d8>
 8003d70:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003d72:	fab3 f383 	clz	r3, r3
 8003d76:	b2db      	uxtb	r3, r3
 8003d78:	3301      	adds	r3, #1
 8003d7a:	069b      	lsls	r3, r3, #26
 8003d7c:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8003d80:	683b      	ldr	r3, [r7, #0]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003d88:	2b00      	cmp	r3, #0
 8003d8a:	d109      	bne.n	8003da0 <HAL_ADC_ConfigChannel+0x600>
 8003d8c:	683b      	ldr	r3, [r7, #0]
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	0e9b      	lsrs	r3, r3, #26
 8003d92:	3301      	adds	r3, #1
 8003d94:	f003 031f 	and.w	r3, r3, #31
 8003d98:	2101      	movs	r1, #1
 8003d9a:	fa01 f303 	lsl.w	r3, r1, r3
 8003d9e:	e017      	b.n	8003dd0 <HAL_ADC_ConfigChannel+0x630>
 8003da0:	683b      	ldr	r3, [r7, #0]
 8003da2:	681b      	ldr	r3, [r3, #0]
 8003da4:	623b      	str	r3, [r7, #32]
 8003da6:	6a3b      	ldr	r3, [r7, #32]
 8003da8:	fa93 f3a3 	rbit	r3, r3
 8003dac:	61fb      	str	r3, [r7, #28]
 8003dae:	69fb      	ldr	r3, [r7, #28]
 8003db0:	627b      	str	r3, [r7, #36]	; 0x24
 8003db2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003db4:	2b00      	cmp	r3, #0
 8003db6:	d101      	bne.n	8003dbc <HAL_ADC_ConfigChannel+0x61c>
 8003db8:	2320      	movs	r3, #32
 8003dba:	e003      	b.n	8003dc4 <HAL_ADC_ConfigChannel+0x624>
 8003dbc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003dbe:	fab3 f383 	clz	r3, r3
 8003dc2:	b2db      	uxtb	r3, r3
 8003dc4:	3301      	adds	r3, #1
 8003dc6:	f003 031f 	and.w	r3, r3, #31
 8003dca:	2101      	movs	r1, #1
 8003dcc:	fa01 f303 	lsl.w	r3, r1, r3
 8003dd0:	ea42 0103 	orr.w	r1, r2, r3
 8003dd4:	683b      	ldr	r3, [r7, #0]
 8003dd6:	681b      	ldr	r3, [r3, #0]
 8003dd8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003ddc:	2b00      	cmp	r3, #0
 8003dde:	d10d      	bne.n	8003dfc <HAL_ADC_ConfigChannel+0x65c>
 8003de0:	683b      	ldr	r3, [r7, #0]
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	0e9b      	lsrs	r3, r3, #26
 8003de6:	3301      	adds	r3, #1
 8003de8:	f003 021f 	and.w	r2, r3, #31
 8003dec:	4613      	mov	r3, r2
 8003dee:	005b      	lsls	r3, r3, #1
 8003df0:	4413      	add	r3, r2
 8003df2:	3b1e      	subs	r3, #30
 8003df4:	051b      	lsls	r3, r3, #20
 8003df6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003dfa:	e01d      	b.n	8003e38 <HAL_ADC_ConfigChannel+0x698>
 8003dfc:	683b      	ldr	r3, [r7, #0]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	617b      	str	r3, [r7, #20]
 8003e02:	697b      	ldr	r3, [r7, #20]
 8003e04:	fa93 f3a3 	rbit	r3, r3
 8003e08:	613b      	str	r3, [r7, #16]
 8003e0a:	693b      	ldr	r3, [r7, #16]
 8003e0c:	61bb      	str	r3, [r7, #24]
 8003e0e:	69bb      	ldr	r3, [r7, #24]
 8003e10:	2b00      	cmp	r3, #0
 8003e12:	d103      	bne.n	8003e1c <HAL_ADC_ConfigChannel+0x67c>
 8003e14:	2320      	movs	r3, #32
 8003e16:	e005      	b.n	8003e24 <HAL_ADC_ConfigChannel+0x684>
 8003e18:	407f0000 	.word	0x407f0000
 8003e1c:	69bb      	ldr	r3, [r7, #24]
 8003e1e:	fab3 f383 	clz	r3, r3
 8003e22:	b2db      	uxtb	r3, r3
 8003e24:	3301      	adds	r3, #1
 8003e26:	f003 021f 	and.w	r2, r3, #31
 8003e2a:	4613      	mov	r3, r2
 8003e2c:	005b      	lsls	r3, r3, #1
 8003e2e:	4413      	add	r3, r2
 8003e30:	3b1e      	subs	r3, #30
 8003e32:	051b      	lsls	r3, r3, #20
 8003e34:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003e38:	430b      	orrs	r3, r1
 8003e3a:	683a      	ldr	r2, [r7, #0]
 8003e3c:	6892      	ldr	r2, [r2, #8]
 8003e3e:	4619      	mov	r1, r3
 8003e40:	f7ff f8e6 	bl	8003010 <LL_ADC_SetChannelSamplingTime>
 8003e44:	683b      	ldr	r3, [r7, #0]
 8003e46:	681a      	ldr	r2, [r3, #0]
 8003e48:	4b3d      	ldr	r3, [pc, #244]	; (8003f40 <HAL_ADC_ConfigChannel+0x7a0>)
 8003e4a:	4013      	ands	r3, r2
 8003e4c:	2b00      	cmp	r3, #0
 8003e4e:	d06c      	beq.n	8003f2a <HAL_ADC_ConfigChannel+0x78a>
 8003e50:	483c      	ldr	r0, [pc, #240]	; (8003f44 <HAL_ADC_ConfigChannel+0x7a4>)
 8003e52:	f7ff f83b 	bl	8002ecc <LL_ADC_GetCommonPathInternalCh>
 8003e56:	f8c7 00c4 	str.w	r0, [r7, #196]	; 0xc4
 8003e5a:	683b      	ldr	r3, [r7, #0]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	4a3a      	ldr	r2, [pc, #232]	; (8003f48 <HAL_ADC_ConfigChannel+0x7a8>)
 8003e60:	4293      	cmp	r3, r2
 8003e62:	d127      	bne.n	8003eb4 <HAL_ADC_ConfigChannel+0x714>
 8003e64:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003e68:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8003e6c:	2b00      	cmp	r3, #0
 8003e6e:	d121      	bne.n	8003eb4 <HAL_ADC_ConfigChannel+0x714>
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	681b      	ldr	r3, [r3, #0]
 8003e74:	4a35      	ldr	r2, [pc, #212]	; (8003f4c <HAL_ADC_ConfigChannel+0x7ac>)
 8003e76:	4293      	cmp	r3, r2
 8003e78:	d157      	bne.n	8003f2a <HAL_ADC_ConfigChannel+0x78a>
 8003e7a:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003e7e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003e82:	4619      	mov	r1, r3
 8003e84:	482f      	ldr	r0, [pc, #188]	; (8003f44 <HAL_ADC_ConfigChannel+0x7a4>)
 8003e86:	f7ff f80e 	bl	8002ea6 <LL_ADC_SetCommonPathInternalCh>
 8003e8a:	4b31      	ldr	r3, [pc, #196]	; (8003f50 <HAL_ADC_ConfigChannel+0x7b0>)
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	099b      	lsrs	r3, r3, #6
 8003e90:	4a30      	ldr	r2, [pc, #192]	; (8003f54 <HAL_ADC_ConfigChannel+0x7b4>)
 8003e92:	fba2 2303 	umull	r2, r3, r2, r3
 8003e96:	099b      	lsrs	r3, r3, #6
 8003e98:	1c5a      	adds	r2, r3, #1
 8003e9a:	4613      	mov	r3, r2
 8003e9c:	005b      	lsls	r3, r3, #1
 8003e9e:	4413      	add	r3, r2
 8003ea0:	009b      	lsls	r3, r3, #2
 8003ea2:	60fb      	str	r3, [r7, #12]
 8003ea4:	e002      	b.n	8003eac <HAL_ADC_ConfigChannel+0x70c>
 8003ea6:	68fb      	ldr	r3, [r7, #12]
 8003ea8:	3b01      	subs	r3, #1
 8003eaa:	60fb      	str	r3, [r7, #12]
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	2b00      	cmp	r3, #0
 8003eb0:	d1f9      	bne.n	8003ea6 <HAL_ADC_ConfigChannel+0x706>
 8003eb2:	e03a      	b.n	8003f2a <HAL_ADC_ConfigChannel+0x78a>
 8003eb4:	683b      	ldr	r3, [r7, #0]
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	4a27      	ldr	r2, [pc, #156]	; (8003f58 <HAL_ADC_ConfigChannel+0x7b8>)
 8003eba:	4293      	cmp	r3, r2
 8003ebc:	d113      	bne.n	8003ee6 <HAL_ADC_ConfigChannel+0x746>
 8003ebe:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003ec2:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003ec6:	2b00      	cmp	r3, #0
 8003ec8:	d10d      	bne.n	8003ee6 <HAL_ADC_ConfigChannel+0x746>
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	4a1f      	ldr	r2, [pc, #124]	; (8003f4c <HAL_ADC_ConfigChannel+0x7ac>)
 8003ed0:	4293      	cmp	r3, r2
 8003ed2:	d12a      	bne.n	8003f2a <HAL_ADC_ConfigChannel+0x78a>
 8003ed4:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003ed8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003edc:	4619      	mov	r1, r3
 8003ede:	4819      	ldr	r0, [pc, #100]	; (8003f44 <HAL_ADC_ConfigChannel+0x7a4>)
 8003ee0:	f7fe ffe1 	bl	8002ea6 <LL_ADC_SetCommonPathInternalCh>
 8003ee4:	e021      	b.n	8003f2a <HAL_ADC_ConfigChannel+0x78a>
 8003ee6:	683b      	ldr	r3, [r7, #0]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	4a1c      	ldr	r2, [pc, #112]	; (8003f5c <HAL_ADC_ConfigChannel+0x7bc>)
 8003eec:	4293      	cmp	r3, r2
 8003eee:	d11c      	bne.n	8003f2a <HAL_ADC_ConfigChannel+0x78a>
 8003ef0:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003ef4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003ef8:	2b00      	cmp	r3, #0
 8003efa:	d116      	bne.n	8003f2a <HAL_ADC_ConfigChannel+0x78a>
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	4a12      	ldr	r2, [pc, #72]	; (8003f4c <HAL_ADC_ConfigChannel+0x7ac>)
 8003f02:	4293      	cmp	r3, r2
 8003f04:	d111      	bne.n	8003f2a <HAL_ADC_ConfigChannel+0x78a>
 8003f06:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003f0a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8003f0e:	4619      	mov	r1, r3
 8003f10:	480c      	ldr	r0, [pc, #48]	; (8003f44 <HAL_ADC_ConfigChannel+0x7a4>)
 8003f12:	f7fe ffc8 	bl	8002ea6 <LL_ADC_SetCommonPathInternalCh>
 8003f16:	e008      	b.n	8003f2a <HAL_ADC_ConfigChannel+0x78a>
 8003f18:	687b      	ldr	r3, [r7, #4]
 8003f1a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003f1c:	f043 0220 	orr.w	r2, r3, #32
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	655a      	str	r2, [r3, #84]	; 0x54
 8003f24:	2301      	movs	r3, #1
 8003f26:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	2200      	movs	r2, #0
 8003f2e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003f32:	f897 30d7 	ldrb.w	r3, [r7, #215]	; 0xd7
 8003f36:	4618      	mov	r0, r3
 8003f38:	37d8      	adds	r7, #216	; 0xd8
 8003f3a:	46bd      	mov	sp, r7
 8003f3c:	bd80      	pop	{r7, pc}
 8003f3e:	bf00      	nop
 8003f40:	80080000 	.word	0x80080000
 8003f44:	50040300 	.word	0x50040300
 8003f48:	c7520000 	.word	0xc7520000
 8003f4c:	50040000 	.word	0x50040000
 8003f50:	2000000c 	.word	0x2000000c
 8003f54:	053e2d63 	.word	0x053e2d63
 8003f58:	cb840000 	.word	0xcb840000
 8003f5c:	80000001 	.word	0x80000001

08003f60 <ADC_ConversionStop>:
 8003f60:	b580      	push	{r7, lr}
 8003f62:	b088      	sub	sp, #32
 8003f64:	af00      	add	r7, sp, #0
 8003f66:	6078      	str	r0, [r7, #4]
 8003f68:	6039      	str	r1, [r7, #0]
 8003f6a:	2300      	movs	r3, #0
 8003f6c:	61fb      	str	r3, [r7, #28]
 8003f6e:	683b      	ldr	r3, [r7, #0]
 8003f70:	61bb      	str	r3, [r7, #24]
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	681b      	ldr	r3, [r3, #0]
 8003f76:	4618      	mov	r0, r3
 8003f78:	f7ff f95e 	bl	8003238 <LL_ADC_REG_IsConversionOngoing>
 8003f7c:	6138      	str	r0, [r7, #16]
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	681b      	ldr	r3, [r3, #0]
 8003f82:	4618      	mov	r0, r3
 8003f84:	f7ff f97f 	bl	8003286 <LL_ADC_INJ_IsConversionOngoing>
 8003f88:	60f8      	str	r0, [r7, #12]
 8003f8a:	693b      	ldr	r3, [r7, #16]
 8003f8c:	2b00      	cmp	r3, #0
 8003f8e:	d103      	bne.n	8003f98 <ADC_ConversionStop+0x38>
 8003f90:	68fb      	ldr	r3, [r7, #12]
 8003f92:	2b00      	cmp	r3, #0
 8003f94:	f000 8098 	beq.w	80040c8 <ADC_ConversionStop+0x168>
 8003f98:	687b      	ldr	r3, [r7, #4]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	68db      	ldr	r3, [r3, #12]
 8003f9e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003fa2:	2b00      	cmp	r3, #0
 8003fa4:	d02a      	beq.n	8003ffc <ADC_ConversionStop+0x9c>
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	7e5b      	ldrb	r3, [r3, #25]
 8003faa:	2b01      	cmp	r3, #1
 8003fac:	d126      	bne.n	8003ffc <ADC_ConversionStop+0x9c>
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	7e1b      	ldrb	r3, [r3, #24]
 8003fb2:	2b01      	cmp	r3, #1
 8003fb4:	d122      	bne.n	8003ffc <ADC_ConversionStop+0x9c>
 8003fb6:	2301      	movs	r3, #1
 8003fb8:	61bb      	str	r3, [r7, #24]
 8003fba:	e014      	b.n	8003fe6 <ADC_ConversionStop+0x86>
 8003fbc:	69fb      	ldr	r3, [r7, #28]
 8003fbe:	4a45      	ldr	r2, [pc, #276]	; (80040d4 <ADC_ConversionStop+0x174>)
 8003fc0:	4293      	cmp	r3, r2
 8003fc2:	d90d      	bls.n	8003fe0 <ADC_ConversionStop+0x80>
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003fc8:	f043 0210 	orr.w	r2, r3, #16
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	655a      	str	r2, [r3, #84]	; 0x54
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003fd4:	f043 0201 	orr.w	r2, r3, #1
 8003fd8:	687b      	ldr	r3, [r7, #4]
 8003fda:	659a      	str	r2, [r3, #88]	; 0x58
 8003fdc:	2301      	movs	r3, #1
 8003fde:	e074      	b.n	80040ca <ADC_ConversionStop+0x16a>
 8003fe0:	69fb      	ldr	r3, [r7, #28]
 8003fe2:	3301      	adds	r3, #1
 8003fe4:	61fb      	str	r3, [r7, #28]
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	681b      	ldr	r3, [r3, #0]
 8003fea:	681b      	ldr	r3, [r3, #0]
 8003fec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003ff0:	2b40      	cmp	r3, #64	; 0x40
 8003ff2:	d1e3      	bne.n	8003fbc <ADC_ConversionStop+0x5c>
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	2240      	movs	r2, #64	; 0x40
 8003ffa:	601a      	str	r2, [r3, #0]
 8003ffc:	69bb      	ldr	r3, [r7, #24]
 8003ffe:	2b02      	cmp	r3, #2
 8004000:	d014      	beq.n	800402c <ADC_ConversionStop+0xcc>
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	681b      	ldr	r3, [r3, #0]
 8004006:	4618      	mov	r0, r3
 8004008:	f7ff f916 	bl	8003238 <LL_ADC_REG_IsConversionOngoing>
 800400c:	4603      	mov	r3, r0
 800400e:	2b00      	cmp	r3, #0
 8004010:	d00c      	beq.n	800402c <ADC_ConversionStop+0xcc>
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	4618      	mov	r0, r3
 8004018:	f7ff f8d3 	bl	80031c2 <LL_ADC_IsDisableOngoing>
 800401c:	4603      	mov	r3, r0
 800401e:	2b00      	cmp	r3, #0
 8004020:	d104      	bne.n	800402c <ADC_ConversionStop+0xcc>
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	4618      	mov	r0, r3
 8004028:	f7ff f8f2 	bl	8003210 <LL_ADC_REG_StopConversion>
 800402c:	69bb      	ldr	r3, [r7, #24]
 800402e:	2b01      	cmp	r3, #1
 8004030:	d014      	beq.n	800405c <ADC_ConversionStop+0xfc>
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	4618      	mov	r0, r3
 8004038:	f7ff f925 	bl	8003286 <LL_ADC_INJ_IsConversionOngoing>
 800403c:	4603      	mov	r3, r0
 800403e:	2b00      	cmp	r3, #0
 8004040:	d00c      	beq.n	800405c <ADC_ConversionStop+0xfc>
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	4618      	mov	r0, r3
 8004048:	f7ff f8bb 	bl	80031c2 <LL_ADC_IsDisableOngoing>
 800404c:	4603      	mov	r3, r0
 800404e:	2b00      	cmp	r3, #0
 8004050:	d104      	bne.n	800405c <ADC_ConversionStop+0xfc>
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	4618      	mov	r0, r3
 8004058:	f7ff f901 	bl	800325e <LL_ADC_INJ_StopConversion>
 800405c:	69bb      	ldr	r3, [r7, #24]
 800405e:	2b02      	cmp	r3, #2
 8004060:	d005      	beq.n	800406e <ADC_ConversionStop+0x10e>
 8004062:	69bb      	ldr	r3, [r7, #24]
 8004064:	2b03      	cmp	r3, #3
 8004066:	d105      	bne.n	8004074 <ADC_ConversionStop+0x114>
 8004068:	230c      	movs	r3, #12
 800406a:	617b      	str	r3, [r7, #20]
 800406c:	e005      	b.n	800407a <ADC_ConversionStop+0x11a>
 800406e:	2308      	movs	r3, #8
 8004070:	617b      	str	r3, [r7, #20]
 8004072:	e002      	b.n	800407a <ADC_ConversionStop+0x11a>
 8004074:	2304      	movs	r3, #4
 8004076:	617b      	str	r3, [r7, #20]
 8004078:	bf00      	nop
 800407a:	f7fe fec1 	bl	8002e00 <HAL_GetTick>
 800407e:	60b8      	str	r0, [r7, #8]
 8004080:	e01b      	b.n	80040ba <ADC_ConversionStop+0x15a>
 8004082:	f7fe febd 	bl	8002e00 <HAL_GetTick>
 8004086:	4602      	mov	r2, r0
 8004088:	68bb      	ldr	r3, [r7, #8]
 800408a:	1ad3      	subs	r3, r2, r3
 800408c:	2b05      	cmp	r3, #5
 800408e:	d914      	bls.n	80040ba <ADC_ConversionStop+0x15a>
 8004090:	687b      	ldr	r3, [r7, #4]
 8004092:	681b      	ldr	r3, [r3, #0]
 8004094:	689a      	ldr	r2, [r3, #8]
 8004096:	697b      	ldr	r3, [r7, #20]
 8004098:	4013      	ands	r3, r2
 800409a:	2b00      	cmp	r3, #0
 800409c:	d00d      	beq.n	80040ba <ADC_ConversionStop+0x15a>
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80040a2:	f043 0210 	orr.w	r2, r3, #16
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	655a      	str	r2, [r3, #84]	; 0x54
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80040ae:	f043 0201 	orr.w	r2, r3, #1
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	659a      	str	r2, [r3, #88]	; 0x58
 80040b6:	2301      	movs	r3, #1
 80040b8:	e007      	b.n	80040ca <ADC_ConversionStop+0x16a>
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	681b      	ldr	r3, [r3, #0]
 80040be:	689a      	ldr	r2, [r3, #8]
 80040c0:	697b      	ldr	r3, [r7, #20]
 80040c2:	4013      	ands	r3, r2
 80040c4:	2b00      	cmp	r3, #0
 80040c6:	d1dc      	bne.n	8004082 <ADC_ConversionStop+0x122>
 80040c8:	2300      	movs	r3, #0
 80040ca:	4618      	mov	r0, r3
 80040cc:	3720      	adds	r7, #32
 80040ce:	46bd      	mov	sp, r7
 80040d0:	bd80      	pop	{r7, pc}
 80040d2:	bf00      	nop
 80040d4:	a33fffff 	.word	0xa33fffff

080040d8 <ADC_Enable>:
 80040d8:	b580      	push	{r7, lr}
 80040da:	b084      	sub	sp, #16
 80040dc:	af00      	add	r7, sp, #0
 80040de:	6078      	str	r0, [r7, #4]
 80040e0:	2300      	movs	r3, #0
 80040e2:	60bb      	str	r3, [r7, #8]
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	681b      	ldr	r3, [r3, #0]
 80040e8:	4618      	mov	r0, r3
 80040ea:	f7ff f857 	bl	800319c <LL_ADC_IsEnabled>
 80040ee:	4603      	mov	r3, r0
 80040f0:	2b00      	cmp	r3, #0
 80040f2:	d169      	bne.n	80041c8 <ADC_Enable+0xf0>
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	689a      	ldr	r2, [r3, #8]
 80040fa:	4b36      	ldr	r3, [pc, #216]	; (80041d4 <ADC_Enable+0xfc>)
 80040fc:	4013      	ands	r3, r2
 80040fe:	2b00      	cmp	r3, #0
 8004100:	d00d      	beq.n	800411e <ADC_Enable+0x46>
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004106:	f043 0210 	orr.w	r2, r3, #16
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	655a      	str	r2, [r3, #84]	; 0x54
 800410e:	687b      	ldr	r3, [r7, #4]
 8004110:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004112:	f043 0201 	orr.w	r2, r3, #1
 8004116:	687b      	ldr	r3, [r7, #4]
 8004118:	659a      	str	r2, [r3, #88]	; 0x58
 800411a:	2301      	movs	r3, #1
 800411c:	e055      	b.n	80041ca <ADC_Enable+0xf2>
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	681b      	ldr	r3, [r3, #0]
 8004122:	4618      	mov	r0, r3
 8004124:	f7ff f812 	bl	800314c <LL_ADC_Enable>
 8004128:	482b      	ldr	r0, [pc, #172]	; (80041d8 <ADC_Enable+0x100>)
 800412a:	f7fe fecf 	bl	8002ecc <LL_ADC_GetCommonPathInternalCh>
 800412e:	4603      	mov	r3, r0
 8004130:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8004134:	2b00      	cmp	r3, #0
 8004136:	d013      	beq.n	8004160 <ADC_Enable+0x88>
 8004138:	4b28      	ldr	r3, [pc, #160]	; (80041dc <ADC_Enable+0x104>)
 800413a:	681b      	ldr	r3, [r3, #0]
 800413c:	099b      	lsrs	r3, r3, #6
 800413e:	4a28      	ldr	r2, [pc, #160]	; (80041e0 <ADC_Enable+0x108>)
 8004140:	fba2 2303 	umull	r2, r3, r2, r3
 8004144:	099b      	lsrs	r3, r3, #6
 8004146:	1c5a      	adds	r2, r3, #1
 8004148:	4613      	mov	r3, r2
 800414a:	005b      	lsls	r3, r3, #1
 800414c:	4413      	add	r3, r2
 800414e:	009b      	lsls	r3, r3, #2
 8004150:	60bb      	str	r3, [r7, #8]
 8004152:	e002      	b.n	800415a <ADC_Enable+0x82>
 8004154:	68bb      	ldr	r3, [r7, #8]
 8004156:	3b01      	subs	r3, #1
 8004158:	60bb      	str	r3, [r7, #8]
 800415a:	68bb      	ldr	r3, [r7, #8]
 800415c:	2b00      	cmp	r3, #0
 800415e:	d1f9      	bne.n	8004154 <ADC_Enable+0x7c>
 8004160:	f7fe fe4e 	bl	8002e00 <HAL_GetTick>
 8004164:	60f8      	str	r0, [r7, #12]
 8004166:	e028      	b.n	80041ba <ADC_Enable+0xe2>
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	681b      	ldr	r3, [r3, #0]
 800416c:	4618      	mov	r0, r3
 800416e:	f7ff f815 	bl	800319c <LL_ADC_IsEnabled>
 8004172:	4603      	mov	r3, r0
 8004174:	2b00      	cmp	r3, #0
 8004176:	d104      	bne.n	8004182 <ADC_Enable+0xaa>
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	681b      	ldr	r3, [r3, #0]
 800417c:	4618      	mov	r0, r3
 800417e:	f7fe ffe5 	bl	800314c <LL_ADC_Enable>
 8004182:	f7fe fe3d 	bl	8002e00 <HAL_GetTick>
 8004186:	4602      	mov	r2, r0
 8004188:	68fb      	ldr	r3, [r7, #12]
 800418a:	1ad3      	subs	r3, r2, r3
 800418c:	2b02      	cmp	r3, #2
 800418e:	d914      	bls.n	80041ba <ADC_Enable+0xe2>
 8004190:	687b      	ldr	r3, [r7, #4]
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	f003 0301 	and.w	r3, r3, #1
 800419a:	2b01      	cmp	r3, #1
 800419c:	d00d      	beq.n	80041ba <ADC_Enable+0xe2>
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80041a2:	f043 0210 	orr.w	r2, r3, #16
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	655a      	str	r2, [r3, #84]	; 0x54
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80041ae:	f043 0201 	orr.w	r2, r3, #1
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	659a      	str	r2, [r3, #88]	; 0x58
 80041b6:	2301      	movs	r3, #1
 80041b8:	e007      	b.n	80041ca <ADC_Enable+0xf2>
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	f003 0301 	and.w	r3, r3, #1
 80041c4:	2b01      	cmp	r3, #1
 80041c6:	d1cf      	bne.n	8004168 <ADC_Enable+0x90>
 80041c8:	2300      	movs	r3, #0
 80041ca:	4618      	mov	r0, r3
 80041cc:	3710      	adds	r7, #16
 80041ce:	46bd      	mov	sp, r7
 80041d0:	bd80      	pop	{r7, pc}
 80041d2:	bf00      	nop
 80041d4:	8000003f 	.word	0x8000003f
 80041d8:	50040300 	.word	0x50040300
 80041dc:	2000000c 	.word	0x2000000c
 80041e0:	053e2d63 	.word	0x053e2d63

080041e4 <ADC_Disable>:
 80041e4:	b580      	push	{r7, lr}
 80041e6:	b084      	sub	sp, #16
 80041e8:	af00      	add	r7, sp, #0
 80041ea:	6078      	str	r0, [r7, #4]
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	4618      	mov	r0, r3
 80041f2:	f7fe ffe6 	bl	80031c2 <LL_ADC_IsDisableOngoing>
 80041f6:	60f8      	str	r0, [r7, #12]
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	4618      	mov	r0, r3
 80041fe:	f7fe ffcd 	bl	800319c <LL_ADC_IsEnabled>
 8004202:	4603      	mov	r3, r0
 8004204:	2b00      	cmp	r3, #0
 8004206:	d047      	beq.n	8004298 <ADC_Disable+0xb4>
 8004208:	68fb      	ldr	r3, [r7, #12]
 800420a:	2b00      	cmp	r3, #0
 800420c:	d144      	bne.n	8004298 <ADC_Disable+0xb4>
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	689b      	ldr	r3, [r3, #8]
 8004214:	f003 030d 	and.w	r3, r3, #13
 8004218:	2b01      	cmp	r3, #1
 800421a:	d10c      	bne.n	8004236 <ADC_Disable+0x52>
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	4618      	mov	r0, r3
 8004222:	f7fe ffa7 	bl	8003174 <LL_ADC_Disable>
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	681b      	ldr	r3, [r3, #0]
 800422a:	2203      	movs	r2, #3
 800422c:	601a      	str	r2, [r3, #0]
 800422e:	f7fe fde7 	bl	8002e00 <HAL_GetTick>
 8004232:	60b8      	str	r0, [r7, #8]
 8004234:	e029      	b.n	800428a <ADC_Disable+0xa6>
 8004236:	687b      	ldr	r3, [r7, #4]
 8004238:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800423a:	f043 0210 	orr.w	r2, r3, #16
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	655a      	str	r2, [r3, #84]	; 0x54
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004246:	f043 0201 	orr.w	r2, r3, #1
 800424a:	687b      	ldr	r3, [r7, #4]
 800424c:	659a      	str	r2, [r3, #88]	; 0x58
 800424e:	2301      	movs	r3, #1
 8004250:	e023      	b.n	800429a <ADC_Disable+0xb6>
 8004252:	f7fe fdd5 	bl	8002e00 <HAL_GetTick>
 8004256:	4602      	mov	r2, r0
 8004258:	68bb      	ldr	r3, [r7, #8]
 800425a:	1ad3      	subs	r3, r2, r3
 800425c:	2b02      	cmp	r3, #2
 800425e:	d914      	bls.n	800428a <ADC_Disable+0xa6>
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	681b      	ldr	r3, [r3, #0]
 8004264:	689b      	ldr	r3, [r3, #8]
 8004266:	f003 0301 	and.w	r3, r3, #1
 800426a:	2b00      	cmp	r3, #0
 800426c:	d00d      	beq.n	800428a <ADC_Disable+0xa6>
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004272:	f043 0210 	orr.w	r2, r3, #16
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	655a      	str	r2, [r3, #84]	; 0x54
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800427e:	f043 0201 	orr.w	r2, r3, #1
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	659a      	str	r2, [r3, #88]	; 0x58
 8004286:	2301      	movs	r3, #1
 8004288:	e007      	b.n	800429a <ADC_Disable+0xb6>
 800428a:	687b      	ldr	r3, [r7, #4]
 800428c:	681b      	ldr	r3, [r3, #0]
 800428e:	689b      	ldr	r3, [r3, #8]
 8004290:	f003 0301 	and.w	r3, r3, #1
 8004294:	2b00      	cmp	r3, #0
 8004296:	d1dc      	bne.n	8004252 <ADC_Disable+0x6e>
 8004298:	2300      	movs	r3, #0
 800429a:	4618      	mov	r0, r3
 800429c:	3710      	adds	r7, #16
 800429e:	46bd      	mov	sp, r7
 80042a0:	bd80      	pop	{r7, pc}

080042a2 <LL_ADC_StartCalibration>:
 80042a2:	b480      	push	{r7}
 80042a4:	b083      	sub	sp, #12
 80042a6:	af00      	add	r7, sp, #0
 80042a8:	6078      	str	r0, [r7, #4]
 80042aa:	6039      	str	r1, [r7, #0]
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	689b      	ldr	r3, [r3, #8]
 80042b0:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
 80042b4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80042b8:	683a      	ldr	r2, [r7, #0]
 80042ba:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 80042be:	4313      	orrs	r3, r2
 80042c0:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	609a      	str	r2, [r3, #8]
 80042c8:	bf00      	nop
 80042ca:	370c      	adds	r7, #12
 80042cc:	46bd      	mov	sp, r7
 80042ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042d2:	4770      	bx	lr

080042d4 <LL_ADC_IsCalibrationOnGoing>:
 80042d4:	b480      	push	{r7}
 80042d6:	b083      	sub	sp, #12
 80042d8:	af00      	add	r7, sp, #0
 80042da:	6078      	str	r0, [r7, #4]
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	689b      	ldr	r3, [r3, #8]
 80042e0:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80042e4:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80042e8:	d101      	bne.n	80042ee <LL_ADC_IsCalibrationOnGoing+0x1a>
 80042ea:	2301      	movs	r3, #1
 80042ec:	e000      	b.n	80042f0 <LL_ADC_IsCalibrationOnGoing+0x1c>
 80042ee:	2300      	movs	r3, #0
 80042f0:	4618      	mov	r0, r3
 80042f2:	370c      	adds	r7, #12
 80042f4:	46bd      	mov	sp, r7
 80042f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042fa:	4770      	bx	lr

080042fc <HAL_ADCEx_Calibration_Start>:
 80042fc:	b580      	push	{r7, lr}
 80042fe:	b084      	sub	sp, #16
 8004300:	af00      	add	r7, sp, #0
 8004302:	6078      	str	r0, [r7, #4]
 8004304:	6039      	str	r1, [r7, #0]
 8004306:	2300      	movs	r3, #0
 8004308:	60bb      	str	r3, [r7, #8]
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8004310:	2b01      	cmp	r3, #1
 8004312:	d101      	bne.n	8004318 <HAL_ADCEx_Calibration_Start+0x1c>
 8004314:	2302      	movs	r3, #2
 8004316:	e04d      	b.n	80043b4 <HAL_ADCEx_Calibration_Start+0xb8>
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	2201      	movs	r2, #1
 800431c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004320:	6878      	ldr	r0, [r7, #4]
 8004322:	f7ff ff5f 	bl	80041e4 <ADC_Disable>
 8004326:	4603      	mov	r3, r0
 8004328:	73fb      	strb	r3, [r7, #15]
 800432a:	7bfb      	ldrb	r3, [r7, #15]
 800432c:	2b00      	cmp	r3, #0
 800432e:	d136      	bne.n	800439e <HAL_ADCEx_Calibration_Start+0xa2>
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004334:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8004338:	f023 0302 	bic.w	r3, r3, #2
 800433c:	f043 0202 	orr.w	r2, r3, #2
 8004340:	687b      	ldr	r3, [r7, #4]
 8004342:	655a      	str	r2, [r3, #84]	; 0x54
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	681b      	ldr	r3, [r3, #0]
 8004348:	6839      	ldr	r1, [r7, #0]
 800434a:	4618      	mov	r0, r3
 800434c:	f7ff ffa9 	bl	80042a2 <LL_ADC_StartCalibration>
 8004350:	e014      	b.n	800437c <HAL_ADCEx_Calibration_Start+0x80>
 8004352:	68bb      	ldr	r3, [r7, #8]
 8004354:	3301      	adds	r3, #1
 8004356:	60bb      	str	r3, [r7, #8]
 8004358:	68bb      	ldr	r3, [r7, #8]
 800435a:	f5b3 2f91 	cmp.w	r3, #296960	; 0x48800
 800435e:	d30d      	bcc.n	800437c <HAL_ADCEx_Calibration_Start+0x80>
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004364:	f023 0312 	bic.w	r3, r3, #18
 8004368:	f043 0210 	orr.w	r2, r3, #16
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	655a      	str	r2, [r3, #84]	; 0x54
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	2200      	movs	r2, #0
 8004374:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004378:	2301      	movs	r3, #1
 800437a:	e01b      	b.n	80043b4 <HAL_ADCEx_Calibration_Start+0xb8>
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	4618      	mov	r0, r3
 8004382:	f7ff ffa7 	bl	80042d4 <LL_ADC_IsCalibrationOnGoing>
 8004386:	4603      	mov	r3, r0
 8004388:	2b00      	cmp	r3, #0
 800438a:	d1e2      	bne.n	8004352 <HAL_ADCEx_Calibration_Start+0x56>
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004390:	f023 0303 	bic.w	r3, r3, #3
 8004394:	f043 0201 	orr.w	r2, r3, #1
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	655a      	str	r2, [r3, #84]	; 0x54
 800439c:	e005      	b.n	80043aa <HAL_ADCEx_Calibration_Start+0xae>
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80043a2:	f043 0210 	orr.w	r2, r3, #16
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	655a      	str	r2, [r3, #84]	; 0x54
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	2200      	movs	r2, #0
 80043ae:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80043b2:	7bfb      	ldrb	r3, [r7, #15]
 80043b4:	4618      	mov	r0, r3
 80043b6:	3710      	adds	r7, #16
 80043b8:	46bd      	mov	sp, r7
 80043ba:	bd80      	pop	{r7, pc}

080043bc <__NVIC_SetPriorityGrouping>:
 80043bc:	b480      	push	{r7}
 80043be:	b085      	sub	sp, #20
 80043c0:	af00      	add	r7, sp, #0
 80043c2:	6078      	str	r0, [r7, #4]
 80043c4:	687b      	ldr	r3, [r7, #4]
 80043c6:	f003 0307 	and.w	r3, r3, #7
 80043ca:	60fb      	str	r3, [r7, #12]
 80043cc:	4b0c      	ldr	r3, [pc, #48]	; (8004400 <__NVIC_SetPriorityGrouping+0x44>)
 80043ce:	68db      	ldr	r3, [r3, #12]
 80043d0:	60bb      	str	r3, [r7, #8]
 80043d2:	68ba      	ldr	r2, [r7, #8]
 80043d4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80043d8:	4013      	ands	r3, r2
 80043da:	60bb      	str	r3, [r7, #8]
 80043dc:	68fb      	ldr	r3, [r7, #12]
 80043de:	021a      	lsls	r2, r3, #8
 80043e0:	68bb      	ldr	r3, [r7, #8]
 80043e2:	4313      	orrs	r3, r2
 80043e4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80043e8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80043ec:	60bb      	str	r3, [r7, #8]
 80043ee:	4a04      	ldr	r2, [pc, #16]	; (8004400 <__NVIC_SetPriorityGrouping+0x44>)
 80043f0:	68bb      	ldr	r3, [r7, #8]
 80043f2:	60d3      	str	r3, [r2, #12]
 80043f4:	bf00      	nop
 80043f6:	3714      	adds	r7, #20
 80043f8:	46bd      	mov	sp, r7
 80043fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043fe:	4770      	bx	lr
 8004400:	e000ed00 	.word	0xe000ed00

08004404 <__NVIC_GetPriorityGrouping>:
 8004404:	b480      	push	{r7}
 8004406:	af00      	add	r7, sp, #0
 8004408:	4b04      	ldr	r3, [pc, #16]	; (800441c <__NVIC_GetPriorityGrouping+0x18>)
 800440a:	68db      	ldr	r3, [r3, #12]
 800440c:	0a1b      	lsrs	r3, r3, #8
 800440e:	f003 0307 	and.w	r3, r3, #7
 8004412:	4618      	mov	r0, r3
 8004414:	46bd      	mov	sp, r7
 8004416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800441a:	4770      	bx	lr
 800441c:	e000ed00 	.word	0xe000ed00

08004420 <__NVIC_EnableIRQ>:
 8004420:	b480      	push	{r7}
 8004422:	b083      	sub	sp, #12
 8004424:	af00      	add	r7, sp, #0
 8004426:	4603      	mov	r3, r0
 8004428:	71fb      	strb	r3, [r7, #7]
 800442a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800442e:	2b00      	cmp	r3, #0
 8004430:	db0b      	blt.n	800444a <__NVIC_EnableIRQ+0x2a>
 8004432:	79fb      	ldrb	r3, [r7, #7]
 8004434:	f003 021f 	and.w	r2, r3, #31
 8004438:	4907      	ldr	r1, [pc, #28]	; (8004458 <__NVIC_EnableIRQ+0x38>)
 800443a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800443e:	095b      	lsrs	r3, r3, #5
 8004440:	2001      	movs	r0, #1
 8004442:	fa00 f202 	lsl.w	r2, r0, r2
 8004446:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800444a:	bf00      	nop
 800444c:	370c      	adds	r7, #12
 800444e:	46bd      	mov	sp, r7
 8004450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004454:	4770      	bx	lr
 8004456:	bf00      	nop
 8004458:	e000e100 	.word	0xe000e100

0800445c <__NVIC_SetPriority>:
 800445c:	b480      	push	{r7}
 800445e:	b083      	sub	sp, #12
 8004460:	af00      	add	r7, sp, #0
 8004462:	4603      	mov	r3, r0
 8004464:	6039      	str	r1, [r7, #0]
 8004466:	71fb      	strb	r3, [r7, #7]
 8004468:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800446c:	2b00      	cmp	r3, #0
 800446e:	db0a      	blt.n	8004486 <__NVIC_SetPriority+0x2a>
 8004470:	683b      	ldr	r3, [r7, #0]
 8004472:	b2da      	uxtb	r2, r3
 8004474:	490c      	ldr	r1, [pc, #48]	; (80044a8 <__NVIC_SetPriority+0x4c>)
 8004476:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800447a:	0112      	lsls	r2, r2, #4
 800447c:	b2d2      	uxtb	r2, r2
 800447e:	440b      	add	r3, r1
 8004480:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004484:	e00a      	b.n	800449c <__NVIC_SetPriority+0x40>
 8004486:	683b      	ldr	r3, [r7, #0]
 8004488:	b2da      	uxtb	r2, r3
 800448a:	4908      	ldr	r1, [pc, #32]	; (80044ac <__NVIC_SetPriority+0x50>)
 800448c:	79fb      	ldrb	r3, [r7, #7]
 800448e:	f003 030f 	and.w	r3, r3, #15
 8004492:	3b04      	subs	r3, #4
 8004494:	0112      	lsls	r2, r2, #4
 8004496:	b2d2      	uxtb	r2, r2
 8004498:	440b      	add	r3, r1
 800449a:	761a      	strb	r2, [r3, #24]
 800449c:	bf00      	nop
 800449e:	370c      	adds	r7, #12
 80044a0:	46bd      	mov	sp, r7
 80044a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044a6:	4770      	bx	lr
 80044a8:	e000e100 	.word	0xe000e100
 80044ac:	e000ed00 	.word	0xe000ed00

080044b0 <NVIC_EncodePriority>:
 80044b0:	b480      	push	{r7}
 80044b2:	b089      	sub	sp, #36	; 0x24
 80044b4:	af00      	add	r7, sp, #0
 80044b6:	60f8      	str	r0, [r7, #12]
 80044b8:	60b9      	str	r1, [r7, #8]
 80044ba:	607a      	str	r2, [r7, #4]
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	f003 0307 	and.w	r3, r3, #7
 80044c2:	61fb      	str	r3, [r7, #28]
 80044c4:	69fb      	ldr	r3, [r7, #28]
 80044c6:	f1c3 0307 	rsb	r3, r3, #7
 80044ca:	2b04      	cmp	r3, #4
 80044cc:	bf28      	it	cs
 80044ce:	2304      	movcs	r3, #4
 80044d0:	61bb      	str	r3, [r7, #24]
 80044d2:	69fb      	ldr	r3, [r7, #28]
 80044d4:	3304      	adds	r3, #4
 80044d6:	2b06      	cmp	r3, #6
 80044d8:	d902      	bls.n	80044e0 <NVIC_EncodePriority+0x30>
 80044da:	69fb      	ldr	r3, [r7, #28]
 80044dc:	3b03      	subs	r3, #3
 80044de:	e000      	b.n	80044e2 <NVIC_EncodePriority+0x32>
 80044e0:	2300      	movs	r3, #0
 80044e2:	617b      	str	r3, [r7, #20]
 80044e4:	f04f 32ff 	mov.w	r2, #4294967295
 80044e8:	69bb      	ldr	r3, [r7, #24]
 80044ea:	fa02 f303 	lsl.w	r3, r2, r3
 80044ee:	43da      	mvns	r2, r3
 80044f0:	68bb      	ldr	r3, [r7, #8]
 80044f2:	401a      	ands	r2, r3
 80044f4:	697b      	ldr	r3, [r7, #20]
 80044f6:	409a      	lsls	r2, r3
 80044f8:	f04f 31ff 	mov.w	r1, #4294967295
 80044fc:	697b      	ldr	r3, [r7, #20]
 80044fe:	fa01 f303 	lsl.w	r3, r1, r3
 8004502:	43d9      	mvns	r1, r3
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	400b      	ands	r3, r1
 8004508:	4313      	orrs	r3, r2
 800450a:	4618      	mov	r0, r3
 800450c:	3724      	adds	r7, #36	; 0x24
 800450e:	46bd      	mov	sp, r7
 8004510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004514:	4770      	bx	lr
	...

08004518 <SysTick_Config>:
 8004518:	b580      	push	{r7, lr}
 800451a:	b082      	sub	sp, #8
 800451c:	af00      	add	r7, sp, #0
 800451e:	6078      	str	r0, [r7, #4]
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	3b01      	subs	r3, #1
 8004524:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004528:	d301      	bcc.n	800452e <SysTick_Config+0x16>
 800452a:	2301      	movs	r3, #1
 800452c:	e00f      	b.n	800454e <SysTick_Config+0x36>
 800452e:	4a0a      	ldr	r2, [pc, #40]	; (8004558 <SysTick_Config+0x40>)
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	3b01      	subs	r3, #1
 8004534:	6053      	str	r3, [r2, #4]
 8004536:	210f      	movs	r1, #15
 8004538:	f04f 30ff 	mov.w	r0, #4294967295
 800453c:	f7ff ff8e 	bl	800445c <__NVIC_SetPriority>
 8004540:	4b05      	ldr	r3, [pc, #20]	; (8004558 <SysTick_Config+0x40>)
 8004542:	2200      	movs	r2, #0
 8004544:	609a      	str	r2, [r3, #8]
 8004546:	4b04      	ldr	r3, [pc, #16]	; (8004558 <SysTick_Config+0x40>)
 8004548:	2207      	movs	r2, #7
 800454a:	601a      	str	r2, [r3, #0]
 800454c:	2300      	movs	r3, #0
 800454e:	4618      	mov	r0, r3
 8004550:	3708      	adds	r7, #8
 8004552:	46bd      	mov	sp, r7
 8004554:	bd80      	pop	{r7, pc}
 8004556:	bf00      	nop
 8004558:	e000e010 	.word	0xe000e010

0800455c <HAL_NVIC_SetPriorityGrouping>:
 800455c:	b580      	push	{r7, lr}
 800455e:	b082      	sub	sp, #8
 8004560:	af00      	add	r7, sp, #0
 8004562:	6078      	str	r0, [r7, #4]
 8004564:	6878      	ldr	r0, [r7, #4]
 8004566:	f7ff ff29 	bl	80043bc <__NVIC_SetPriorityGrouping>
 800456a:	bf00      	nop
 800456c:	3708      	adds	r7, #8
 800456e:	46bd      	mov	sp, r7
 8004570:	bd80      	pop	{r7, pc}

08004572 <HAL_NVIC_SetPriority>:
 8004572:	b580      	push	{r7, lr}
 8004574:	b086      	sub	sp, #24
 8004576:	af00      	add	r7, sp, #0
 8004578:	4603      	mov	r3, r0
 800457a:	60b9      	str	r1, [r7, #8]
 800457c:	607a      	str	r2, [r7, #4]
 800457e:	73fb      	strb	r3, [r7, #15]
 8004580:	2300      	movs	r3, #0
 8004582:	617b      	str	r3, [r7, #20]
 8004584:	f7ff ff3e 	bl	8004404 <__NVIC_GetPriorityGrouping>
 8004588:	6178      	str	r0, [r7, #20]
 800458a:	687a      	ldr	r2, [r7, #4]
 800458c:	68b9      	ldr	r1, [r7, #8]
 800458e:	6978      	ldr	r0, [r7, #20]
 8004590:	f7ff ff8e 	bl	80044b0 <NVIC_EncodePriority>
 8004594:	4602      	mov	r2, r0
 8004596:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800459a:	4611      	mov	r1, r2
 800459c:	4618      	mov	r0, r3
 800459e:	f7ff ff5d 	bl	800445c <__NVIC_SetPriority>
 80045a2:	bf00      	nop
 80045a4:	3718      	adds	r7, #24
 80045a6:	46bd      	mov	sp, r7
 80045a8:	bd80      	pop	{r7, pc}

080045aa <HAL_NVIC_EnableIRQ>:
 80045aa:	b580      	push	{r7, lr}
 80045ac:	b082      	sub	sp, #8
 80045ae:	af00      	add	r7, sp, #0
 80045b0:	4603      	mov	r3, r0
 80045b2:	71fb      	strb	r3, [r7, #7]
 80045b4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80045b8:	4618      	mov	r0, r3
 80045ba:	f7ff ff31 	bl	8004420 <__NVIC_EnableIRQ>
 80045be:	bf00      	nop
 80045c0:	3708      	adds	r7, #8
 80045c2:	46bd      	mov	sp, r7
 80045c4:	bd80      	pop	{r7, pc}

080045c6 <HAL_SYSTICK_Config>:
 80045c6:	b580      	push	{r7, lr}
 80045c8:	b082      	sub	sp, #8
 80045ca:	af00      	add	r7, sp, #0
 80045cc:	6078      	str	r0, [r7, #4]
 80045ce:	6878      	ldr	r0, [r7, #4]
 80045d0:	f7ff ffa2 	bl	8004518 <SysTick_Config>
 80045d4:	4603      	mov	r3, r0
 80045d6:	4618      	mov	r0, r3
 80045d8:	3708      	adds	r7, #8
 80045da:	46bd      	mov	sp, r7
 80045dc:	bd80      	pop	{r7, pc}
	...

080045e0 <HAL_GPIO_Init>:
 80045e0:	b480      	push	{r7}
 80045e2:	b087      	sub	sp, #28
 80045e4:	af00      	add	r7, sp, #0
 80045e6:	6078      	str	r0, [r7, #4]
 80045e8:	6039      	str	r1, [r7, #0]
 80045ea:	2300      	movs	r3, #0
 80045ec:	617b      	str	r3, [r7, #20]
 80045ee:	e154      	b.n	800489a <HAL_GPIO_Init+0x2ba>
 80045f0:	683b      	ldr	r3, [r7, #0]
 80045f2:	681a      	ldr	r2, [r3, #0]
 80045f4:	2101      	movs	r1, #1
 80045f6:	697b      	ldr	r3, [r7, #20]
 80045f8:	fa01 f303 	lsl.w	r3, r1, r3
 80045fc:	4013      	ands	r3, r2
 80045fe:	60fb      	str	r3, [r7, #12]
 8004600:	68fb      	ldr	r3, [r7, #12]
 8004602:	2b00      	cmp	r3, #0
 8004604:	f000 8146 	beq.w	8004894 <HAL_GPIO_Init+0x2b4>
 8004608:	683b      	ldr	r3, [r7, #0]
 800460a:	685b      	ldr	r3, [r3, #4]
 800460c:	f003 0303 	and.w	r3, r3, #3
 8004610:	2b01      	cmp	r3, #1
 8004612:	d005      	beq.n	8004620 <HAL_GPIO_Init+0x40>
 8004614:	683b      	ldr	r3, [r7, #0]
 8004616:	685b      	ldr	r3, [r3, #4]
 8004618:	f003 0303 	and.w	r3, r3, #3
 800461c:	2b02      	cmp	r3, #2
 800461e:	d130      	bne.n	8004682 <HAL_GPIO_Init+0xa2>
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	689b      	ldr	r3, [r3, #8]
 8004624:	613b      	str	r3, [r7, #16]
 8004626:	697b      	ldr	r3, [r7, #20]
 8004628:	005b      	lsls	r3, r3, #1
 800462a:	2203      	movs	r2, #3
 800462c:	fa02 f303 	lsl.w	r3, r2, r3
 8004630:	43db      	mvns	r3, r3
 8004632:	693a      	ldr	r2, [r7, #16]
 8004634:	4013      	ands	r3, r2
 8004636:	613b      	str	r3, [r7, #16]
 8004638:	683b      	ldr	r3, [r7, #0]
 800463a:	68da      	ldr	r2, [r3, #12]
 800463c:	697b      	ldr	r3, [r7, #20]
 800463e:	005b      	lsls	r3, r3, #1
 8004640:	fa02 f303 	lsl.w	r3, r2, r3
 8004644:	693a      	ldr	r2, [r7, #16]
 8004646:	4313      	orrs	r3, r2
 8004648:	613b      	str	r3, [r7, #16]
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	693a      	ldr	r2, [r7, #16]
 800464e:	609a      	str	r2, [r3, #8]
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	685b      	ldr	r3, [r3, #4]
 8004654:	613b      	str	r3, [r7, #16]
 8004656:	2201      	movs	r2, #1
 8004658:	697b      	ldr	r3, [r7, #20]
 800465a:	fa02 f303 	lsl.w	r3, r2, r3
 800465e:	43db      	mvns	r3, r3
 8004660:	693a      	ldr	r2, [r7, #16]
 8004662:	4013      	ands	r3, r2
 8004664:	613b      	str	r3, [r7, #16]
 8004666:	683b      	ldr	r3, [r7, #0]
 8004668:	685b      	ldr	r3, [r3, #4]
 800466a:	091b      	lsrs	r3, r3, #4
 800466c:	f003 0201 	and.w	r2, r3, #1
 8004670:	697b      	ldr	r3, [r7, #20]
 8004672:	fa02 f303 	lsl.w	r3, r2, r3
 8004676:	693a      	ldr	r2, [r7, #16]
 8004678:	4313      	orrs	r3, r2
 800467a:	613b      	str	r3, [r7, #16]
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	693a      	ldr	r2, [r7, #16]
 8004680:	605a      	str	r2, [r3, #4]
 8004682:	683b      	ldr	r3, [r7, #0]
 8004684:	685b      	ldr	r3, [r3, #4]
 8004686:	f003 0303 	and.w	r3, r3, #3
 800468a:	2b03      	cmp	r3, #3
 800468c:	d017      	beq.n	80046be <HAL_GPIO_Init+0xde>
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	68db      	ldr	r3, [r3, #12]
 8004692:	613b      	str	r3, [r7, #16]
 8004694:	697b      	ldr	r3, [r7, #20]
 8004696:	005b      	lsls	r3, r3, #1
 8004698:	2203      	movs	r2, #3
 800469a:	fa02 f303 	lsl.w	r3, r2, r3
 800469e:	43db      	mvns	r3, r3
 80046a0:	693a      	ldr	r2, [r7, #16]
 80046a2:	4013      	ands	r3, r2
 80046a4:	613b      	str	r3, [r7, #16]
 80046a6:	683b      	ldr	r3, [r7, #0]
 80046a8:	689a      	ldr	r2, [r3, #8]
 80046aa:	697b      	ldr	r3, [r7, #20]
 80046ac:	005b      	lsls	r3, r3, #1
 80046ae:	fa02 f303 	lsl.w	r3, r2, r3
 80046b2:	693a      	ldr	r2, [r7, #16]
 80046b4:	4313      	orrs	r3, r2
 80046b6:	613b      	str	r3, [r7, #16]
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	693a      	ldr	r2, [r7, #16]
 80046bc:	60da      	str	r2, [r3, #12]
 80046be:	683b      	ldr	r3, [r7, #0]
 80046c0:	685b      	ldr	r3, [r3, #4]
 80046c2:	f003 0303 	and.w	r3, r3, #3
 80046c6:	2b02      	cmp	r3, #2
 80046c8:	d123      	bne.n	8004712 <HAL_GPIO_Init+0x132>
 80046ca:	697b      	ldr	r3, [r7, #20]
 80046cc:	08da      	lsrs	r2, r3, #3
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	3208      	adds	r2, #8
 80046d2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80046d6:	613b      	str	r3, [r7, #16]
 80046d8:	697b      	ldr	r3, [r7, #20]
 80046da:	f003 0307 	and.w	r3, r3, #7
 80046de:	009b      	lsls	r3, r3, #2
 80046e0:	220f      	movs	r2, #15
 80046e2:	fa02 f303 	lsl.w	r3, r2, r3
 80046e6:	43db      	mvns	r3, r3
 80046e8:	693a      	ldr	r2, [r7, #16]
 80046ea:	4013      	ands	r3, r2
 80046ec:	613b      	str	r3, [r7, #16]
 80046ee:	683b      	ldr	r3, [r7, #0]
 80046f0:	691a      	ldr	r2, [r3, #16]
 80046f2:	697b      	ldr	r3, [r7, #20]
 80046f4:	f003 0307 	and.w	r3, r3, #7
 80046f8:	009b      	lsls	r3, r3, #2
 80046fa:	fa02 f303 	lsl.w	r3, r2, r3
 80046fe:	693a      	ldr	r2, [r7, #16]
 8004700:	4313      	orrs	r3, r2
 8004702:	613b      	str	r3, [r7, #16]
 8004704:	697b      	ldr	r3, [r7, #20]
 8004706:	08da      	lsrs	r2, r3, #3
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	3208      	adds	r2, #8
 800470c:	6939      	ldr	r1, [r7, #16]
 800470e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	613b      	str	r3, [r7, #16]
 8004718:	697b      	ldr	r3, [r7, #20]
 800471a:	005b      	lsls	r3, r3, #1
 800471c:	2203      	movs	r2, #3
 800471e:	fa02 f303 	lsl.w	r3, r2, r3
 8004722:	43db      	mvns	r3, r3
 8004724:	693a      	ldr	r2, [r7, #16]
 8004726:	4013      	ands	r3, r2
 8004728:	613b      	str	r3, [r7, #16]
 800472a:	683b      	ldr	r3, [r7, #0]
 800472c:	685b      	ldr	r3, [r3, #4]
 800472e:	f003 0203 	and.w	r2, r3, #3
 8004732:	697b      	ldr	r3, [r7, #20]
 8004734:	005b      	lsls	r3, r3, #1
 8004736:	fa02 f303 	lsl.w	r3, r2, r3
 800473a:	693a      	ldr	r2, [r7, #16]
 800473c:	4313      	orrs	r3, r2
 800473e:	613b      	str	r3, [r7, #16]
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	693a      	ldr	r2, [r7, #16]
 8004744:	601a      	str	r2, [r3, #0]
 8004746:	683b      	ldr	r3, [r7, #0]
 8004748:	685b      	ldr	r3, [r3, #4]
 800474a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800474e:	2b00      	cmp	r3, #0
 8004750:	f000 80a0 	beq.w	8004894 <HAL_GPIO_Init+0x2b4>
 8004754:	4b58      	ldr	r3, [pc, #352]	; (80048b8 <HAL_GPIO_Init+0x2d8>)
 8004756:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004758:	4a57      	ldr	r2, [pc, #348]	; (80048b8 <HAL_GPIO_Init+0x2d8>)
 800475a:	f043 0301 	orr.w	r3, r3, #1
 800475e:	6613      	str	r3, [r2, #96]	; 0x60
 8004760:	4b55      	ldr	r3, [pc, #340]	; (80048b8 <HAL_GPIO_Init+0x2d8>)
 8004762:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004764:	f003 0301 	and.w	r3, r3, #1
 8004768:	60bb      	str	r3, [r7, #8]
 800476a:	68bb      	ldr	r3, [r7, #8]
 800476c:	4a53      	ldr	r2, [pc, #332]	; (80048bc <HAL_GPIO_Init+0x2dc>)
 800476e:	697b      	ldr	r3, [r7, #20]
 8004770:	089b      	lsrs	r3, r3, #2
 8004772:	3302      	adds	r3, #2
 8004774:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004778:	613b      	str	r3, [r7, #16]
 800477a:	697b      	ldr	r3, [r7, #20]
 800477c:	f003 0303 	and.w	r3, r3, #3
 8004780:	009b      	lsls	r3, r3, #2
 8004782:	220f      	movs	r2, #15
 8004784:	fa02 f303 	lsl.w	r3, r2, r3
 8004788:	43db      	mvns	r3, r3
 800478a:	693a      	ldr	r2, [r7, #16]
 800478c:	4013      	ands	r3, r2
 800478e:	613b      	str	r3, [r7, #16]
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8004796:	d019      	beq.n	80047cc <HAL_GPIO_Init+0x1ec>
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	4a49      	ldr	r2, [pc, #292]	; (80048c0 <HAL_GPIO_Init+0x2e0>)
 800479c:	4293      	cmp	r3, r2
 800479e:	d013      	beq.n	80047c8 <HAL_GPIO_Init+0x1e8>
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	4a48      	ldr	r2, [pc, #288]	; (80048c4 <HAL_GPIO_Init+0x2e4>)
 80047a4:	4293      	cmp	r3, r2
 80047a6:	d00d      	beq.n	80047c4 <HAL_GPIO_Init+0x1e4>
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	4a47      	ldr	r2, [pc, #284]	; (80048c8 <HAL_GPIO_Init+0x2e8>)
 80047ac:	4293      	cmp	r3, r2
 80047ae:	d007      	beq.n	80047c0 <HAL_GPIO_Init+0x1e0>
 80047b0:	687b      	ldr	r3, [r7, #4]
 80047b2:	4a46      	ldr	r2, [pc, #280]	; (80048cc <HAL_GPIO_Init+0x2ec>)
 80047b4:	4293      	cmp	r3, r2
 80047b6:	d101      	bne.n	80047bc <HAL_GPIO_Init+0x1dc>
 80047b8:	2304      	movs	r3, #4
 80047ba:	e008      	b.n	80047ce <HAL_GPIO_Init+0x1ee>
 80047bc:	2307      	movs	r3, #7
 80047be:	e006      	b.n	80047ce <HAL_GPIO_Init+0x1ee>
 80047c0:	2303      	movs	r3, #3
 80047c2:	e004      	b.n	80047ce <HAL_GPIO_Init+0x1ee>
 80047c4:	2302      	movs	r3, #2
 80047c6:	e002      	b.n	80047ce <HAL_GPIO_Init+0x1ee>
 80047c8:	2301      	movs	r3, #1
 80047ca:	e000      	b.n	80047ce <HAL_GPIO_Init+0x1ee>
 80047cc:	2300      	movs	r3, #0
 80047ce:	697a      	ldr	r2, [r7, #20]
 80047d0:	f002 0203 	and.w	r2, r2, #3
 80047d4:	0092      	lsls	r2, r2, #2
 80047d6:	4093      	lsls	r3, r2
 80047d8:	693a      	ldr	r2, [r7, #16]
 80047da:	4313      	orrs	r3, r2
 80047dc:	613b      	str	r3, [r7, #16]
 80047de:	4937      	ldr	r1, [pc, #220]	; (80048bc <HAL_GPIO_Init+0x2dc>)
 80047e0:	697b      	ldr	r3, [r7, #20]
 80047e2:	089b      	lsrs	r3, r3, #2
 80047e4:	3302      	adds	r3, #2
 80047e6:	693a      	ldr	r2, [r7, #16]
 80047e8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80047ec:	4b38      	ldr	r3, [pc, #224]	; (80048d0 <HAL_GPIO_Init+0x2f0>)
 80047ee:	689b      	ldr	r3, [r3, #8]
 80047f0:	613b      	str	r3, [r7, #16]
 80047f2:	68fb      	ldr	r3, [r7, #12]
 80047f4:	43db      	mvns	r3, r3
 80047f6:	693a      	ldr	r2, [r7, #16]
 80047f8:	4013      	ands	r3, r2
 80047fa:	613b      	str	r3, [r7, #16]
 80047fc:	683b      	ldr	r3, [r7, #0]
 80047fe:	685b      	ldr	r3, [r3, #4]
 8004800:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004804:	2b00      	cmp	r3, #0
 8004806:	d003      	beq.n	8004810 <HAL_GPIO_Init+0x230>
 8004808:	693a      	ldr	r2, [r7, #16]
 800480a:	68fb      	ldr	r3, [r7, #12]
 800480c:	4313      	orrs	r3, r2
 800480e:	613b      	str	r3, [r7, #16]
 8004810:	4a2f      	ldr	r2, [pc, #188]	; (80048d0 <HAL_GPIO_Init+0x2f0>)
 8004812:	693b      	ldr	r3, [r7, #16]
 8004814:	6093      	str	r3, [r2, #8]
 8004816:	4b2e      	ldr	r3, [pc, #184]	; (80048d0 <HAL_GPIO_Init+0x2f0>)
 8004818:	68db      	ldr	r3, [r3, #12]
 800481a:	613b      	str	r3, [r7, #16]
 800481c:	68fb      	ldr	r3, [r7, #12]
 800481e:	43db      	mvns	r3, r3
 8004820:	693a      	ldr	r2, [r7, #16]
 8004822:	4013      	ands	r3, r2
 8004824:	613b      	str	r3, [r7, #16]
 8004826:	683b      	ldr	r3, [r7, #0]
 8004828:	685b      	ldr	r3, [r3, #4]
 800482a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800482e:	2b00      	cmp	r3, #0
 8004830:	d003      	beq.n	800483a <HAL_GPIO_Init+0x25a>
 8004832:	693a      	ldr	r2, [r7, #16]
 8004834:	68fb      	ldr	r3, [r7, #12]
 8004836:	4313      	orrs	r3, r2
 8004838:	613b      	str	r3, [r7, #16]
 800483a:	4a25      	ldr	r2, [pc, #148]	; (80048d0 <HAL_GPIO_Init+0x2f0>)
 800483c:	693b      	ldr	r3, [r7, #16]
 800483e:	60d3      	str	r3, [r2, #12]
 8004840:	4b23      	ldr	r3, [pc, #140]	; (80048d0 <HAL_GPIO_Init+0x2f0>)
 8004842:	685b      	ldr	r3, [r3, #4]
 8004844:	613b      	str	r3, [r7, #16]
 8004846:	68fb      	ldr	r3, [r7, #12]
 8004848:	43db      	mvns	r3, r3
 800484a:	693a      	ldr	r2, [r7, #16]
 800484c:	4013      	ands	r3, r2
 800484e:	613b      	str	r3, [r7, #16]
 8004850:	683b      	ldr	r3, [r7, #0]
 8004852:	685b      	ldr	r3, [r3, #4]
 8004854:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004858:	2b00      	cmp	r3, #0
 800485a:	d003      	beq.n	8004864 <HAL_GPIO_Init+0x284>
 800485c:	693a      	ldr	r2, [r7, #16]
 800485e:	68fb      	ldr	r3, [r7, #12]
 8004860:	4313      	orrs	r3, r2
 8004862:	613b      	str	r3, [r7, #16]
 8004864:	4a1a      	ldr	r2, [pc, #104]	; (80048d0 <HAL_GPIO_Init+0x2f0>)
 8004866:	693b      	ldr	r3, [r7, #16]
 8004868:	6053      	str	r3, [r2, #4]
 800486a:	4b19      	ldr	r3, [pc, #100]	; (80048d0 <HAL_GPIO_Init+0x2f0>)
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	613b      	str	r3, [r7, #16]
 8004870:	68fb      	ldr	r3, [r7, #12]
 8004872:	43db      	mvns	r3, r3
 8004874:	693a      	ldr	r2, [r7, #16]
 8004876:	4013      	ands	r3, r2
 8004878:	613b      	str	r3, [r7, #16]
 800487a:	683b      	ldr	r3, [r7, #0]
 800487c:	685b      	ldr	r3, [r3, #4]
 800487e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004882:	2b00      	cmp	r3, #0
 8004884:	d003      	beq.n	800488e <HAL_GPIO_Init+0x2ae>
 8004886:	693a      	ldr	r2, [r7, #16]
 8004888:	68fb      	ldr	r3, [r7, #12]
 800488a:	4313      	orrs	r3, r2
 800488c:	613b      	str	r3, [r7, #16]
 800488e:	4a10      	ldr	r2, [pc, #64]	; (80048d0 <HAL_GPIO_Init+0x2f0>)
 8004890:	693b      	ldr	r3, [r7, #16]
 8004892:	6013      	str	r3, [r2, #0]
 8004894:	697b      	ldr	r3, [r7, #20]
 8004896:	3301      	adds	r3, #1
 8004898:	617b      	str	r3, [r7, #20]
 800489a:	683b      	ldr	r3, [r7, #0]
 800489c:	681a      	ldr	r2, [r3, #0]
 800489e:	697b      	ldr	r3, [r7, #20]
 80048a0:	fa22 f303 	lsr.w	r3, r2, r3
 80048a4:	2b00      	cmp	r3, #0
 80048a6:	f47f aea3 	bne.w	80045f0 <HAL_GPIO_Init+0x10>
 80048aa:	bf00      	nop
 80048ac:	bf00      	nop
 80048ae:	371c      	adds	r7, #28
 80048b0:	46bd      	mov	sp, r7
 80048b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048b6:	4770      	bx	lr
 80048b8:	40021000 	.word	0x40021000
 80048bc:	40010000 	.word	0x40010000
 80048c0:	48000400 	.word	0x48000400
 80048c4:	48000800 	.word	0x48000800
 80048c8:	48000c00 	.word	0x48000c00
 80048cc:	48001000 	.word	0x48001000
 80048d0:	40010400 	.word	0x40010400

080048d4 <HAL_GPIO_ReadPin>:
 80048d4:	b480      	push	{r7}
 80048d6:	b085      	sub	sp, #20
 80048d8:	af00      	add	r7, sp, #0
 80048da:	6078      	str	r0, [r7, #4]
 80048dc:	460b      	mov	r3, r1
 80048de:	807b      	strh	r3, [r7, #2]
 80048e0:	687b      	ldr	r3, [r7, #4]
 80048e2:	691a      	ldr	r2, [r3, #16]
 80048e4:	887b      	ldrh	r3, [r7, #2]
 80048e6:	4013      	ands	r3, r2
 80048e8:	2b00      	cmp	r3, #0
 80048ea:	d002      	beq.n	80048f2 <HAL_GPIO_ReadPin+0x1e>
 80048ec:	2301      	movs	r3, #1
 80048ee:	73fb      	strb	r3, [r7, #15]
 80048f0:	e001      	b.n	80048f6 <HAL_GPIO_ReadPin+0x22>
 80048f2:	2300      	movs	r3, #0
 80048f4:	73fb      	strb	r3, [r7, #15]
 80048f6:	7bfb      	ldrb	r3, [r7, #15]
 80048f8:	4618      	mov	r0, r3
 80048fa:	3714      	adds	r7, #20
 80048fc:	46bd      	mov	sp, r7
 80048fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004902:	4770      	bx	lr

08004904 <HAL_GPIO_WritePin>:
 8004904:	b480      	push	{r7}
 8004906:	b083      	sub	sp, #12
 8004908:	af00      	add	r7, sp, #0
 800490a:	6078      	str	r0, [r7, #4]
 800490c:	460b      	mov	r3, r1
 800490e:	807b      	strh	r3, [r7, #2]
 8004910:	4613      	mov	r3, r2
 8004912:	707b      	strb	r3, [r7, #1]
 8004914:	787b      	ldrb	r3, [r7, #1]
 8004916:	2b00      	cmp	r3, #0
 8004918:	d003      	beq.n	8004922 <HAL_GPIO_WritePin+0x1e>
 800491a:	887a      	ldrh	r2, [r7, #2]
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	619a      	str	r2, [r3, #24]
 8004920:	e002      	b.n	8004928 <HAL_GPIO_WritePin+0x24>
 8004922:	887a      	ldrh	r2, [r7, #2]
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	629a      	str	r2, [r3, #40]	; 0x28
 8004928:	bf00      	nop
 800492a:	370c      	adds	r7, #12
 800492c:	46bd      	mov	sp, r7
 800492e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004932:	4770      	bx	lr

08004934 <HAL_GPIO_EXTI_IRQHandler>:
 8004934:	b580      	push	{r7, lr}
 8004936:	b082      	sub	sp, #8
 8004938:	af00      	add	r7, sp, #0
 800493a:	4603      	mov	r3, r0
 800493c:	80fb      	strh	r3, [r7, #6]
 800493e:	4b08      	ldr	r3, [pc, #32]	; (8004960 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004940:	695a      	ldr	r2, [r3, #20]
 8004942:	88fb      	ldrh	r3, [r7, #6]
 8004944:	4013      	ands	r3, r2
 8004946:	2b00      	cmp	r3, #0
 8004948:	d006      	beq.n	8004958 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800494a:	4a05      	ldr	r2, [pc, #20]	; (8004960 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800494c:	88fb      	ldrh	r3, [r7, #6]
 800494e:	6153      	str	r3, [r2, #20]
 8004950:	88fb      	ldrh	r3, [r7, #6]
 8004952:	4618      	mov	r0, r3
 8004954:	f7fc fd32 	bl	80013bc <HAL_GPIO_EXTI_Callback>
 8004958:	bf00      	nop
 800495a:	3708      	adds	r7, #8
 800495c:	46bd      	mov	sp, r7
 800495e:	bd80      	pop	{r7, pc}
 8004960:	40010400 	.word	0x40010400

08004964 <HAL_I2C_Init>:
 8004964:	b580      	push	{r7, lr}
 8004966:	b082      	sub	sp, #8
 8004968:	af00      	add	r7, sp, #0
 800496a:	6078      	str	r0, [r7, #4]
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	2b00      	cmp	r3, #0
 8004970:	d101      	bne.n	8004976 <HAL_I2C_Init+0x12>
 8004972:	2301      	movs	r3, #1
 8004974:	e081      	b.n	8004a7a <HAL_I2C_Init+0x116>
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800497c:	b2db      	uxtb	r3, r3
 800497e:	2b00      	cmp	r3, #0
 8004980:	d106      	bne.n	8004990 <HAL_I2C_Init+0x2c>
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	2200      	movs	r2, #0
 8004986:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800498a:	6878      	ldr	r0, [r7, #4]
 800498c:	f7fd ff80 	bl	8002890 <HAL_I2C_MspInit>
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	2224      	movs	r2, #36	; 0x24
 8004994:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	681a      	ldr	r2, [r3, #0]
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	681b      	ldr	r3, [r3, #0]
 80049a2:	f022 0201 	bic.w	r2, r2, #1
 80049a6:	601a      	str	r2, [r3, #0]
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	685a      	ldr	r2, [r3, #4]
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80049b4:	611a      	str	r2, [r3, #16]
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	689a      	ldr	r2, [r3, #8]
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	681b      	ldr	r3, [r3, #0]
 80049c0:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80049c4:	609a      	str	r2, [r3, #8]
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	68db      	ldr	r3, [r3, #12]
 80049ca:	2b01      	cmp	r3, #1
 80049cc:	d107      	bne.n	80049de <HAL_I2C_Init+0x7a>
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	689a      	ldr	r2, [r3, #8]
 80049d2:	687b      	ldr	r3, [r7, #4]
 80049d4:	681b      	ldr	r3, [r3, #0]
 80049d6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80049da:	609a      	str	r2, [r3, #8]
 80049dc:	e006      	b.n	80049ec <HAL_I2C_Init+0x88>
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	689a      	ldr	r2, [r3, #8]
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 80049ea:	609a      	str	r2, [r3, #8]
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	68db      	ldr	r3, [r3, #12]
 80049f0:	2b02      	cmp	r3, #2
 80049f2:	d104      	bne.n	80049fe <HAL_I2C_Init+0x9a>
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	681b      	ldr	r3, [r3, #0]
 80049f8:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80049fc:	605a      	str	r2, [r3, #4]
 80049fe:	687b      	ldr	r3, [r7, #4]
 8004a00:	681b      	ldr	r3, [r3, #0]
 8004a02:	685b      	ldr	r3, [r3, #4]
 8004a04:	687a      	ldr	r2, [r7, #4]
 8004a06:	6812      	ldr	r2, [r2, #0]
 8004a08:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8004a0c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004a10:	6053      	str	r3, [r2, #4]
 8004a12:	687b      	ldr	r3, [r7, #4]
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	68da      	ldr	r2, [r3, #12]
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	681b      	ldr	r3, [r3, #0]
 8004a1c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004a20:	60da      	str	r2, [r3, #12]
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	691a      	ldr	r2, [r3, #16]
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	695b      	ldr	r3, [r3, #20]
 8004a2a:	ea42 0103 	orr.w	r1, r2, r3
 8004a2e:	687b      	ldr	r3, [r7, #4]
 8004a30:	699b      	ldr	r3, [r3, #24]
 8004a32:	021a      	lsls	r2, r3, #8
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	681b      	ldr	r3, [r3, #0]
 8004a38:	430a      	orrs	r2, r1
 8004a3a:	60da      	str	r2, [r3, #12]
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	69d9      	ldr	r1, [r3, #28]
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	6a1a      	ldr	r2, [r3, #32]
 8004a44:	687b      	ldr	r3, [r7, #4]
 8004a46:	681b      	ldr	r3, [r3, #0]
 8004a48:	430a      	orrs	r2, r1
 8004a4a:	601a      	str	r2, [r3, #0]
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	681a      	ldr	r2, [r3, #0]
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	f042 0201 	orr.w	r2, r2, #1
 8004a5a:	601a      	str	r2, [r3, #0]
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	2200      	movs	r2, #0
 8004a60:	645a      	str	r2, [r3, #68]	; 0x44
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	2220      	movs	r2, #32
 8004a66:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004a6a:	687b      	ldr	r3, [r7, #4]
 8004a6c:	2200      	movs	r2, #0
 8004a6e:	631a      	str	r2, [r3, #48]	; 0x30
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	2200      	movs	r2, #0
 8004a74:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004a78:	2300      	movs	r3, #0
 8004a7a:	4618      	mov	r0, r3
 8004a7c:	3708      	adds	r7, #8
 8004a7e:	46bd      	mov	sp, r7
 8004a80:	bd80      	pop	{r7, pc}
	...

08004a84 <HAL_I2C_Mem_Write>:
 8004a84:	b580      	push	{r7, lr}
 8004a86:	b088      	sub	sp, #32
 8004a88:	af02      	add	r7, sp, #8
 8004a8a:	60f8      	str	r0, [r7, #12]
 8004a8c:	4608      	mov	r0, r1
 8004a8e:	4611      	mov	r1, r2
 8004a90:	461a      	mov	r2, r3
 8004a92:	4603      	mov	r3, r0
 8004a94:	817b      	strh	r3, [r7, #10]
 8004a96:	460b      	mov	r3, r1
 8004a98:	813b      	strh	r3, [r7, #8]
 8004a9a:	4613      	mov	r3, r2
 8004a9c:	80fb      	strh	r3, [r7, #6]
 8004a9e:	68fb      	ldr	r3, [r7, #12]
 8004aa0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004aa4:	b2db      	uxtb	r3, r3
 8004aa6:	2b20      	cmp	r3, #32
 8004aa8:	f040 80f9 	bne.w	8004c9e <HAL_I2C_Mem_Write+0x21a>
 8004aac:	6a3b      	ldr	r3, [r7, #32]
 8004aae:	2b00      	cmp	r3, #0
 8004ab0:	d002      	beq.n	8004ab8 <HAL_I2C_Mem_Write+0x34>
 8004ab2:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8004ab4:	2b00      	cmp	r3, #0
 8004ab6:	d105      	bne.n	8004ac4 <HAL_I2C_Mem_Write+0x40>
 8004ab8:	68fb      	ldr	r3, [r7, #12]
 8004aba:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004abe:	645a      	str	r2, [r3, #68]	; 0x44
 8004ac0:	2301      	movs	r3, #1
 8004ac2:	e0ed      	b.n	8004ca0 <HAL_I2C_Mem_Write+0x21c>
 8004ac4:	68fb      	ldr	r3, [r7, #12]
 8004ac6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004aca:	2b01      	cmp	r3, #1
 8004acc:	d101      	bne.n	8004ad2 <HAL_I2C_Mem_Write+0x4e>
 8004ace:	2302      	movs	r3, #2
 8004ad0:	e0e6      	b.n	8004ca0 <HAL_I2C_Mem_Write+0x21c>
 8004ad2:	68fb      	ldr	r3, [r7, #12]
 8004ad4:	2201      	movs	r2, #1
 8004ad6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004ada:	f7fe f991 	bl	8002e00 <HAL_GetTick>
 8004ade:	6178      	str	r0, [r7, #20]
 8004ae0:	697b      	ldr	r3, [r7, #20]
 8004ae2:	9300      	str	r3, [sp, #0]
 8004ae4:	2319      	movs	r3, #25
 8004ae6:	2201      	movs	r2, #1
 8004ae8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004aec:	68f8      	ldr	r0, [r7, #12]
 8004aee:	f000 fac3 	bl	8005078 <I2C_WaitOnFlagUntilTimeout>
 8004af2:	4603      	mov	r3, r0
 8004af4:	2b00      	cmp	r3, #0
 8004af6:	d001      	beq.n	8004afc <HAL_I2C_Mem_Write+0x78>
 8004af8:	2301      	movs	r3, #1
 8004afa:	e0d1      	b.n	8004ca0 <HAL_I2C_Mem_Write+0x21c>
 8004afc:	68fb      	ldr	r3, [r7, #12]
 8004afe:	2221      	movs	r2, #33	; 0x21
 8004b00:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004b04:	68fb      	ldr	r3, [r7, #12]
 8004b06:	2240      	movs	r2, #64	; 0x40
 8004b08:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004b0c:	68fb      	ldr	r3, [r7, #12]
 8004b0e:	2200      	movs	r2, #0
 8004b10:	645a      	str	r2, [r3, #68]	; 0x44
 8004b12:	68fb      	ldr	r3, [r7, #12]
 8004b14:	6a3a      	ldr	r2, [r7, #32]
 8004b16:	625a      	str	r2, [r3, #36]	; 0x24
 8004b18:	68fb      	ldr	r3, [r7, #12]
 8004b1a:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8004b1c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004b1e:	68fb      	ldr	r3, [r7, #12]
 8004b20:	2200      	movs	r2, #0
 8004b22:	635a      	str	r2, [r3, #52]	; 0x34
 8004b24:	88f8      	ldrh	r0, [r7, #6]
 8004b26:	893a      	ldrh	r2, [r7, #8]
 8004b28:	8979      	ldrh	r1, [r7, #10]
 8004b2a:	697b      	ldr	r3, [r7, #20]
 8004b2c:	9301      	str	r3, [sp, #4]
 8004b2e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b30:	9300      	str	r3, [sp, #0]
 8004b32:	4603      	mov	r3, r0
 8004b34:	68f8      	ldr	r0, [r7, #12]
 8004b36:	f000 f9d3 	bl	8004ee0 <I2C_RequestMemoryWrite>
 8004b3a:	4603      	mov	r3, r0
 8004b3c:	2b00      	cmp	r3, #0
 8004b3e:	d005      	beq.n	8004b4c <HAL_I2C_Mem_Write+0xc8>
 8004b40:	68fb      	ldr	r3, [r7, #12]
 8004b42:	2200      	movs	r2, #0
 8004b44:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004b48:	2301      	movs	r3, #1
 8004b4a:	e0a9      	b.n	8004ca0 <HAL_I2C_Mem_Write+0x21c>
 8004b4c:	68fb      	ldr	r3, [r7, #12]
 8004b4e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004b50:	b29b      	uxth	r3, r3
 8004b52:	2bff      	cmp	r3, #255	; 0xff
 8004b54:	d90e      	bls.n	8004b74 <HAL_I2C_Mem_Write+0xf0>
 8004b56:	68fb      	ldr	r3, [r7, #12]
 8004b58:	22ff      	movs	r2, #255	; 0xff
 8004b5a:	851a      	strh	r2, [r3, #40]	; 0x28
 8004b5c:	68fb      	ldr	r3, [r7, #12]
 8004b5e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004b60:	b2da      	uxtb	r2, r3
 8004b62:	8979      	ldrh	r1, [r7, #10]
 8004b64:	2300      	movs	r3, #0
 8004b66:	9300      	str	r3, [sp, #0]
 8004b68:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004b6c:	68f8      	ldr	r0, [r7, #12]
 8004b6e:	f000 fc2b 	bl	80053c8 <I2C_TransferConfig>
 8004b72:	e00f      	b.n	8004b94 <HAL_I2C_Mem_Write+0x110>
 8004b74:	68fb      	ldr	r3, [r7, #12]
 8004b76:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004b78:	b29a      	uxth	r2, r3
 8004b7a:	68fb      	ldr	r3, [r7, #12]
 8004b7c:	851a      	strh	r2, [r3, #40]	; 0x28
 8004b7e:	68fb      	ldr	r3, [r7, #12]
 8004b80:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004b82:	b2da      	uxtb	r2, r3
 8004b84:	8979      	ldrh	r1, [r7, #10]
 8004b86:	2300      	movs	r3, #0
 8004b88:	9300      	str	r3, [sp, #0]
 8004b8a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004b8e:	68f8      	ldr	r0, [r7, #12]
 8004b90:	f000 fc1a 	bl	80053c8 <I2C_TransferConfig>
 8004b94:	697a      	ldr	r2, [r7, #20]
 8004b96:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8004b98:	68f8      	ldr	r0, [r7, #12]
 8004b9a:	f000 faad 	bl	80050f8 <I2C_WaitOnTXISFlagUntilTimeout>
 8004b9e:	4603      	mov	r3, r0
 8004ba0:	2b00      	cmp	r3, #0
 8004ba2:	d001      	beq.n	8004ba8 <HAL_I2C_Mem_Write+0x124>
 8004ba4:	2301      	movs	r3, #1
 8004ba6:	e07b      	b.n	8004ca0 <HAL_I2C_Mem_Write+0x21c>
 8004ba8:	68fb      	ldr	r3, [r7, #12]
 8004baa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bac:	781a      	ldrb	r2, [r3, #0]
 8004bae:	68fb      	ldr	r3, [r7, #12]
 8004bb0:	681b      	ldr	r3, [r3, #0]
 8004bb2:	629a      	str	r2, [r3, #40]	; 0x28
 8004bb4:	68fb      	ldr	r3, [r7, #12]
 8004bb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bb8:	1c5a      	adds	r2, r3, #1
 8004bba:	68fb      	ldr	r3, [r7, #12]
 8004bbc:	625a      	str	r2, [r3, #36]	; 0x24
 8004bbe:	68fb      	ldr	r3, [r7, #12]
 8004bc0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004bc2:	b29b      	uxth	r3, r3
 8004bc4:	3b01      	subs	r3, #1
 8004bc6:	b29a      	uxth	r2, r3
 8004bc8:	68fb      	ldr	r3, [r7, #12]
 8004bca:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004bcc:	68fb      	ldr	r3, [r7, #12]
 8004bce:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004bd0:	3b01      	subs	r3, #1
 8004bd2:	b29a      	uxth	r2, r3
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	851a      	strh	r2, [r3, #40]	; 0x28
 8004bd8:	68fb      	ldr	r3, [r7, #12]
 8004bda:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004bdc:	b29b      	uxth	r3, r3
 8004bde:	2b00      	cmp	r3, #0
 8004be0:	d034      	beq.n	8004c4c <HAL_I2C_Mem_Write+0x1c8>
 8004be2:	68fb      	ldr	r3, [r7, #12]
 8004be4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004be6:	2b00      	cmp	r3, #0
 8004be8:	d130      	bne.n	8004c4c <HAL_I2C_Mem_Write+0x1c8>
 8004bea:	697b      	ldr	r3, [r7, #20]
 8004bec:	9300      	str	r3, [sp, #0]
 8004bee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004bf0:	2200      	movs	r2, #0
 8004bf2:	2180      	movs	r1, #128	; 0x80
 8004bf4:	68f8      	ldr	r0, [r7, #12]
 8004bf6:	f000 fa3f 	bl	8005078 <I2C_WaitOnFlagUntilTimeout>
 8004bfa:	4603      	mov	r3, r0
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	d001      	beq.n	8004c04 <HAL_I2C_Mem_Write+0x180>
 8004c00:	2301      	movs	r3, #1
 8004c02:	e04d      	b.n	8004ca0 <HAL_I2C_Mem_Write+0x21c>
 8004c04:	68fb      	ldr	r3, [r7, #12]
 8004c06:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004c08:	b29b      	uxth	r3, r3
 8004c0a:	2bff      	cmp	r3, #255	; 0xff
 8004c0c:	d90e      	bls.n	8004c2c <HAL_I2C_Mem_Write+0x1a8>
 8004c0e:	68fb      	ldr	r3, [r7, #12]
 8004c10:	22ff      	movs	r2, #255	; 0xff
 8004c12:	851a      	strh	r2, [r3, #40]	; 0x28
 8004c14:	68fb      	ldr	r3, [r7, #12]
 8004c16:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004c18:	b2da      	uxtb	r2, r3
 8004c1a:	8979      	ldrh	r1, [r7, #10]
 8004c1c:	2300      	movs	r3, #0
 8004c1e:	9300      	str	r3, [sp, #0]
 8004c20:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004c24:	68f8      	ldr	r0, [r7, #12]
 8004c26:	f000 fbcf 	bl	80053c8 <I2C_TransferConfig>
 8004c2a:	e00f      	b.n	8004c4c <HAL_I2C_Mem_Write+0x1c8>
 8004c2c:	68fb      	ldr	r3, [r7, #12]
 8004c2e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004c30:	b29a      	uxth	r2, r3
 8004c32:	68fb      	ldr	r3, [r7, #12]
 8004c34:	851a      	strh	r2, [r3, #40]	; 0x28
 8004c36:	68fb      	ldr	r3, [r7, #12]
 8004c38:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004c3a:	b2da      	uxtb	r2, r3
 8004c3c:	8979      	ldrh	r1, [r7, #10]
 8004c3e:	2300      	movs	r3, #0
 8004c40:	9300      	str	r3, [sp, #0]
 8004c42:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004c46:	68f8      	ldr	r0, [r7, #12]
 8004c48:	f000 fbbe 	bl	80053c8 <I2C_TransferConfig>
 8004c4c:	68fb      	ldr	r3, [r7, #12]
 8004c4e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004c50:	b29b      	uxth	r3, r3
 8004c52:	2b00      	cmp	r3, #0
 8004c54:	d19e      	bne.n	8004b94 <HAL_I2C_Mem_Write+0x110>
 8004c56:	697a      	ldr	r2, [r7, #20]
 8004c58:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8004c5a:	68f8      	ldr	r0, [r7, #12]
 8004c5c:	f000 fa8c 	bl	8005178 <I2C_WaitOnSTOPFlagUntilTimeout>
 8004c60:	4603      	mov	r3, r0
 8004c62:	2b00      	cmp	r3, #0
 8004c64:	d001      	beq.n	8004c6a <HAL_I2C_Mem_Write+0x1e6>
 8004c66:	2301      	movs	r3, #1
 8004c68:	e01a      	b.n	8004ca0 <HAL_I2C_Mem_Write+0x21c>
 8004c6a:	68fb      	ldr	r3, [r7, #12]
 8004c6c:	681b      	ldr	r3, [r3, #0]
 8004c6e:	2220      	movs	r2, #32
 8004c70:	61da      	str	r2, [r3, #28]
 8004c72:	68fb      	ldr	r3, [r7, #12]
 8004c74:	681b      	ldr	r3, [r3, #0]
 8004c76:	6859      	ldr	r1, [r3, #4]
 8004c78:	68fb      	ldr	r3, [r7, #12]
 8004c7a:	681a      	ldr	r2, [r3, #0]
 8004c7c:	4b0a      	ldr	r3, [pc, #40]	; (8004ca8 <HAL_I2C_Mem_Write+0x224>)
 8004c7e:	400b      	ands	r3, r1
 8004c80:	6053      	str	r3, [r2, #4]
 8004c82:	68fb      	ldr	r3, [r7, #12]
 8004c84:	2220      	movs	r2, #32
 8004c86:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004c8a:	68fb      	ldr	r3, [r7, #12]
 8004c8c:	2200      	movs	r2, #0
 8004c8e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004c92:	68fb      	ldr	r3, [r7, #12]
 8004c94:	2200      	movs	r2, #0
 8004c96:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004c9a:	2300      	movs	r3, #0
 8004c9c:	e000      	b.n	8004ca0 <HAL_I2C_Mem_Write+0x21c>
 8004c9e:	2302      	movs	r3, #2
 8004ca0:	4618      	mov	r0, r3
 8004ca2:	3718      	adds	r7, #24
 8004ca4:	46bd      	mov	sp, r7
 8004ca6:	bd80      	pop	{r7, pc}
 8004ca8:	fe00e800 	.word	0xfe00e800

08004cac <HAL_I2C_Mem_Read>:
 8004cac:	b580      	push	{r7, lr}
 8004cae:	b088      	sub	sp, #32
 8004cb0:	af02      	add	r7, sp, #8
 8004cb2:	60f8      	str	r0, [r7, #12]
 8004cb4:	4608      	mov	r0, r1
 8004cb6:	4611      	mov	r1, r2
 8004cb8:	461a      	mov	r2, r3
 8004cba:	4603      	mov	r3, r0
 8004cbc:	817b      	strh	r3, [r7, #10]
 8004cbe:	460b      	mov	r3, r1
 8004cc0:	813b      	strh	r3, [r7, #8]
 8004cc2:	4613      	mov	r3, r2
 8004cc4:	80fb      	strh	r3, [r7, #6]
 8004cc6:	68fb      	ldr	r3, [r7, #12]
 8004cc8:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004ccc:	b2db      	uxtb	r3, r3
 8004cce:	2b20      	cmp	r3, #32
 8004cd0:	f040 80fd 	bne.w	8004ece <HAL_I2C_Mem_Read+0x222>
 8004cd4:	6a3b      	ldr	r3, [r7, #32]
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	d002      	beq.n	8004ce0 <HAL_I2C_Mem_Read+0x34>
 8004cda:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8004cdc:	2b00      	cmp	r3, #0
 8004cde:	d105      	bne.n	8004cec <HAL_I2C_Mem_Read+0x40>
 8004ce0:	68fb      	ldr	r3, [r7, #12]
 8004ce2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004ce6:	645a      	str	r2, [r3, #68]	; 0x44
 8004ce8:	2301      	movs	r3, #1
 8004cea:	e0f1      	b.n	8004ed0 <HAL_I2C_Mem_Read+0x224>
 8004cec:	68fb      	ldr	r3, [r7, #12]
 8004cee:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004cf2:	2b01      	cmp	r3, #1
 8004cf4:	d101      	bne.n	8004cfa <HAL_I2C_Mem_Read+0x4e>
 8004cf6:	2302      	movs	r3, #2
 8004cf8:	e0ea      	b.n	8004ed0 <HAL_I2C_Mem_Read+0x224>
 8004cfa:	68fb      	ldr	r3, [r7, #12]
 8004cfc:	2201      	movs	r2, #1
 8004cfe:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004d02:	f7fe f87d 	bl	8002e00 <HAL_GetTick>
 8004d06:	6178      	str	r0, [r7, #20]
 8004d08:	697b      	ldr	r3, [r7, #20]
 8004d0a:	9300      	str	r3, [sp, #0]
 8004d0c:	2319      	movs	r3, #25
 8004d0e:	2201      	movs	r2, #1
 8004d10:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004d14:	68f8      	ldr	r0, [r7, #12]
 8004d16:	f000 f9af 	bl	8005078 <I2C_WaitOnFlagUntilTimeout>
 8004d1a:	4603      	mov	r3, r0
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	d001      	beq.n	8004d24 <HAL_I2C_Mem_Read+0x78>
 8004d20:	2301      	movs	r3, #1
 8004d22:	e0d5      	b.n	8004ed0 <HAL_I2C_Mem_Read+0x224>
 8004d24:	68fb      	ldr	r3, [r7, #12]
 8004d26:	2222      	movs	r2, #34	; 0x22
 8004d28:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004d2c:	68fb      	ldr	r3, [r7, #12]
 8004d2e:	2240      	movs	r2, #64	; 0x40
 8004d30:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004d34:	68fb      	ldr	r3, [r7, #12]
 8004d36:	2200      	movs	r2, #0
 8004d38:	645a      	str	r2, [r3, #68]	; 0x44
 8004d3a:	68fb      	ldr	r3, [r7, #12]
 8004d3c:	6a3a      	ldr	r2, [r7, #32]
 8004d3e:	625a      	str	r2, [r3, #36]	; 0x24
 8004d40:	68fb      	ldr	r3, [r7, #12]
 8004d42:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8004d44:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004d46:	68fb      	ldr	r3, [r7, #12]
 8004d48:	2200      	movs	r2, #0
 8004d4a:	635a      	str	r2, [r3, #52]	; 0x34
 8004d4c:	88f8      	ldrh	r0, [r7, #6]
 8004d4e:	893a      	ldrh	r2, [r7, #8]
 8004d50:	8979      	ldrh	r1, [r7, #10]
 8004d52:	697b      	ldr	r3, [r7, #20]
 8004d54:	9301      	str	r3, [sp, #4]
 8004d56:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004d58:	9300      	str	r3, [sp, #0]
 8004d5a:	4603      	mov	r3, r0
 8004d5c:	68f8      	ldr	r0, [r7, #12]
 8004d5e:	f000 f913 	bl	8004f88 <I2C_RequestMemoryRead>
 8004d62:	4603      	mov	r3, r0
 8004d64:	2b00      	cmp	r3, #0
 8004d66:	d005      	beq.n	8004d74 <HAL_I2C_Mem_Read+0xc8>
 8004d68:	68fb      	ldr	r3, [r7, #12]
 8004d6a:	2200      	movs	r2, #0
 8004d6c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004d70:	2301      	movs	r3, #1
 8004d72:	e0ad      	b.n	8004ed0 <HAL_I2C_Mem_Read+0x224>
 8004d74:	68fb      	ldr	r3, [r7, #12]
 8004d76:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004d78:	b29b      	uxth	r3, r3
 8004d7a:	2bff      	cmp	r3, #255	; 0xff
 8004d7c:	d90e      	bls.n	8004d9c <HAL_I2C_Mem_Read+0xf0>
 8004d7e:	68fb      	ldr	r3, [r7, #12]
 8004d80:	22ff      	movs	r2, #255	; 0xff
 8004d82:	851a      	strh	r2, [r3, #40]	; 0x28
 8004d84:	68fb      	ldr	r3, [r7, #12]
 8004d86:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004d88:	b2da      	uxtb	r2, r3
 8004d8a:	8979      	ldrh	r1, [r7, #10]
 8004d8c:	4b52      	ldr	r3, [pc, #328]	; (8004ed8 <HAL_I2C_Mem_Read+0x22c>)
 8004d8e:	9300      	str	r3, [sp, #0]
 8004d90:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004d94:	68f8      	ldr	r0, [r7, #12]
 8004d96:	f000 fb17 	bl	80053c8 <I2C_TransferConfig>
 8004d9a:	e00f      	b.n	8004dbc <HAL_I2C_Mem_Read+0x110>
 8004d9c:	68fb      	ldr	r3, [r7, #12]
 8004d9e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004da0:	b29a      	uxth	r2, r3
 8004da2:	68fb      	ldr	r3, [r7, #12]
 8004da4:	851a      	strh	r2, [r3, #40]	; 0x28
 8004da6:	68fb      	ldr	r3, [r7, #12]
 8004da8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004daa:	b2da      	uxtb	r2, r3
 8004dac:	8979      	ldrh	r1, [r7, #10]
 8004dae:	4b4a      	ldr	r3, [pc, #296]	; (8004ed8 <HAL_I2C_Mem_Read+0x22c>)
 8004db0:	9300      	str	r3, [sp, #0]
 8004db2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004db6:	68f8      	ldr	r0, [r7, #12]
 8004db8:	f000 fb06 	bl	80053c8 <I2C_TransferConfig>
 8004dbc:	697b      	ldr	r3, [r7, #20]
 8004dbe:	9300      	str	r3, [sp, #0]
 8004dc0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004dc2:	2200      	movs	r2, #0
 8004dc4:	2104      	movs	r1, #4
 8004dc6:	68f8      	ldr	r0, [r7, #12]
 8004dc8:	f000 f956 	bl	8005078 <I2C_WaitOnFlagUntilTimeout>
 8004dcc:	4603      	mov	r3, r0
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	d001      	beq.n	8004dd6 <HAL_I2C_Mem_Read+0x12a>
 8004dd2:	2301      	movs	r3, #1
 8004dd4:	e07c      	b.n	8004ed0 <HAL_I2C_Mem_Read+0x224>
 8004dd6:	68fb      	ldr	r3, [r7, #12]
 8004dd8:	681b      	ldr	r3, [r3, #0]
 8004dda:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004ddc:	68fb      	ldr	r3, [r7, #12]
 8004dde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004de0:	b2d2      	uxtb	r2, r2
 8004de2:	701a      	strb	r2, [r3, #0]
 8004de4:	68fb      	ldr	r3, [r7, #12]
 8004de6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004de8:	1c5a      	adds	r2, r3, #1
 8004dea:	68fb      	ldr	r3, [r7, #12]
 8004dec:	625a      	str	r2, [r3, #36]	; 0x24
 8004dee:	68fb      	ldr	r3, [r7, #12]
 8004df0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004df2:	3b01      	subs	r3, #1
 8004df4:	b29a      	uxth	r2, r3
 8004df6:	68fb      	ldr	r3, [r7, #12]
 8004df8:	851a      	strh	r2, [r3, #40]	; 0x28
 8004dfa:	68fb      	ldr	r3, [r7, #12]
 8004dfc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004dfe:	b29b      	uxth	r3, r3
 8004e00:	3b01      	subs	r3, #1
 8004e02:	b29a      	uxth	r2, r3
 8004e04:	68fb      	ldr	r3, [r7, #12]
 8004e06:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004e08:	68fb      	ldr	r3, [r7, #12]
 8004e0a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e0c:	b29b      	uxth	r3, r3
 8004e0e:	2b00      	cmp	r3, #0
 8004e10:	d034      	beq.n	8004e7c <HAL_I2C_Mem_Read+0x1d0>
 8004e12:	68fb      	ldr	r3, [r7, #12]
 8004e14:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004e16:	2b00      	cmp	r3, #0
 8004e18:	d130      	bne.n	8004e7c <HAL_I2C_Mem_Read+0x1d0>
 8004e1a:	697b      	ldr	r3, [r7, #20]
 8004e1c:	9300      	str	r3, [sp, #0]
 8004e1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004e20:	2200      	movs	r2, #0
 8004e22:	2180      	movs	r1, #128	; 0x80
 8004e24:	68f8      	ldr	r0, [r7, #12]
 8004e26:	f000 f927 	bl	8005078 <I2C_WaitOnFlagUntilTimeout>
 8004e2a:	4603      	mov	r3, r0
 8004e2c:	2b00      	cmp	r3, #0
 8004e2e:	d001      	beq.n	8004e34 <HAL_I2C_Mem_Read+0x188>
 8004e30:	2301      	movs	r3, #1
 8004e32:	e04d      	b.n	8004ed0 <HAL_I2C_Mem_Read+0x224>
 8004e34:	68fb      	ldr	r3, [r7, #12]
 8004e36:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e38:	b29b      	uxth	r3, r3
 8004e3a:	2bff      	cmp	r3, #255	; 0xff
 8004e3c:	d90e      	bls.n	8004e5c <HAL_I2C_Mem_Read+0x1b0>
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	22ff      	movs	r2, #255	; 0xff
 8004e42:	851a      	strh	r2, [r3, #40]	; 0x28
 8004e44:	68fb      	ldr	r3, [r7, #12]
 8004e46:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004e48:	b2da      	uxtb	r2, r3
 8004e4a:	8979      	ldrh	r1, [r7, #10]
 8004e4c:	2300      	movs	r3, #0
 8004e4e:	9300      	str	r3, [sp, #0]
 8004e50:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004e54:	68f8      	ldr	r0, [r7, #12]
 8004e56:	f000 fab7 	bl	80053c8 <I2C_TransferConfig>
 8004e5a:	e00f      	b.n	8004e7c <HAL_I2C_Mem_Read+0x1d0>
 8004e5c:	68fb      	ldr	r3, [r7, #12]
 8004e5e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e60:	b29a      	uxth	r2, r3
 8004e62:	68fb      	ldr	r3, [r7, #12]
 8004e64:	851a      	strh	r2, [r3, #40]	; 0x28
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004e6a:	b2da      	uxtb	r2, r3
 8004e6c:	8979      	ldrh	r1, [r7, #10]
 8004e6e:	2300      	movs	r3, #0
 8004e70:	9300      	str	r3, [sp, #0]
 8004e72:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004e76:	68f8      	ldr	r0, [r7, #12]
 8004e78:	f000 faa6 	bl	80053c8 <I2C_TransferConfig>
 8004e7c:	68fb      	ldr	r3, [r7, #12]
 8004e7e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e80:	b29b      	uxth	r3, r3
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	d19a      	bne.n	8004dbc <HAL_I2C_Mem_Read+0x110>
 8004e86:	697a      	ldr	r2, [r7, #20]
 8004e88:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8004e8a:	68f8      	ldr	r0, [r7, #12]
 8004e8c:	f000 f974 	bl	8005178 <I2C_WaitOnSTOPFlagUntilTimeout>
 8004e90:	4603      	mov	r3, r0
 8004e92:	2b00      	cmp	r3, #0
 8004e94:	d001      	beq.n	8004e9a <HAL_I2C_Mem_Read+0x1ee>
 8004e96:	2301      	movs	r3, #1
 8004e98:	e01a      	b.n	8004ed0 <HAL_I2C_Mem_Read+0x224>
 8004e9a:	68fb      	ldr	r3, [r7, #12]
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	2220      	movs	r2, #32
 8004ea0:	61da      	str	r2, [r3, #28]
 8004ea2:	68fb      	ldr	r3, [r7, #12]
 8004ea4:	681b      	ldr	r3, [r3, #0]
 8004ea6:	6859      	ldr	r1, [r3, #4]
 8004ea8:	68fb      	ldr	r3, [r7, #12]
 8004eaa:	681a      	ldr	r2, [r3, #0]
 8004eac:	4b0b      	ldr	r3, [pc, #44]	; (8004edc <HAL_I2C_Mem_Read+0x230>)
 8004eae:	400b      	ands	r3, r1
 8004eb0:	6053      	str	r3, [r2, #4]
 8004eb2:	68fb      	ldr	r3, [r7, #12]
 8004eb4:	2220      	movs	r2, #32
 8004eb6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004eba:	68fb      	ldr	r3, [r7, #12]
 8004ebc:	2200      	movs	r2, #0
 8004ebe:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004ec2:	68fb      	ldr	r3, [r7, #12]
 8004ec4:	2200      	movs	r2, #0
 8004ec6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004eca:	2300      	movs	r3, #0
 8004ecc:	e000      	b.n	8004ed0 <HAL_I2C_Mem_Read+0x224>
 8004ece:	2302      	movs	r3, #2
 8004ed0:	4618      	mov	r0, r3
 8004ed2:	3718      	adds	r7, #24
 8004ed4:	46bd      	mov	sp, r7
 8004ed6:	bd80      	pop	{r7, pc}
 8004ed8:	80002400 	.word	0x80002400
 8004edc:	fe00e800 	.word	0xfe00e800

08004ee0 <I2C_RequestMemoryWrite>:
 8004ee0:	b580      	push	{r7, lr}
 8004ee2:	b086      	sub	sp, #24
 8004ee4:	af02      	add	r7, sp, #8
 8004ee6:	60f8      	str	r0, [r7, #12]
 8004ee8:	4608      	mov	r0, r1
 8004eea:	4611      	mov	r1, r2
 8004eec:	461a      	mov	r2, r3
 8004eee:	4603      	mov	r3, r0
 8004ef0:	817b      	strh	r3, [r7, #10]
 8004ef2:	460b      	mov	r3, r1
 8004ef4:	813b      	strh	r3, [r7, #8]
 8004ef6:	4613      	mov	r3, r2
 8004ef8:	80fb      	strh	r3, [r7, #6]
 8004efa:	88fb      	ldrh	r3, [r7, #6]
 8004efc:	b2da      	uxtb	r2, r3
 8004efe:	8979      	ldrh	r1, [r7, #10]
 8004f00:	4b20      	ldr	r3, [pc, #128]	; (8004f84 <I2C_RequestMemoryWrite+0xa4>)
 8004f02:	9300      	str	r3, [sp, #0]
 8004f04:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004f08:	68f8      	ldr	r0, [r7, #12]
 8004f0a:	f000 fa5d 	bl	80053c8 <I2C_TransferConfig>
 8004f0e:	69fa      	ldr	r2, [r7, #28]
 8004f10:	69b9      	ldr	r1, [r7, #24]
 8004f12:	68f8      	ldr	r0, [r7, #12]
 8004f14:	f000 f8f0 	bl	80050f8 <I2C_WaitOnTXISFlagUntilTimeout>
 8004f18:	4603      	mov	r3, r0
 8004f1a:	2b00      	cmp	r3, #0
 8004f1c:	d001      	beq.n	8004f22 <I2C_RequestMemoryWrite+0x42>
 8004f1e:	2301      	movs	r3, #1
 8004f20:	e02c      	b.n	8004f7c <I2C_RequestMemoryWrite+0x9c>
 8004f22:	88fb      	ldrh	r3, [r7, #6]
 8004f24:	2b01      	cmp	r3, #1
 8004f26:	d105      	bne.n	8004f34 <I2C_RequestMemoryWrite+0x54>
 8004f28:	893b      	ldrh	r3, [r7, #8]
 8004f2a:	b2da      	uxtb	r2, r3
 8004f2c:	68fb      	ldr	r3, [r7, #12]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	629a      	str	r2, [r3, #40]	; 0x28
 8004f32:	e015      	b.n	8004f60 <I2C_RequestMemoryWrite+0x80>
 8004f34:	893b      	ldrh	r3, [r7, #8]
 8004f36:	0a1b      	lsrs	r3, r3, #8
 8004f38:	b29b      	uxth	r3, r3
 8004f3a:	b2da      	uxtb	r2, r3
 8004f3c:	68fb      	ldr	r3, [r7, #12]
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	629a      	str	r2, [r3, #40]	; 0x28
 8004f42:	69fa      	ldr	r2, [r7, #28]
 8004f44:	69b9      	ldr	r1, [r7, #24]
 8004f46:	68f8      	ldr	r0, [r7, #12]
 8004f48:	f000 f8d6 	bl	80050f8 <I2C_WaitOnTXISFlagUntilTimeout>
 8004f4c:	4603      	mov	r3, r0
 8004f4e:	2b00      	cmp	r3, #0
 8004f50:	d001      	beq.n	8004f56 <I2C_RequestMemoryWrite+0x76>
 8004f52:	2301      	movs	r3, #1
 8004f54:	e012      	b.n	8004f7c <I2C_RequestMemoryWrite+0x9c>
 8004f56:	893b      	ldrh	r3, [r7, #8]
 8004f58:	b2da      	uxtb	r2, r3
 8004f5a:	68fb      	ldr	r3, [r7, #12]
 8004f5c:	681b      	ldr	r3, [r3, #0]
 8004f5e:	629a      	str	r2, [r3, #40]	; 0x28
 8004f60:	69fb      	ldr	r3, [r7, #28]
 8004f62:	9300      	str	r3, [sp, #0]
 8004f64:	69bb      	ldr	r3, [r7, #24]
 8004f66:	2200      	movs	r2, #0
 8004f68:	2180      	movs	r1, #128	; 0x80
 8004f6a:	68f8      	ldr	r0, [r7, #12]
 8004f6c:	f000 f884 	bl	8005078 <I2C_WaitOnFlagUntilTimeout>
 8004f70:	4603      	mov	r3, r0
 8004f72:	2b00      	cmp	r3, #0
 8004f74:	d001      	beq.n	8004f7a <I2C_RequestMemoryWrite+0x9a>
 8004f76:	2301      	movs	r3, #1
 8004f78:	e000      	b.n	8004f7c <I2C_RequestMemoryWrite+0x9c>
 8004f7a:	2300      	movs	r3, #0
 8004f7c:	4618      	mov	r0, r3
 8004f7e:	3710      	adds	r7, #16
 8004f80:	46bd      	mov	sp, r7
 8004f82:	bd80      	pop	{r7, pc}
 8004f84:	80002000 	.word	0x80002000

08004f88 <I2C_RequestMemoryRead>:
 8004f88:	b580      	push	{r7, lr}
 8004f8a:	b086      	sub	sp, #24
 8004f8c:	af02      	add	r7, sp, #8
 8004f8e:	60f8      	str	r0, [r7, #12]
 8004f90:	4608      	mov	r0, r1
 8004f92:	4611      	mov	r1, r2
 8004f94:	461a      	mov	r2, r3
 8004f96:	4603      	mov	r3, r0
 8004f98:	817b      	strh	r3, [r7, #10]
 8004f9a:	460b      	mov	r3, r1
 8004f9c:	813b      	strh	r3, [r7, #8]
 8004f9e:	4613      	mov	r3, r2
 8004fa0:	80fb      	strh	r3, [r7, #6]
 8004fa2:	88fb      	ldrh	r3, [r7, #6]
 8004fa4:	b2da      	uxtb	r2, r3
 8004fa6:	8979      	ldrh	r1, [r7, #10]
 8004fa8:	4b20      	ldr	r3, [pc, #128]	; (800502c <I2C_RequestMemoryRead+0xa4>)
 8004faa:	9300      	str	r3, [sp, #0]
 8004fac:	2300      	movs	r3, #0
 8004fae:	68f8      	ldr	r0, [r7, #12]
 8004fb0:	f000 fa0a 	bl	80053c8 <I2C_TransferConfig>
 8004fb4:	69fa      	ldr	r2, [r7, #28]
 8004fb6:	69b9      	ldr	r1, [r7, #24]
 8004fb8:	68f8      	ldr	r0, [r7, #12]
 8004fba:	f000 f89d 	bl	80050f8 <I2C_WaitOnTXISFlagUntilTimeout>
 8004fbe:	4603      	mov	r3, r0
 8004fc0:	2b00      	cmp	r3, #0
 8004fc2:	d001      	beq.n	8004fc8 <I2C_RequestMemoryRead+0x40>
 8004fc4:	2301      	movs	r3, #1
 8004fc6:	e02c      	b.n	8005022 <I2C_RequestMemoryRead+0x9a>
 8004fc8:	88fb      	ldrh	r3, [r7, #6]
 8004fca:	2b01      	cmp	r3, #1
 8004fcc:	d105      	bne.n	8004fda <I2C_RequestMemoryRead+0x52>
 8004fce:	893b      	ldrh	r3, [r7, #8]
 8004fd0:	b2da      	uxtb	r2, r3
 8004fd2:	68fb      	ldr	r3, [r7, #12]
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	629a      	str	r2, [r3, #40]	; 0x28
 8004fd8:	e015      	b.n	8005006 <I2C_RequestMemoryRead+0x7e>
 8004fda:	893b      	ldrh	r3, [r7, #8]
 8004fdc:	0a1b      	lsrs	r3, r3, #8
 8004fde:	b29b      	uxth	r3, r3
 8004fe0:	b2da      	uxtb	r2, r3
 8004fe2:	68fb      	ldr	r3, [r7, #12]
 8004fe4:	681b      	ldr	r3, [r3, #0]
 8004fe6:	629a      	str	r2, [r3, #40]	; 0x28
 8004fe8:	69fa      	ldr	r2, [r7, #28]
 8004fea:	69b9      	ldr	r1, [r7, #24]
 8004fec:	68f8      	ldr	r0, [r7, #12]
 8004fee:	f000 f883 	bl	80050f8 <I2C_WaitOnTXISFlagUntilTimeout>
 8004ff2:	4603      	mov	r3, r0
 8004ff4:	2b00      	cmp	r3, #0
 8004ff6:	d001      	beq.n	8004ffc <I2C_RequestMemoryRead+0x74>
 8004ff8:	2301      	movs	r3, #1
 8004ffa:	e012      	b.n	8005022 <I2C_RequestMemoryRead+0x9a>
 8004ffc:	893b      	ldrh	r3, [r7, #8]
 8004ffe:	b2da      	uxtb	r2, r3
 8005000:	68fb      	ldr	r3, [r7, #12]
 8005002:	681b      	ldr	r3, [r3, #0]
 8005004:	629a      	str	r2, [r3, #40]	; 0x28
 8005006:	69fb      	ldr	r3, [r7, #28]
 8005008:	9300      	str	r3, [sp, #0]
 800500a:	69bb      	ldr	r3, [r7, #24]
 800500c:	2200      	movs	r2, #0
 800500e:	2140      	movs	r1, #64	; 0x40
 8005010:	68f8      	ldr	r0, [r7, #12]
 8005012:	f000 f831 	bl	8005078 <I2C_WaitOnFlagUntilTimeout>
 8005016:	4603      	mov	r3, r0
 8005018:	2b00      	cmp	r3, #0
 800501a:	d001      	beq.n	8005020 <I2C_RequestMemoryRead+0x98>
 800501c:	2301      	movs	r3, #1
 800501e:	e000      	b.n	8005022 <I2C_RequestMemoryRead+0x9a>
 8005020:	2300      	movs	r3, #0
 8005022:	4618      	mov	r0, r3
 8005024:	3710      	adds	r7, #16
 8005026:	46bd      	mov	sp, r7
 8005028:	bd80      	pop	{r7, pc}
 800502a:	bf00      	nop
 800502c:	80002000 	.word	0x80002000

08005030 <I2C_Flush_TXDR>:
 8005030:	b480      	push	{r7}
 8005032:	b083      	sub	sp, #12
 8005034:	af00      	add	r7, sp, #0
 8005036:	6078      	str	r0, [r7, #4]
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	699b      	ldr	r3, [r3, #24]
 800503e:	f003 0302 	and.w	r3, r3, #2
 8005042:	2b02      	cmp	r3, #2
 8005044:	d103      	bne.n	800504e <I2C_Flush_TXDR+0x1e>
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	2200      	movs	r2, #0
 800504c:	629a      	str	r2, [r3, #40]	; 0x28
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	699b      	ldr	r3, [r3, #24]
 8005054:	f003 0301 	and.w	r3, r3, #1
 8005058:	2b01      	cmp	r3, #1
 800505a:	d007      	beq.n	800506c <I2C_Flush_TXDR+0x3c>
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	699a      	ldr	r2, [r3, #24]
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	681b      	ldr	r3, [r3, #0]
 8005066:	f042 0201 	orr.w	r2, r2, #1
 800506a:	619a      	str	r2, [r3, #24]
 800506c:	bf00      	nop
 800506e:	370c      	adds	r7, #12
 8005070:	46bd      	mov	sp, r7
 8005072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005076:	4770      	bx	lr

08005078 <I2C_WaitOnFlagUntilTimeout>:
 8005078:	b580      	push	{r7, lr}
 800507a:	b084      	sub	sp, #16
 800507c:	af00      	add	r7, sp, #0
 800507e:	60f8      	str	r0, [r7, #12]
 8005080:	60b9      	str	r1, [r7, #8]
 8005082:	603b      	str	r3, [r7, #0]
 8005084:	4613      	mov	r3, r2
 8005086:	71fb      	strb	r3, [r7, #7]
 8005088:	e022      	b.n	80050d0 <I2C_WaitOnFlagUntilTimeout+0x58>
 800508a:	683b      	ldr	r3, [r7, #0]
 800508c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005090:	d01e      	beq.n	80050d0 <I2C_WaitOnFlagUntilTimeout+0x58>
 8005092:	f7fd feb5 	bl	8002e00 <HAL_GetTick>
 8005096:	4602      	mov	r2, r0
 8005098:	69bb      	ldr	r3, [r7, #24]
 800509a:	1ad3      	subs	r3, r2, r3
 800509c:	683a      	ldr	r2, [r7, #0]
 800509e:	429a      	cmp	r2, r3
 80050a0:	d302      	bcc.n	80050a8 <I2C_WaitOnFlagUntilTimeout+0x30>
 80050a2:	683b      	ldr	r3, [r7, #0]
 80050a4:	2b00      	cmp	r3, #0
 80050a6:	d113      	bne.n	80050d0 <I2C_WaitOnFlagUntilTimeout+0x58>
 80050a8:	68fb      	ldr	r3, [r7, #12]
 80050aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80050ac:	f043 0220 	orr.w	r2, r3, #32
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	645a      	str	r2, [r3, #68]	; 0x44
 80050b4:	68fb      	ldr	r3, [r7, #12]
 80050b6:	2220      	movs	r2, #32
 80050b8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80050bc:	68fb      	ldr	r3, [r7, #12]
 80050be:	2200      	movs	r2, #0
 80050c0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80050c4:	68fb      	ldr	r3, [r7, #12]
 80050c6:	2200      	movs	r2, #0
 80050c8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80050cc:	2301      	movs	r3, #1
 80050ce:	e00f      	b.n	80050f0 <I2C_WaitOnFlagUntilTimeout+0x78>
 80050d0:	68fb      	ldr	r3, [r7, #12]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	699a      	ldr	r2, [r3, #24]
 80050d6:	68bb      	ldr	r3, [r7, #8]
 80050d8:	4013      	ands	r3, r2
 80050da:	68ba      	ldr	r2, [r7, #8]
 80050dc:	429a      	cmp	r2, r3
 80050de:	bf0c      	ite	eq
 80050e0:	2301      	moveq	r3, #1
 80050e2:	2300      	movne	r3, #0
 80050e4:	b2db      	uxtb	r3, r3
 80050e6:	461a      	mov	r2, r3
 80050e8:	79fb      	ldrb	r3, [r7, #7]
 80050ea:	429a      	cmp	r2, r3
 80050ec:	d0cd      	beq.n	800508a <I2C_WaitOnFlagUntilTimeout+0x12>
 80050ee:	2300      	movs	r3, #0
 80050f0:	4618      	mov	r0, r3
 80050f2:	3710      	adds	r7, #16
 80050f4:	46bd      	mov	sp, r7
 80050f6:	bd80      	pop	{r7, pc}

080050f8 <I2C_WaitOnTXISFlagUntilTimeout>:
 80050f8:	b580      	push	{r7, lr}
 80050fa:	b084      	sub	sp, #16
 80050fc:	af00      	add	r7, sp, #0
 80050fe:	60f8      	str	r0, [r7, #12]
 8005100:	60b9      	str	r1, [r7, #8]
 8005102:	607a      	str	r2, [r7, #4]
 8005104:	e02c      	b.n	8005160 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8005106:	687a      	ldr	r2, [r7, #4]
 8005108:	68b9      	ldr	r1, [r7, #8]
 800510a:	68f8      	ldr	r0, [r7, #12]
 800510c:	f000 f870 	bl	80051f0 <I2C_IsErrorOccurred>
 8005110:	4603      	mov	r3, r0
 8005112:	2b00      	cmp	r3, #0
 8005114:	d001      	beq.n	800511a <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8005116:	2301      	movs	r3, #1
 8005118:	e02a      	b.n	8005170 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 800511a:	68bb      	ldr	r3, [r7, #8]
 800511c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005120:	d01e      	beq.n	8005160 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8005122:	f7fd fe6d 	bl	8002e00 <HAL_GetTick>
 8005126:	4602      	mov	r2, r0
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	1ad3      	subs	r3, r2, r3
 800512c:	68ba      	ldr	r2, [r7, #8]
 800512e:	429a      	cmp	r2, r3
 8005130:	d302      	bcc.n	8005138 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8005132:	68bb      	ldr	r3, [r7, #8]
 8005134:	2b00      	cmp	r3, #0
 8005136:	d113      	bne.n	8005160 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8005138:	68fb      	ldr	r3, [r7, #12]
 800513a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800513c:	f043 0220 	orr.w	r2, r3, #32
 8005140:	68fb      	ldr	r3, [r7, #12]
 8005142:	645a      	str	r2, [r3, #68]	; 0x44
 8005144:	68fb      	ldr	r3, [r7, #12]
 8005146:	2220      	movs	r2, #32
 8005148:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800514c:	68fb      	ldr	r3, [r7, #12]
 800514e:	2200      	movs	r2, #0
 8005150:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005154:	68fb      	ldr	r3, [r7, #12]
 8005156:	2200      	movs	r2, #0
 8005158:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800515c:	2301      	movs	r3, #1
 800515e:	e007      	b.n	8005170 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8005160:	68fb      	ldr	r3, [r7, #12]
 8005162:	681b      	ldr	r3, [r3, #0]
 8005164:	699b      	ldr	r3, [r3, #24]
 8005166:	f003 0302 	and.w	r3, r3, #2
 800516a:	2b02      	cmp	r3, #2
 800516c:	d1cb      	bne.n	8005106 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 800516e:	2300      	movs	r3, #0
 8005170:	4618      	mov	r0, r3
 8005172:	3710      	adds	r7, #16
 8005174:	46bd      	mov	sp, r7
 8005176:	bd80      	pop	{r7, pc}

08005178 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8005178:	b580      	push	{r7, lr}
 800517a:	b084      	sub	sp, #16
 800517c:	af00      	add	r7, sp, #0
 800517e:	60f8      	str	r0, [r7, #12]
 8005180:	60b9      	str	r1, [r7, #8]
 8005182:	607a      	str	r2, [r7, #4]
 8005184:	e028      	b.n	80051d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8005186:	687a      	ldr	r2, [r7, #4]
 8005188:	68b9      	ldr	r1, [r7, #8]
 800518a:	68f8      	ldr	r0, [r7, #12]
 800518c:	f000 f830 	bl	80051f0 <I2C_IsErrorOccurred>
 8005190:	4603      	mov	r3, r0
 8005192:	2b00      	cmp	r3, #0
 8005194:	d001      	beq.n	800519a <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8005196:	2301      	movs	r3, #1
 8005198:	e026      	b.n	80051e8 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 800519a:	f7fd fe31 	bl	8002e00 <HAL_GetTick>
 800519e:	4602      	mov	r2, r0
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	1ad3      	subs	r3, r2, r3
 80051a4:	68ba      	ldr	r2, [r7, #8]
 80051a6:	429a      	cmp	r2, r3
 80051a8:	d302      	bcc.n	80051b0 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 80051aa:	68bb      	ldr	r3, [r7, #8]
 80051ac:	2b00      	cmp	r3, #0
 80051ae:	d113      	bne.n	80051d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80051b4:	f043 0220 	orr.w	r2, r3, #32
 80051b8:	68fb      	ldr	r3, [r7, #12]
 80051ba:	645a      	str	r2, [r3, #68]	; 0x44
 80051bc:	68fb      	ldr	r3, [r7, #12]
 80051be:	2220      	movs	r2, #32
 80051c0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80051c4:	68fb      	ldr	r3, [r7, #12]
 80051c6:	2200      	movs	r2, #0
 80051c8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80051cc:	68fb      	ldr	r3, [r7, #12]
 80051ce:	2200      	movs	r2, #0
 80051d0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80051d4:	2301      	movs	r3, #1
 80051d6:	e007      	b.n	80051e8 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 80051d8:	68fb      	ldr	r3, [r7, #12]
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	699b      	ldr	r3, [r3, #24]
 80051de:	f003 0320 	and.w	r3, r3, #32
 80051e2:	2b20      	cmp	r3, #32
 80051e4:	d1cf      	bne.n	8005186 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 80051e6:	2300      	movs	r3, #0
 80051e8:	4618      	mov	r0, r3
 80051ea:	3710      	adds	r7, #16
 80051ec:	46bd      	mov	sp, r7
 80051ee:	bd80      	pop	{r7, pc}

080051f0 <I2C_IsErrorOccurred>:
 80051f0:	b580      	push	{r7, lr}
 80051f2:	b08a      	sub	sp, #40	; 0x28
 80051f4:	af00      	add	r7, sp, #0
 80051f6:	60f8      	str	r0, [r7, #12]
 80051f8:	60b9      	str	r1, [r7, #8]
 80051fa:	607a      	str	r2, [r7, #4]
 80051fc:	2300      	movs	r3, #0
 80051fe:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8005202:	68fb      	ldr	r3, [r7, #12]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	699b      	ldr	r3, [r3, #24]
 8005208:	61bb      	str	r3, [r7, #24]
 800520a:	2300      	movs	r3, #0
 800520c:	623b      	str	r3, [r7, #32]
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	61fb      	str	r3, [r7, #28]
 8005212:	69bb      	ldr	r3, [r7, #24]
 8005214:	f003 0310 	and.w	r3, r3, #16
 8005218:	2b00      	cmp	r3, #0
 800521a:	d075      	beq.n	8005308 <I2C_IsErrorOccurred+0x118>
 800521c:	68fb      	ldr	r3, [r7, #12]
 800521e:	681b      	ldr	r3, [r3, #0]
 8005220:	2210      	movs	r2, #16
 8005222:	61da      	str	r2, [r3, #28]
 8005224:	e056      	b.n	80052d4 <I2C_IsErrorOccurred+0xe4>
 8005226:	68bb      	ldr	r3, [r7, #8]
 8005228:	f1b3 3fff 	cmp.w	r3, #4294967295
 800522c:	d052      	beq.n	80052d4 <I2C_IsErrorOccurred+0xe4>
 800522e:	f7fd fde7 	bl	8002e00 <HAL_GetTick>
 8005232:	4602      	mov	r2, r0
 8005234:	69fb      	ldr	r3, [r7, #28]
 8005236:	1ad3      	subs	r3, r2, r3
 8005238:	68ba      	ldr	r2, [r7, #8]
 800523a:	429a      	cmp	r2, r3
 800523c:	d302      	bcc.n	8005244 <I2C_IsErrorOccurred+0x54>
 800523e:	68bb      	ldr	r3, [r7, #8]
 8005240:	2b00      	cmp	r3, #0
 8005242:	d147      	bne.n	80052d4 <I2C_IsErrorOccurred+0xe4>
 8005244:	68fb      	ldr	r3, [r7, #12]
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	685b      	ldr	r3, [r3, #4]
 800524a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800524e:	617b      	str	r3, [r7, #20]
 8005250:	68fb      	ldr	r3, [r7, #12]
 8005252:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8005256:	74fb      	strb	r3, [r7, #19]
 8005258:	68fb      	ldr	r3, [r7, #12]
 800525a:	681b      	ldr	r3, [r3, #0]
 800525c:	699b      	ldr	r3, [r3, #24]
 800525e:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005262:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005266:	d12e      	bne.n	80052c6 <I2C_IsErrorOccurred+0xd6>
 8005268:	697b      	ldr	r3, [r7, #20]
 800526a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800526e:	d02a      	beq.n	80052c6 <I2C_IsErrorOccurred+0xd6>
 8005270:	7cfb      	ldrb	r3, [r7, #19]
 8005272:	2b20      	cmp	r3, #32
 8005274:	d027      	beq.n	80052c6 <I2C_IsErrorOccurred+0xd6>
 8005276:	68fb      	ldr	r3, [r7, #12]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	685a      	ldr	r2, [r3, #4]
 800527c:	68fb      	ldr	r3, [r7, #12]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005284:	605a      	str	r2, [r3, #4]
 8005286:	f7fd fdbb 	bl	8002e00 <HAL_GetTick>
 800528a:	61f8      	str	r0, [r7, #28]
 800528c:	e01b      	b.n	80052c6 <I2C_IsErrorOccurred+0xd6>
 800528e:	f7fd fdb7 	bl	8002e00 <HAL_GetTick>
 8005292:	4602      	mov	r2, r0
 8005294:	69fb      	ldr	r3, [r7, #28]
 8005296:	1ad3      	subs	r3, r2, r3
 8005298:	2b19      	cmp	r3, #25
 800529a:	d914      	bls.n	80052c6 <I2C_IsErrorOccurred+0xd6>
 800529c:	68fb      	ldr	r3, [r7, #12]
 800529e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80052a0:	f043 0220 	orr.w	r2, r3, #32
 80052a4:	68fb      	ldr	r3, [r7, #12]
 80052a6:	645a      	str	r2, [r3, #68]	; 0x44
 80052a8:	68fb      	ldr	r3, [r7, #12]
 80052aa:	2220      	movs	r2, #32
 80052ac:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80052b0:	68fb      	ldr	r3, [r7, #12]
 80052b2:	2200      	movs	r2, #0
 80052b4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80052b8:	68fb      	ldr	r3, [r7, #12]
 80052ba:	2200      	movs	r2, #0
 80052bc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80052c0:	2301      	movs	r3, #1
 80052c2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80052c6:	68fb      	ldr	r3, [r7, #12]
 80052c8:	681b      	ldr	r3, [r3, #0]
 80052ca:	699b      	ldr	r3, [r3, #24]
 80052cc:	f003 0320 	and.w	r3, r3, #32
 80052d0:	2b20      	cmp	r3, #32
 80052d2:	d1dc      	bne.n	800528e <I2C_IsErrorOccurred+0x9e>
 80052d4:	68fb      	ldr	r3, [r7, #12]
 80052d6:	681b      	ldr	r3, [r3, #0]
 80052d8:	699b      	ldr	r3, [r3, #24]
 80052da:	f003 0320 	and.w	r3, r3, #32
 80052de:	2b20      	cmp	r3, #32
 80052e0:	d003      	beq.n	80052ea <I2C_IsErrorOccurred+0xfa>
 80052e2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80052e6:	2b00      	cmp	r3, #0
 80052e8:	d09d      	beq.n	8005226 <I2C_IsErrorOccurred+0x36>
 80052ea:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80052ee:	2b00      	cmp	r3, #0
 80052f0:	d103      	bne.n	80052fa <I2C_IsErrorOccurred+0x10a>
 80052f2:	68fb      	ldr	r3, [r7, #12]
 80052f4:	681b      	ldr	r3, [r3, #0]
 80052f6:	2220      	movs	r2, #32
 80052f8:	61da      	str	r2, [r3, #28]
 80052fa:	6a3b      	ldr	r3, [r7, #32]
 80052fc:	f043 0304 	orr.w	r3, r3, #4
 8005300:	623b      	str	r3, [r7, #32]
 8005302:	2301      	movs	r3, #1
 8005304:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8005308:	68fb      	ldr	r3, [r7, #12]
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	699b      	ldr	r3, [r3, #24]
 800530e:	61bb      	str	r3, [r7, #24]
 8005310:	69bb      	ldr	r3, [r7, #24]
 8005312:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005316:	2b00      	cmp	r3, #0
 8005318:	d00b      	beq.n	8005332 <I2C_IsErrorOccurred+0x142>
 800531a:	6a3b      	ldr	r3, [r7, #32]
 800531c:	f043 0301 	orr.w	r3, r3, #1
 8005320:	623b      	str	r3, [r7, #32]
 8005322:	68fb      	ldr	r3, [r7, #12]
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	f44f 7280 	mov.w	r2, #256	; 0x100
 800532a:	61da      	str	r2, [r3, #28]
 800532c:	2301      	movs	r3, #1
 800532e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8005332:	69bb      	ldr	r3, [r7, #24]
 8005334:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005338:	2b00      	cmp	r3, #0
 800533a:	d00b      	beq.n	8005354 <I2C_IsErrorOccurred+0x164>
 800533c:	6a3b      	ldr	r3, [r7, #32]
 800533e:	f043 0308 	orr.w	r3, r3, #8
 8005342:	623b      	str	r3, [r7, #32]
 8005344:	68fb      	ldr	r3, [r7, #12]
 8005346:	681b      	ldr	r3, [r3, #0]
 8005348:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800534c:	61da      	str	r2, [r3, #28]
 800534e:	2301      	movs	r3, #1
 8005350:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8005354:	69bb      	ldr	r3, [r7, #24]
 8005356:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800535a:	2b00      	cmp	r3, #0
 800535c:	d00b      	beq.n	8005376 <I2C_IsErrorOccurred+0x186>
 800535e:	6a3b      	ldr	r3, [r7, #32]
 8005360:	f043 0302 	orr.w	r3, r3, #2
 8005364:	623b      	str	r3, [r7, #32]
 8005366:	68fb      	ldr	r3, [r7, #12]
 8005368:	681b      	ldr	r3, [r3, #0]
 800536a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800536e:	61da      	str	r2, [r3, #28]
 8005370:	2301      	movs	r3, #1
 8005372:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8005376:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800537a:	2b00      	cmp	r3, #0
 800537c:	d01c      	beq.n	80053b8 <I2C_IsErrorOccurred+0x1c8>
 800537e:	68f8      	ldr	r0, [r7, #12]
 8005380:	f7ff fe56 	bl	8005030 <I2C_Flush_TXDR>
 8005384:	68fb      	ldr	r3, [r7, #12]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	6859      	ldr	r1, [r3, #4]
 800538a:	68fb      	ldr	r3, [r7, #12]
 800538c:	681a      	ldr	r2, [r3, #0]
 800538e:	4b0d      	ldr	r3, [pc, #52]	; (80053c4 <I2C_IsErrorOccurred+0x1d4>)
 8005390:	400b      	ands	r3, r1
 8005392:	6053      	str	r3, [r2, #4]
 8005394:	68fb      	ldr	r3, [r7, #12]
 8005396:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005398:	6a3b      	ldr	r3, [r7, #32]
 800539a:	431a      	orrs	r2, r3
 800539c:	68fb      	ldr	r3, [r7, #12]
 800539e:	645a      	str	r2, [r3, #68]	; 0x44
 80053a0:	68fb      	ldr	r3, [r7, #12]
 80053a2:	2220      	movs	r2, #32
 80053a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	2200      	movs	r2, #0
 80053ac:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80053b0:	68fb      	ldr	r3, [r7, #12]
 80053b2:	2200      	movs	r2, #0
 80053b4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80053b8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80053bc:	4618      	mov	r0, r3
 80053be:	3728      	adds	r7, #40	; 0x28
 80053c0:	46bd      	mov	sp, r7
 80053c2:	bd80      	pop	{r7, pc}
 80053c4:	fe00e800 	.word	0xfe00e800

080053c8 <I2C_TransferConfig>:
 80053c8:	b480      	push	{r7}
 80053ca:	b087      	sub	sp, #28
 80053cc:	af00      	add	r7, sp, #0
 80053ce:	60f8      	str	r0, [r7, #12]
 80053d0:	607b      	str	r3, [r7, #4]
 80053d2:	460b      	mov	r3, r1
 80053d4:	817b      	strh	r3, [r7, #10]
 80053d6:	4613      	mov	r3, r2
 80053d8:	727b      	strb	r3, [r7, #9]
 80053da:	897b      	ldrh	r3, [r7, #10]
 80053dc:	f3c3 0209 	ubfx	r2, r3, #0, #10
 80053e0:	7a7b      	ldrb	r3, [r7, #9]
 80053e2:	041b      	lsls	r3, r3, #16
 80053e4:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80053e8:	431a      	orrs	r2, r3
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	431a      	orrs	r2, r3
 80053ee:	6a3b      	ldr	r3, [r7, #32]
 80053f0:	4313      	orrs	r3, r2
 80053f2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80053f6:	617b      	str	r3, [r7, #20]
 80053f8:	68fb      	ldr	r3, [r7, #12]
 80053fa:	681b      	ldr	r3, [r3, #0]
 80053fc:	685a      	ldr	r2, [r3, #4]
 80053fe:	6a3b      	ldr	r3, [r7, #32]
 8005400:	0d5b      	lsrs	r3, r3, #21
 8005402:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8005406:	4b08      	ldr	r3, [pc, #32]	; (8005428 <I2C_TransferConfig+0x60>)
 8005408:	430b      	orrs	r3, r1
 800540a:	43db      	mvns	r3, r3
 800540c:	ea02 0103 	and.w	r1, r2, r3
 8005410:	68fb      	ldr	r3, [r7, #12]
 8005412:	681b      	ldr	r3, [r3, #0]
 8005414:	697a      	ldr	r2, [r7, #20]
 8005416:	430a      	orrs	r2, r1
 8005418:	605a      	str	r2, [r3, #4]
 800541a:	bf00      	nop
 800541c:	371c      	adds	r7, #28
 800541e:	46bd      	mov	sp, r7
 8005420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005424:	4770      	bx	lr
 8005426:	bf00      	nop
 8005428:	03ff63ff 	.word	0x03ff63ff

0800542c <HAL_I2CEx_ConfigAnalogFilter>:
 800542c:	b480      	push	{r7}
 800542e:	b083      	sub	sp, #12
 8005430:	af00      	add	r7, sp, #0
 8005432:	6078      	str	r0, [r7, #4]
 8005434:	6039      	str	r1, [r7, #0]
 8005436:	687b      	ldr	r3, [r7, #4]
 8005438:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800543c:	b2db      	uxtb	r3, r3
 800543e:	2b20      	cmp	r3, #32
 8005440:	d138      	bne.n	80054b4 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8005448:	2b01      	cmp	r3, #1
 800544a:	d101      	bne.n	8005450 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 800544c:	2302      	movs	r3, #2
 800544e:	e032      	b.n	80054b6 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	2201      	movs	r2, #1
 8005454:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	2224      	movs	r2, #36	; 0x24
 800545c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	681a      	ldr	r2, [r3, #0]
 8005466:	687b      	ldr	r3, [r7, #4]
 8005468:	681b      	ldr	r3, [r3, #0]
 800546a:	f022 0201 	bic.w	r2, r2, #1
 800546e:	601a      	str	r2, [r3, #0]
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	681b      	ldr	r3, [r3, #0]
 8005474:	681a      	ldr	r2, [r3, #0]
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	681b      	ldr	r3, [r3, #0]
 800547a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800547e:	601a      	str	r2, [r3, #0]
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	6819      	ldr	r1, [r3, #0]
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	683a      	ldr	r2, [r7, #0]
 800548c:	430a      	orrs	r2, r1
 800548e:	601a      	str	r2, [r3, #0]
 8005490:	687b      	ldr	r3, [r7, #4]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	681a      	ldr	r2, [r3, #0]
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	f042 0201 	orr.w	r2, r2, #1
 800549e:	601a      	str	r2, [r3, #0]
 80054a0:	687b      	ldr	r3, [r7, #4]
 80054a2:	2220      	movs	r2, #32
 80054a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	2200      	movs	r2, #0
 80054ac:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80054b0:	2300      	movs	r3, #0
 80054b2:	e000      	b.n	80054b6 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80054b4:	2302      	movs	r3, #2
 80054b6:	4618      	mov	r0, r3
 80054b8:	370c      	adds	r7, #12
 80054ba:	46bd      	mov	sp, r7
 80054bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054c0:	4770      	bx	lr

080054c2 <HAL_I2CEx_ConfigDigitalFilter>:
 80054c2:	b480      	push	{r7}
 80054c4:	b085      	sub	sp, #20
 80054c6:	af00      	add	r7, sp, #0
 80054c8:	6078      	str	r0, [r7, #4]
 80054ca:	6039      	str	r1, [r7, #0]
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80054d2:	b2db      	uxtb	r3, r3
 80054d4:	2b20      	cmp	r3, #32
 80054d6:	d139      	bne.n	800554c <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80054de:	2b01      	cmp	r3, #1
 80054e0:	d101      	bne.n	80054e6 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 80054e2:	2302      	movs	r3, #2
 80054e4:	e033      	b.n	800554e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	2201      	movs	r2, #1
 80054ea:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	2224      	movs	r2, #36	; 0x24
 80054f2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80054f6:	687b      	ldr	r3, [r7, #4]
 80054f8:	681b      	ldr	r3, [r3, #0]
 80054fa:	681a      	ldr	r2, [r3, #0]
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	f022 0201 	bic.w	r2, r2, #1
 8005504:	601a      	str	r2, [r3, #0]
 8005506:	687b      	ldr	r3, [r7, #4]
 8005508:	681b      	ldr	r3, [r3, #0]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	60fb      	str	r3, [r7, #12]
 800550e:	68fb      	ldr	r3, [r7, #12]
 8005510:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8005514:	60fb      	str	r3, [r7, #12]
 8005516:	683b      	ldr	r3, [r7, #0]
 8005518:	021b      	lsls	r3, r3, #8
 800551a:	68fa      	ldr	r2, [r7, #12]
 800551c:	4313      	orrs	r3, r2
 800551e:	60fb      	str	r3, [r7, #12]
 8005520:	687b      	ldr	r3, [r7, #4]
 8005522:	681b      	ldr	r3, [r3, #0]
 8005524:	68fa      	ldr	r2, [r7, #12]
 8005526:	601a      	str	r2, [r3, #0]
 8005528:	687b      	ldr	r3, [r7, #4]
 800552a:	681b      	ldr	r3, [r3, #0]
 800552c:	681a      	ldr	r2, [r3, #0]
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	681b      	ldr	r3, [r3, #0]
 8005532:	f042 0201 	orr.w	r2, r2, #1
 8005536:	601a      	str	r2, [r3, #0]
 8005538:	687b      	ldr	r3, [r7, #4]
 800553a:	2220      	movs	r2, #32
 800553c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	2200      	movs	r2, #0
 8005544:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005548:	2300      	movs	r3, #0
 800554a:	e000      	b.n	800554e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800554c:	2302      	movs	r3, #2
 800554e:	4618      	mov	r0, r3
 8005550:	3714      	adds	r7, #20
 8005552:	46bd      	mov	sp, r7
 8005554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005558:	4770      	bx	lr
	...

0800555c <HAL_PWREx_GetVoltageRange>:
 800555c:	b480      	push	{r7}
 800555e:	af00      	add	r7, sp, #0
 8005560:	4b04      	ldr	r3, [pc, #16]	; (8005574 <HAL_PWREx_GetVoltageRange+0x18>)
 8005562:	681b      	ldr	r3, [r3, #0]
 8005564:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8005568:	4618      	mov	r0, r3
 800556a:	46bd      	mov	sp, r7
 800556c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005570:	4770      	bx	lr
 8005572:	bf00      	nop
 8005574:	40007000 	.word	0x40007000

08005578 <HAL_PWREx_ControlVoltageScaling>:
 8005578:	b480      	push	{r7}
 800557a:	b085      	sub	sp, #20
 800557c:	af00      	add	r7, sp, #0
 800557e:	6078      	str	r0, [r7, #4]
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005586:	d130      	bne.n	80055ea <HAL_PWREx_ControlVoltageScaling+0x72>
 8005588:	4b23      	ldr	r3, [pc, #140]	; (8005618 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800558a:	681b      	ldr	r3, [r3, #0]
 800558c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8005590:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005594:	d038      	beq.n	8005608 <HAL_PWREx_ControlVoltageScaling+0x90>
 8005596:	4b20      	ldr	r3, [pc, #128]	; (8005618 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 800559e:	4a1e      	ldr	r2, [pc, #120]	; (8005618 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80055a0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80055a4:	6013      	str	r3, [r2, #0]
 80055a6:	4b1d      	ldr	r3, [pc, #116]	; (800561c <HAL_PWREx_ControlVoltageScaling+0xa4>)
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	2232      	movs	r2, #50	; 0x32
 80055ac:	fb02 f303 	mul.w	r3, r2, r3
 80055b0:	4a1b      	ldr	r2, [pc, #108]	; (8005620 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 80055b2:	fba2 2303 	umull	r2, r3, r2, r3
 80055b6:	0c9b      	lsrs	r3, r3, #18
 80055b8:	3301      	adds	r3, #1
 80055ba:	60fb      	str	r3, [r7, #12]
 80055bc:	e002      	b.n	80055c4 <HAL_PWREx_ControlVoltageScaling+0x4c>
 80055be:	68fb      	ldr	r3, [r7, #12]
 80055c0:	3b01      	subs	r3, #1
 80055c2:	60fb      	str	r3, [r7, #12]
 80055c4:	4b14      	ldr	r3, [pc, #80]	; (8005618 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80055c6:	695b      	ldr	r3, [r3, #20]
 80055c8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80055cc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80055d0:	d102      	bne.n	80055d8 <HAL_PWREx_ControlVoltageScaling+0x60>
 80055d2:	68fb      	ldr	r3, [r7, #12]
 80055d4:	2b00      	cmp	r3, #0
 80055d6:	d1f2      	bne.n	80055be <HAL_PWREx_ControlVoltageScaling+0x46>
 80055d8:	4b0f      	ldr	r3, [pc, #60]	; (8005618 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80055da:	695b      	ldr	r3, [r3, #20]
 80055dc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80055e0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80055e4:	d110      	bne.n	8005608 <HAL_PWREx_ControlVoltageScaling+0x90>
 80055e6:	2303      	movs	r3, #3
 80055e8:	e00f      	b.n	800560a <HAL_PWREx_ControlVoltageScaling+0x92>
 80055ea:	4b0b      	ldr	r3, [pc, #44]	; (8005618 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80055ec:	681b      	ldr	r3, [r3, #0]
 80055ee:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80055f2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80055f6:	d007      	beq.n	8005608 <HAL_PWREx_ControlVoltageScaling+0x90>
 80055f8:	4b07      	ldr	r3, [pc, #28]	; (8005618 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80055fa:	681b      	ldr	r3, [r3, #0]
 80055fc:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8005600:	4a05      	ldr	r2, [pc, #20]	; (8005618 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8005602:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8005606:	6013      	str	r3, [r2, #0]
 8005608:	2300      	movs	r3, #0
 800560a:	4618      	mov	r0, r3
 800560c:	3714      	adds	r7, #20
 800560e:	46bd      	mov	sp, r7
 8005610:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005614:	4770      	bx	lr
 8005616:	bf00      	nop
 8005618:	40007000 	.word	0x40007000
 800561c:	2000000c 	.word	0x2000000c
 8005620:	431bde83 	.word	0x431bde83

08005624 <HAL_RCC_OscConfig>:
 8005624:	b580      	push	{r7, lr}
 8005626:	b088      	sub	sp, #32
 8005628:	af00      	add	r7, sp, #0
 800562a:	6078      	str	r0, [r7, #4]
 800562c:	687b      	ldr	r3, [r7, #4]
 800562e:	2b00      	cmp	r3, #0
 8005630:	d102      	bne.n	8005638 <HAL_RCC_OscConfig+0x14>
 8005632:	2301      	movs	r3, #1
 8005634:	f000 bc02 	b.w	8005e3c <HAL_RCC_OscConfig+0x818>
 8005638:	4b96      	ldr	r3, [pc, #600]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 800563a:	689b      	ldr	r3, [r3, #8]
 800563c:	f003 030c 	and.w	r3, r3, #12
 8005640:	61bb      	str	r3, [r7, #24]
 8005642:	4b94      	ldr	r3, [pc, #592]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005644:	68db      	ldr	r3, [r3, #12]
 8005646:	f003 0303 	and.w	r3, r3, #3
 800564a:	617b      	str	r3, [r7, #20]
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	f003 0310 	and.w	r3, r3, #16
 8005654:	2b00      	cmp	r3, #0
 8005656:	f000 80e4 	beq.w	8005822 <HAL_RCC_OscConfig+0x1fe>
 800565a:	69bb      	ldr	r3, [r7, #24]
 800565c:	2b00      	cmp	r3, #0
 800565e:	d007      	beq.n	8005670 <HAL_RCC_OscConfig+0x4c>
 8005660:	69bb      	ldr	r3, [r7, #24]
 8005662:	2b0c      	cmp	r3, #12
 8005664:	f040 808b 	bne.w	800577e <HAL_RCC_OscConfig+0x15a>
 8005668:	697b      	ldr	r3, [r7, #20]
 800566a:	2b01      	cmp	r3, #1
 800566c:	f040 8087 	bne.w	800577e <HAL_RCC_OscConfig+0x15a>
 8005670:	4b88      	ldr	r3, [pc, #544]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	f003 0302 	and.w	r3, r3, #2
 8005678:	2b00      	cmp	r3, #0
 800567a:	d005      	beq.n	8005688 <HAL_RCC_OscConfig+0x64>
 800567c:	687b      	ldr	r3, [r7, #4]
 800567e:	699b      	ldr	r3, [r3, #24]
 8005680:	2b00      	cmp	r3, #0
 8005682:	d101      	bne.n	8005688 <HAL_RCC_OscConfig+0x64>
 8005684:	2301      	movs	r3, #1
 8005686:	e3d9      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	6a1a      	ldr	r2, [r3, #32]
 800568c:	4b81      	ldr	r3, [pc, #516]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 800568e:	681b      	ldr	r3, [r3, #0]
 8005690:	f003 0308 	and.w	r3, r3, #8
 8005694:	2b00      	cmp	r3, #0
 8005696:	d004      	beq.n	80056a2 <HAL_RCC_OscConfig+0x7e>
 8005698:	4b7e      	ldr	r3, [pc, #504]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 800569a:	681b      	ldr	r3, [r3, #0]
 800569c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80056a0:	e005      	b.n	80056ae <HAL_RCC_OscConfig+0x8a>
 80056a2:	4b7c      	ldr	r3, [pc, #496]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80056a4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80056a8:	091b      	lsrs	r3, r3, #4
 80056aa:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80056ae:	4293      	cmp	r3, r2
 80056b0:	d223      	bcs.n	80056fa <HAL_RCC_OscConfig+0xd6>
 80056b2:	687b      	ldr	r3, [r7, #4]
 80056b4:	6a1b      	ldr	r3, [r3, #32]
 80056b6:	4618      	mov	r0, r3
 80056b8:	f000 fd54 	bl	8006164 <RCC_SetFlashLatencyFromMSIRange>
 80056bc:	4603      	mov	r3, r0
 80056be:	2b00      	cmp	r3, #0
 80056c0:	d001      	beq.n	80056c6 <HAL_RCC_OscConfig+0xa2>
 80056c2:	2301      	movs	r3, #1
 80056c4:	e3ba      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 80056c6:	4b73      	ldr	r3, [pc, #460]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	4a72      	ldr	r2, [pc, #456]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80056cc:	f043 0308 	orr.w	r3, r3, #8
 80056d0:	6013      	str	r3, [r2, #0]
 80056d2:	4b70      	ldr	r3, [pc, #448]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80056d4:	681b      	ldr	r3, [r3, #0]
 80056d6:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80056da:	687b      	ldr	r3, [r7, #4]
 80056dc:	6a1b      	ldr	r3, [r3, #32]
 80056de:	496d      	ldr	r1, [pc, #436]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80056e0:	4313      	orrs	r3, r2
 80056e2:	600b      	str	r3, [r1, #0]
 80056e4:	4b6b      	ldr	r3, [pc, #428]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80056e6:	685b      	ldr	r3, [r3, #4]
 80056e8:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	69db      	ldr	r3, [r3, #28]
 80056f0:	021b      	lsls	r3, r3, #8
 80056f2:	4968      	ldr	r1, [pc, #416]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80056f4:	4313      	orrs	r3, r2
 80056f6:	604b      	str	r3, [r1, #4]
 80056f8:	e025      	b.n	8005746 <HAL_RCC_OscConfig+0x122>
 80056fa:	4b66      	ldr	r3, [pc, #408]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	4a65      	ldr	r2, [pc, #404]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005700:	f043 0308 	orr.w	r3, r3, #8
 8005704:	6013      	str	r3, [r2, #0]
 8005706:	4b63      	ldr	r3, [pc, #396]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005708:	681b      	ldr	r3, [r3, #0]
 800570a:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	6a1b      	ldr	r3, [r3, #32]
 8005712:	4960      	ldr	r1, [pc, #384]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005714:	4313      	orrs	r3, r2
 8005716:	600b      	str	r3, [r1, #0]
 8005718:	4b5e      	ldr	r3, [pc, #376]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 800571a:	685b      	ldr	r3, [r3, #4]
 800571c:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8005720:	687b      	ldr	r3, [r7, #4]
 8005722:	69db      	ldr	r3, [r3, #28]
 8005724:	021b      	lsls	r3, r3, #8
 8005726:	495b      	ldr	r1, [pc, #364]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005728:	4313      	orrs	r3, r2
 800572a:	604b      	str	r3, [r1, #4]
 800572c:	69bb      	ldr	r3, [r7, #24]
 800572e:	2b00      	cmp	r3, #0
 8005730:	d109      	bne.n	8005746 <HAL_RCC_OscConfig+0x122>
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	6a1b      	ldr	r3, [r3, #32]
 8005736:	4618      	mov	r0, r3
 8005738:	f000 fd14 	bl	8006164 <RCC_SetFlashLatencyFromMSIRange>
 800573c:	4603      	mov	r3, r0
 800573e:	2b00      	cmp	r3, #0
 8005740:	d001      	beq.n	8005746 <HAL_RCC_OscConfig+0x122>
 8005742:	2301      	movs	r3, #1
 8005744:	e37a      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005746:	f000 fc81 	bl	800604c <HAL_RCC_GetSysClockFreq>
 800574a:	4602      	mov	r2, r0
 800574c:	4b51      	ldr	r3, [pc, #324]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 800574e:	689b      	ldr	r3, [r3, #8]
 8005750:	091b      	lsrs	r3, r3, #4
 8005752:	f003 030f 	and.w	r3, r3, #15
 8005756:	4950      	ldr	r1, [pc, #320]	; (8005898 <HAL_RCC_OscConfig+0x274>)
 8005758:	5ccb      	ldrb	r3, [r1, r3]
 800575a:	f003 031f 	and.w	r3, r3, #31
 800575e:	fa22 f303 	lsr.w	r3, r2, r3
 8005762:	4a4e      	ldr	r2, [pc, #312]	; (800589c <HAL_RCC_OscConfig+0x278>)
 8005764:	6013      	str	r3, [r2, #0]
 8005766:	4b4e      	ldr	r3, [pc, #312]	; (80058a0 <HAL_RCC_OscConfig+0x27c>)
 8005768:	681b      	ldr	r3, [r3, #0]
 800576a:	4618      	mov	r0, r3
 800576c:	f7fd faf8 	bl	8002d60 <HAL_InitTick>
 8005770:	4603      	mov	r3, r0
 8005772:	73fb      	strb	r3, [r7, #15]
 8005774:	7bfb      	ldrb	r3, [r7, #15]
 8005776:	2b00      	cmp	r3, #0
 8005778:	d052      	beq.n	8005820 <HAL_RCC_OscConfig+0x1fc>
 800577a:	7bfb      	ldrb	r3, [r7, #15]
 800577c:	e35e      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 800577e:	687b      	ldr	r3, [r7, #4]
 8005780:	699b      	ldr	r3, [r3, #24]
 8005782:	2b00      	cmp	r3, #0
 8005784:	d032      	beq.n	80057ec <HAL_RCC_OscConfig+0x1c8>
 8005786:	4b43      	ldr	r3, [pc, #268]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	4a42      	ldr	r2, [pc, #264]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 800578c:	f043 0301 	orr.w	r3, r3, #1
 8005790:	6013      	str	r3, [r2, #0]
 8005792:	f7fd fb35 	bl	8002e00 <HAL_GetTick>
 8005796:	6138      	str	r0, [r7, #16]
 8005798:	e008      	b.n	80057ac <HAL_RCC_OscConfig+0x188>
 800579a:	f7fd fb31 	bl	8002e00 <HAL_GetTick>
 800579e:	4602      	mov	r2, r0
 80057a0:	693b      	ldr	r3, [r7, #16]
 80057a2:	1ad3      	subs	r3, r2, r3
 80057a4:	2b02      	cmp	r3, #2
 80057a6:	d901      	bls.n	80057ac <HAL_RCC_OscConfig+0x188>
 80057a8:	2303      	movs	r3, #3
 80057aa:	e347      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 80057ac:	4b39      	ldr	r3, [pc, #228]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80057ae:	681b      	ldr	r3, [r3, #0]
 80057b0:	f003 0302 	and.w	r3, r3, #2
 80057b4:	2b00      	cmp	r3, #0
 80057b6:	d0f0      	beq.n	800579a <HAL_RCC_OscConfig+0x176>
 80057b8:	4b36      	ldr	r3, [pc, #216]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80057ba:	681b      	ldr	r3, [r3, #0]
 80057bc:	4a35      	ldr	r2, [pc, #212]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80057be:	f043 0308 	orr.w	r3, r3, #8
 80057c2:	6013      	str	r3, [r2, #0]
 80057c4:	4b33      	ldr	r3, [pc, #204]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80057c6:	681b      	ldr	r3, [r3, #0]
 80057c8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	6a1b      	ldr	r3, [r3, #32]
 80057d0:	4930      	ldr	r1, [pc, #192]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80057d2:	4313      	orrs	r3, r2
 80057d4:	600b      	str	r3, [r1, #0]
 80057d6:	4b2f      	ldr	r3, [pc, #188]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80057d8:	685b      	ldr	r3, [r3, #4]
 80057da:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 80057de:	687b      	ldr	r3, [r7, #4]
 80057e0:	69db      	ldr	r3, [r3, #28]
 80057e2:	021b      	lsls	r3, r3, #8
 80057e4:	492b      	ldr	r1, [pc, #172]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80057e6:	4313      	orrs	r3, r2
 80057e8:	604b      	str	r3, [r1, #4]
 80057ea:	e01a      	b.n	8005822 <HAL_RCC_OscConfig+0x1fe>
 80057ec:	4b29      	ldr	r3, [pc, #164]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80057ee:	681b      	ldr	r3, [r3, #0]
 80057f0:	4a28      	ldr	r2, [pc, #160]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 80057f2:	f023 0301 	bic.w	r3, r3, #1
 80057f6:	6013      	str	r3, [r2, #0]
 80057f8:	f7fd fb02 	bl	8002e00 <HAL_GetTick>
 80057fc:	6138      	str	r0, [r7, #16]
 80057fe:	e008      	b.n	8005812 <HAL_RCC_OscConfig+0x1ee>
 8005800:	f7fd fafe 	bl	8002e00 <HAL_GetTick>
 8005804:	4602      	mov	r2, r0
 8005806:	693b      	ldr	r3, [r7, #16]
 8005808:	1ad3      	subs	r3, r2, r3
 800580a:	2b02      	cmp	r3, #2
 800580c:	d901      	bls.n	8005812 <HAL_RCC_OscConfig+0x1ee>
 800580e:	2303      	movs	r3, #3
 8005810:	e314      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005812:	4b20      	ldr	r3, [pc, #128]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	f003 0302 	and.w	r3, r3, #2
 800581a:	2b00      	cmp	r3, #0
 800581c:	d1f0      	bne.n	8005800 <HAL_RCC_OscConfig+0x1dc>
 800581e:	e000      	b.n	8005822 <HAL_RCC_OscConfig+0x1fe>
 8005820:	bf00      	nop
 8005822:	687b      	ldr	r3, [r7, #4]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	f003 0301 	and.w	r3, r3, #1
 800582a:	2b00      	cmp	r3, #0
 800582c:	d073      	beq.n	8005916 <HAL_RCC_OscConfig+0x2f2>
 800582e:	69bb      	ldr	r3, [r7, #24]
 8005830:	2b08      	cmp	r3, #8
 8005832:	d005      	beq.n	8005840 <HAL_RCC_OscConfig+0x21c>
 8005834:	69bb      	ldr	r3, [r7, #24]
 8005836:	2b0c      	cmp	r3, #12
 8005838:	d10e      	bne.n	8005858 <HAL_RCC_OscConfig+0x234>
 800583a:	697b      	ldr	r3, [r7, #20]
 800583c:	2b03      	cmp	r3, #3
 800583e:	d10b      	bne.n	8005858 <HAL_RCC_OscConfig+0x234>
 8005840:	4b14      	ldr	r3, [pc, #80]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005842:	681b      	ldr	r3, [r3, #0]
 8005844:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005848:	2b00      	cmp	r3, #0
 800584a:	d063      	beq.n	8005914 <HAL_RCC_OscConfig+0x2f0>
 800584c:	687b      	ldr	r3, [r7, #4]
 800584e:	685b      	ldr	r3, [r3, #4]
 8005850:	2b00      	cmp	r3, #0
 8005852:	d15f      	bne.n	8005914 <HAL_RCC_OscConfig+0x2f0>
 8005854:	2301      	movs	r3, #1
 8005856:	e2f1      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	685b      	ldr	r3, [r3, #4]
 800585c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005860:	d106      	bne.n	8005870 <HAL_RCC_OscConfig+0x24c>
 8005862:	4b0c      	ldr	r3, [pc, #48]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005864:	681b      	ldr	r3, [r3, #0]
 8005866:	4a0b      	ldr	r2, [pc, #44]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005868:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800586c:	6013      	str	r3, [r2, #0]
 800586e:	e025      	b.n	80058bc <HAL_RCC_OscConfig+0x298>
 8005870:	687b      	ldr	r3, [r7, #4]
 8005872:	685b      	ldr	r3, [r3, #4]
 8005874:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005878:	d114      	bne.n	80058a4 <HAL_RCC_OscConfig+0x280>
 800587a:	4b06      	ldr	r3, [pc, #24]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	4a05      	ldr	r2, [pc, #20]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005880:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005884:	6013      	str	r3, [r2, #0]
 8005886:	4b03      	ldr	r3, [pc, #12]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 8005888:	681b      	ldr	r3, [r3, #0]
 800588a:	4a02      	ldr	r2, [pc, #8]	; (8005894 <HAL_RCC_OscConfig+0x270>)
 800588c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005890:	6013      	str	r3, [r2, #0]
 8005892:	e013      	b.n	80058bc <HAL_RCC_OscConfig+0x298>
 8005894:	40021000 	.word	0x40021000
 8005898:	0800ca58 	.word	0x0800ca58
 800589c:	2000000c 	.word	0x2000000c
 80058a0:	20000010 	.word	0x20000010
 80058a4:	4ba0      	ldr	r3, [pc, #640]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 80058a6:	681b      	ldr	r3, [r3, #0]
 80058a8:	4a9f      	ldr	r2, [pc, #636]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 80058aa:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80058ae:	6013      	str	r3, [r2, #0]
 80058b0:	4b9d      	ldr	r3, [pc, #628]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 80058b2:	681b      	ldr	r3, [r3, #0]
 80058b4:	4a9c      	ldr	r2, [pc, #624]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 80058b6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80058ba:	6013      	str	r3, [r2, #0]
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	685b      	ldr	r3, [r3, #4]
 80058c0:	2b00      	cmp	r3, #0
 80058c2:	d013      	beq.n	80058ec <HAL_RCC_OscConfig+0x2c8>
 80058c4:	f7fd fa9c 	bl	8002e00 <HAL_GetTick>
 80058c8:	6138      	str	r0, [r7, #16]
 80058ca:	e008      	b.n	80058de <HAL_RCC_OscConfig+0x2ba>
 80058cc:	f7fd fa98 	bl	8002e00 <HAL_GetTick>
 80058d0:	4602      	mov	r2, r0
 80058d2:	693b      	ldr	r3, [r7, #16]
 80058d4:	1ad3      	subs	r3, r2, r3
 80058d6:	2b64      	cmp	r3, #100	; 0x64
 80058d8:	d901      	bls.n	80058de <HAL_RCC_OscConfig+0x2ba>
 80058da:	2303      	movs	r3, #3
 80058dc:	e2ae      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 80058de:	4b92      	ldr	r3, [pc, #584]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 80058e0:	681b      	ldr	r3, [r3, #0]
 80058e2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	d0f0      	beq.n	80058cc <HAL_RCC_OscConfig+0x2a8>
 80058ea:	e014      	b.n	8005916 <HAL_RCC_OscConfig+0x2f2>
 80058ec:	f7fd fa88 	bl	8002e00 <HAL_GetTick>
 80058f0:	6138      	str	r0, [r7, #16]
 80058f2:	e008      	b.n	8005906 <HAL_RCC_OscConfig+0x2e2>
 80058f4:	f7fd fa84 	bl	8002e00 <HAL_GetTick>
 80058f8:	4602      	mov	r2, r0
 80058fa:	693b      	ldr	r3, [r7, #16]
 80058fc:	1ad3      	subs	r3, r2, r3
 80058fe:	2b64      	cmp	r3, #100	; 0x64
 8005900:	d901      	bls.n	8005906 <HAL_RCC_OscConfig+0x2e2>
 8005902:	2303      	movs	r3, #3
 8005904:	e29a      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005906:	4b88      	ldr	r3, [pc, #544]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005908:	681b      	ldr	r3, [r3, #0]
 800590a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800590e:	2b00      	cmp	r3, #0
 8005910:	d1f0      	bne.n	80058f4 <HAL_RCC_OscConfig+0x2d0>
 8005912:	e000      	b.n	8005916 <HAL_RCC_OscConfig+0x2f2>
 8005914:	bf00      	nop
 8005916:	687b      	ldr	r3, [r7, #4]
 8005918:	681b      	ldr	r3, [r3, #0]
 800591a:	f003 0302 	and.w	r3, r3, #2
 800591e:	2b00      	cmp	r3, #0
 8005920:	d060      	beq.n	80059e4 <HAL_RCC_OscConfig+0x3c0>
 8005922:	69bb      	ldr	r3, [r7, #24]
 8005924:	2b04      	cmp	r3, #4
 8005926:	d005      	beq.n	8005934 <HAL_RCC_OscConfig+0x310>
 8005928:	69bb      	ldr	r3, [r7, #24]
 800592a:	2b0c      	cmp	r3, #12
 800592c:	d119      	bne.n	8005962 <HAL_RCC_OscConfig+0x33e>
 800592e:	697b      	ldr	r3, [r7, #20]
 8005930:	2b02      	cmp	r3, #2
 8005932:	d116      	bne.n	8005962 <HAL_RCC_OscConfig+0x33e>
 8005934:	4b7c      	ldr	r3, [pc, #496]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800593c:	2b00      	cmp	r3, #0
 800593e:	d005      	beq.n	800594c <HAL_RCC_OscConfig+0x328>
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	68db      	ldr	r3, [r3, #12]
 8005944:	2b00      	cmp	r3, #0
 8005946:	d101      	bne.n	800594c <HAL_RCC_OscConfig+0x328>
 8005948:	2301      	movs	r3, #1
 800594a:	e277      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 800594c:	4b76      	ldr	r3, [pc, #472]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 800594e:	685b      	ldr	r3, [r3, #4]
 8005950:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 8005954:	687b      	ldr	r3, [r7, #4]
 8005956:	691b      	ldr	r3, [r3, #16]
 8005958:	061b      	lsls	r3, r3, #24
 800595a:	4973      	ldr	r1, [pc, #460]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 800595c:	4313      	orrs	r3, r2
 800595e:	604b      	str	r3, [r1, #4]
 8005960:	e040      	b.n	80059e4 <HAL_RCC_OscConfig+0x3c0>
 8005962:	687b      	ldr	r3, [r7, #4]
 8005964:	68db      	ldr	r3, [r3, #12]
 8005966:	2b00      	cmp	r3, #0
 8005968:	d023      	beq.n	80059b2 <HAL_RCC_OscConfig+0x38e>
 800596a:	4b6f      	ldr	r3, [pc, #444]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 800596c:	681b      	ldr	r3, [r3, #0]
 800596e:	4a6e      	ldr	r2, [pc, #440]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005970:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005974:	6013      	str	r3, [r2, #0]
 8005976:	f7fd fa43 	bl	8002e00 <HAL_GetTick>
 800597a:	6138      	str	r0, [r7, #16]
 800597c:	e008      	b.n	8005990 <HAL_RCC_OscConfig+0x36c>
 800597e:	f7fd fa3f 	bl	8002e00 <HAL_GetTick>
 8005982:	4602      	mov	r2, r0
 8005984:	693b      	ldr	r3, [r7, #16]
 8005986:	1ad3      	subs	r3, r2, r3
 8005988:	2b02      	cmp	r3, #2
 800598a:	d901      	bls.n	8005990 <HAL_RCC_OscConfig+0x36c>
 800598c:	2303      	movs	r3, #3
 800598e:	e255      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005990:	4b65      	ldr	r3, [pc, #404]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005992:	681b      	ldr	r3, [r3, #0]
 8005994:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005998:	2b00      	cmp	r3, #0
 800599a:	d0f0      	beq.n	800597e <HAL_RCC_OscConfig+0x35a>
 800599c:	4b62      	ldr	r3, [pc, #392]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 800599e:	685b      	ldr	r3, [r3, #4]
 80059a0:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	691b      	ldr	r3, [r3, #16]
 80059a8:	061b      	lsls	r3, r3, #24
 80059aa:	495f      	ldr	r1, [pc, #380]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 80059ac:	4313      	orrs	r3, r2
 80059ae:	604b      	str	r3, [r1, #4]
 80059b0:	e018      	b.n	80059e4 <HAL_RCC_OscConfig+0x3c0>
 80059b2:	4b5d      	ldr	r3, [pc, #372]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	4a5c      	ldr	r2, [pc, #368]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 80059b8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80059bc:	6013      	str	r3, [r2, #0]
 80059be:	f7fd fa1f 	bl	8002e00 <HAL_GetTick>
 80059c2:	6138      	str	r0, [r7, #16]
 80059c4:	e008      	b.n	80059d8 <HAL_RCC_OscConfig+0x3b4>
 80059c6:	f7fd fa1b 	bl	8002e00 <HAL_GetTick>
 80059ca:	4602      	mov	r2, r0
 80059cc:	693b      	ldr	r3, [r7, #16]
 80059ce:	1ad3      	subs	r3, r2, r3
 80059d0:	2b02      	cmp	r3, #2
 80059d2:	d901      	bls.n	80059d8 <HAL_RCC_OscConfig+0x3b4>
 80059d4:	2303      	movs	r3, #3
 80059d6:	e231      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 80059d8:	4b53      	ldr	r3, [pc, #332]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 80059da:	681b      	ldr	r3, [r3, #0]
 80059dc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80059e0:	2b00      	cmp	r3, #0
 80059e2:	d1f0      	bne.n	80059c6 <HAL_RCC_OscConfig+0x3a2>
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	681b      	ldr	r3, [r3, #0]
 80059e8:	f003 0308 	and.w	r3, r3, #8
 80059ec:	2b00      	cmp	r3, #0
 80059ee:	d03c      	beq.n	8005a6a <HAL_RCC_OscConfig+0x446>
 80059f0:	687b      	ldr	r3, [r7, #4]
 80059f2:	695b      	ldr	r3, [r3, #20]
 80059f4:	2b00      	cmp	r3, #0
 80059f6:	d01c      	beq.n	8005a32 <HAL_RCC_OscConfig+0x40e>
 80059f8:	4b4b      	ldr	r3, [pc, #300]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 80059fa:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80059fe:	4a4a      	ldr	r2, [pc, #296]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005a00:	f043 0301 	orr.w	r3, r3, #1
 8005a04:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8005a08:	f7fd f9fa 	bl	8002e00 <HAL_GetTick>
 8005a0c:	6138      	str	r0, [r7, #16]
 8005a0e:	e008      	b.n	8005a22 <HAL_RCC_OscConfig+0x3fe>
 8005a10:	f7fd f9f6 	bl	8002e00 <HAL_GetTick>
 8005a14:	4602      	mov	r2, r0
 8005a16:	693b      	ldr	r3, [r7, #16]
 8005a18:	1ad3      	subs	r3, r2, r3
 8005a1a:	2b02      	cmp	r3, #2
 8005a1c:	d901      	bls.n	8005a22 <HAL_RCC_OscConfig+0x3fe>
 8005a1e:	2303      	movs	r3, #3
 8005a20:	e20c      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005a22:	4b41      	ldr	r3, [pc, #260]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005a24:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8005a28:	f003 0302 	and.w	r3, r3, #2
 8005a2c:	2b00      	cmp	r3, #0
 8005a2e:	d0ef      	beq.n	8005a10 <HAL_RCC_OscConfig+0x3ec>
 8005a30:	e01b      	b.n	8005a6a <HAL_RCC_OscConfig+0x446>
 8005a32:	4b3d      	ldr	r3, [pc, #244]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005a34:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8005a38:	4a3b      	ldr	r2, [pc, #236]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005a3a:	f023 0301 	bic.w	r3, r3, #1
 8005a3e:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8005a42:	f7fd f9dd 	bl	8002e00 <HAL_GetTick>
 8005a46:	6138      	str	r0, [r7, #16]
 8005a48:	e008      	b.n	8005a5c <HAL_RCC_OscConfig+0x438>
 8005a4a:	f7fd f9d9 	bl	8002e00 <HAL_GetTick>
 8005a4e:	4602      	mov	r2, r0
 8005a50:	693b      	ldr	r3, [r7, #16]
 8005a52:	1ad3      	subs	r3, r2, r3
 8005a54:	2b02      	cmp	r3, #2
 8005a56:	d901      	bls.n	8005a5c <HAL_RCC_OscConfig+0x438>
 8005a58:	2303      	movs	r3, #3
 8005a5a:	e1ef      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005a5c:	4b32      	ldr	r3, [pc, #200]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005a5e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8005a62:	f003 0302 	and.w	r3, r3, #2
 8005a66:	2b00      	cmp	r3, #0
 8005a68:	d1ef      	bne.n	8005a4a <HAL_RCC_OscConfig+0x426>
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	681b      	ldr	r3, [r3, #0]
 8005a6e:	f003 0304 	and.w	r3, r3, #4
 8005a72:	2b00      	cmp	r3, #0
 8005a74:	f000 80a6 	beq.w	8005bc4 <HAL_RCC_OscConfig+0x5a0>
 8005a78:	2300      	movs	r3, #0
 8005a7a:	77fb      	strb	r3, [r7, #31]
 8005a7c:	4b2a      	ldr	r3, [pc, #168]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005a7e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005a80:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005a84:	2b00      	cmp	r3, #0
 8005a86:	d10d      	bne.n	8005aa4 <HAL_RCC_OscConfig+0x480>
 8005a88:	4b27      	ldr	r3, [pc, #156]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005a8a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005a8c:	4a26      	ldr	r2, [pc, #152]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005a8e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005a92:	6593      	str	r3, [r2, #88]	; 0x58
 8005a94:	4b24      	ldr	r3, [pc, #144]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005a96:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005a98:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005a9c:	60bb      	str	r3, [r7, #8]
 8005a9e:	68bb      	ldr	r3, [r7, #8]
 8005aa0:	2301      	movs	r3, #1
 8005aa2:	77fb      	strb	r3, [r7, #31]
 8005aa4:	4b21      	ldr	r3, [pc, #132]	; (8005b2c <HAL_RCC_OscConfig+0x508>)
 8005aa6:	681b      	ldr	r3, [r3, #0]
 8005aa8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005aac:	2b00      	cmp	r3, #0
 8005aae:	d118      	bne.n	8005ae2 <HAL_RCC_OscConfig+0x4be>
 8005ab0:	4b1e      	ldr	r3, [pc, #120]	; (8005b2c <HAL_RCC_OscConfig+0x508>)
 8005ab2:	681b      	ldr	r3, [r3, #0]
 8005ab4:	4a1d      	ldr	r2, [pc, #116]	; (8005b2c <HAL_RCC_OscConfig+0x508>)
 8005ab6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005aba:	6013      	str	r3, [r2, #0]
 8005abc:	f7fd f9a0 	bl	8002e00 <HAL_GetTick>
 8005ac0:	6138      	str	r0, [r7, #16]
 8005ac2:	e008      	b.n	8005ad6 <HAL_RCC_OscConfig+0x4b2>
 8005ac4:	f7fd f99c 	bl	8002e00 <HAL_GetTick>
 8005ac8:	4602      	mov	r2, r0
 8005aca:	693b      	ldr	r3, [r7, #16]
 8005acc:	1ad3      	subs	r3, r2, r3
 8005ace:	2b02      	cmp	r3, #2
 8005ad0:	d901      	bls.n	8005ad6 <HAL_RCC_OscConfig+0x4b2>
 8005ad2:	2303      	movs	r3, #3
 8005ad4:	e1b2      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005ad6:	4b15      	ldr	r3, [pc, #84]	; (8005b2c <HAL_RCC_OscConfig+0x508>)
 8005ad8:	681b      	ldr	r3, [r3, #0]
 8005ada:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005ade:	2b00      	cmp	r3, #0
 8005ae0:	d0f0      	beq.n	8005ac4 <HAL_RCC_OscConfig+0x4a0>
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	689b      	ldr	r3, [r3, #8]
 8005ae6:	2b01      	cmp	r3, #1
 8005ae8:	d108      	bne.n	8005afc <HAL_RCC_OscConfig+0x4d8>
 8005aea:	4b0f      	ldr	r3, [pc, #60]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005aec:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005af0:	4a0d      	ldr	r2, [pc, #52]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005af2:	f043 0301 	orr.w	r3, r3, #1
 8005af6:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8005afa:	e029      	b.n	8005b50 <HAL_RCC_OscConfig+0x52c>
 8005afc:	687b      	ldr	r3, [r7, #4]
 8005afe:	689b      	ldr	r3, [r3, #8]
 8005b00:	2b05      	cmp	r3, #5
 8005b02:	d115      	bne.n	8005b30 <HAL_RCC_OscConfig+0x50c>
 8005b04:	4b08      	ldr	r3, [pc, #32]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005b06:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005b0a:	4a07      	ldr	r2, [pc, #28]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005b0c:	f043 0304 	orr.w	r3, r3, #4
 8005b10:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8005b14:	4b04      	ldr	r3, [pc, #16]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005b16:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005b1a:	4a03      	ldr	r2, [pc, #12]	; (8005b28 <HAL_RCC_OscConfig+0x504>)
 8005b1c:	f043 0301 	orr.w	r3, r3, #1
 8005b20:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8005b24:	e014      	b.n	8005b50 <HAL_RCC_OscConfig+0x52c>
 8005b26:	bf00      	nop
 8005b28:	40021000 	.word	0x40021000
 8005b2c:	40007000 	.word	0x40007000
 8005b30:	4b9a      	ldr	r3, [pc, #616]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005b32:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005b36:	4a99      	ldr	r2, [pc, #612]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005b38:	f023 0301 	bic.w	r3, r3, #1
 8005b3c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8005b40:	4b96      	ldr	r3, [pc, #600]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005b42:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005b46:	4a95      	ldr	r2, [pc, #596]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005b48:	f023 0304 	bic.w	r3, r3, #4
 8005b4c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8005b50:	687b      	ldr	r3, [r7, #4]
 8005b52:	689b      	ldr	r3, [r3, #8]
 8005b54:	2b00      	cmp	r3, #0
 8005b56:	d016      	beq.n	8005b86 <HAL_RCC_OscConfig+0x562>
 8005b58:	f7fd f952 	bl	8002e00 <HAL_GetTick>
 8005b5c:	6138      	str	r0, [r7, #16]
 8005b5e:	e00a      	b.n	8005b76 <HAL_RCC_OscConfig+0x552>
 8005b60:	f7fd f94e 	bl	8002e00 <HAL_GetTick>
 8005b64:	4602      	mov	r2, r0
 8005b66:	693b      	ldr	r3, [r7, #16]
 8005b68:	1ad3      	subs	r3, r2, r3
 8005b6a:	f241 3288 	movw	r2, #5000	; 0x1388
 8005b6e:	4293      	cmp	r3, r2
 8005b70:	d901      	bls.n	8005b76 <HAL_RCC_OscConfig+0x552>
 8005b72:	2303      	movs	r3, #3
 8005b74:	e162      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005b76:	4b89      	ldr	r3, [pc, #548]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005b78:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005b7c:	f003 0302 	and.w	r3, r3, #2
 8005b80:	2b00      	cmp	r3, #0
 8005b82:	d0ed      	beq.n	8005b60 <HAL_RCC_OscConfig+0x53c>
 8005b84:	e015      	b.n	8005bb2 <HAL_RCC_OscConfig+0x58e>
 8005b86:	f7fd f93b 	bl	8002e00 <HAL_GetTick>
 8005b8a:	6138      	str	r0, [r7, #16]
 8005b8c:	e00a      	b.n	8005ba4 <HAL_RCC_OscConfig+0x580>
 8005b8e:	f7fd f937 	bl	8002e00 <HAL_GetTick>
 8005b92:	4602      	mov	r2, r0
 8005b94:	693b      	ldr	r3, [r7, #16]
 8005b96:	1ad3      	subs	r3, r2, r3
 8005b98:	f241 3288 	movw	r2, #5000	; 0x1388
 8005b9c:	4293      	cmp	r3, r2
 8005b9e:	d901      	bls.n	8005ba4 <HAL_RCC_OscConfig+0x580>
 8005ba0:	2303      	movs	r3, #3
 8005ba2:	e14b      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005ba4:	4b7d      	ldr	r3, [pc, #500]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005ba6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005baa:	f003 0302 	and.w	r3, r3, #2
 8005bae:	2b00      	cmp	r3, #0
 8005bb0:	d1ed      	bne.n	8005b8e <HAL_RCC_OscConfig+0x56a>
 8005bb2:	7ffb      	ldrb	r3, [r7, #31]
 8005bb4:	2b01      	cmp	r3, #1
 8005bb6:	d105      	bne.n	8005bc4 <HAL_RCC_OscConfig+0x5a0>
 8005bb8:	4b78      	ldr	r3, [pc, #480]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005bba:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005bbc:	4a77      	ldr	r2, [pc, #476]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005bbe:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005bc2:	6593      	str	r3, [r2, #88]	; 0x58
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	681b      	ldr	r3, [r3, #0]
 8005bc8:	f003 0320 	and.w	r3, r3, #32
 8005bcc:	2b00      	cmp	r3, #0
 8005bce:	d03c      	beq.n	8005c4a <HAL_RCC_OscConfig+0x626>
 8005bd0:	687b      	ldr	r3, [r7, #4]
 8005bd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bd4:	2b00      	cmp	r3, #0
 8005bd6:	d01c      	beq.n	8005c12 <HAL_RCC_OscConfig+0x5ee>
 8005bd8:	4b70      	ldr	r3, [pc, #448]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005bda:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8005bde:	4a6f      	ldr	r2, [pc, #444]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005be0:	f043 0301 	orr.w	r3, r3, #1
 8005be4:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 8005be8:	f7fd f90a 	bl	8002e00 <HAL_GetTick>
 8005bec:	6138      	str	r0, [r7, #16]
 8005bee:	e008      	b.n	8005c02 <HAL_RCC_OscConfig+0x5de>
 8005bf0:	f7fd f906 	bl	8002e00 <HAL_GetTick>
 8005bf4:	4602      	mov	r2, r0
 8005bf6:	693b      	ldr	r3, [r7, #16]
 8005bf8:	1ad3      	subs	r3, r2, r3
 8005bfa:	2b02      	cmp	r3, #2
 8005bfc:	d901      	bls.n	8005c02 <HAL_RCC_OscConfig+0x5de>
 8005bfe:	2303      	movs	r3, #3
 8005c00:	e11c      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005c02:	4b66      	ldr	r3, [pc, #408]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005c04:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8005c08:	f003 0302 	and.w	r3, r3, #2
 8005c0c:	2b00      	cmp	r3, #0
 8005c0e:	d0ef      	beq.n	8005bf0 <HAL_RCC_OscConfig+0x5cc>
 8005c10:	e01b      	b.n	8005c4a <HAL_RCC_OscConfig+0x626>
 8005c12:	4b62      	ldr	r3, [pc, #392]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005c14:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8005c18:	4a60      	ldr	r2, [pc, #384]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005c1a:	f023 0301 	bic.w	r3, r3, #1
 8005c1e:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 8005c22:	f7fd f8ed 	bl	8002e00 <HAL_GetTick>
 8005c26:	6138      	str	r0, [r7, #16]
 8005c28:	e008      	b.n	8005c3c <HAL_RCC_OscConfig+0x618>
 8005c2a:	f7fd f8e9 	bl	8002e00 <HAL_GetTick>
 8005c2e:	4602      	mov	r2, r0
 8005c30:	693b      	ldr	r3, [r7, #16]
 8005c32:	1ad3      	subs	r3, r2, r3
 8005c34:	2b02      	cmp	r3, #2
 8005c36:	d901      	bls.n	8005c3c <HAL_RCC_OscConfig+0x618>
 8005c38:	2303      	movs	r3, #3
 8005c3a:	e0ff      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005c3c:	4b57      	ldr	r3, [pc, #348]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005c3e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8005c42:	f003 0302 	and.w	r3, r3, #2
 8005c46:	2b00      	cmp	r3, #0
 8005c48:	d1ef      	bne.n	8005c2a <HAL_RCC_OscConfig+0x606>
 8005c4a:	687b      	ldr	r3, [r7, #4]
 8005c4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005c4e:	2b00      	cmp	r3, #0
 8005c50:	f000 80f3 	beq.w	8005e3a <HAL_RCC_OscConfig+0x816>
 8005c54:	687b      	ldr	r3, [r7, #4]
 8005c56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005c58:	2b02      	cmp	r3, #2
 8005c5a:	f040 80c9 	bne.w	8005df0 <HAL_RCC_OscConfig+0x7cc>
 8005c5e:	4b4f      	ldr	r3, [pc, #316]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005c60:	68db      	ldr	r3, [r3, #12]
 8005c62:	617b      	str	r3, [r7, #20]
 8005c64:	697b      	ldr	r3, [r7, #20]
 8005c66:	f003 0203 	and.w	r2, r3, #3
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005c6e:	429a      	cmp	r2, r3
 8005c70:	d12c      	bne.n	8005ccc <HAL_RCC_OscConfig+0x6a8>
 8005c72:	697b      	ldr	r3, [r7, #20]
 8005c74:	f003 0270 	and.w	r2, r3, #112	; 0x70
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c7c:	3b01      	subs	r3, #1
 8005c7e:	011b      	lsls	r3, r3, #4
 8005c80:	429a      	cmp	r2, r3
 8005c82:	d123      	bne.n	8005ccc <HAL_RCC_OscConfig+0x6a8>
 8005c84:	697b      	ldr	r3, [r7, #20]
 8005c86:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005c8e:	021b      	lsls	r3, r3, #8
 8005c90:	429a      	cmp	r2, r3
 8005c92:	d11b      	bne.n	8005ccc <HAL_RCC_OscConfig+0x6a8>
 8005c94:	697b      	ldr	r3, [r7, #20]
 8005c96:	f003 4278 	and.w	r2, r3, #4160749568	; 0xf8000000
 8005c9a:	687b      	ldr	r3, [r7, #4]
 8005c9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005c9e:	06db      	lsls	r3, r3, #27
 8005ca0:	429a      	cmp	r2, r3
 8005ca2:	d113      	bne.n	8005ccc <HAL_RCC_OscConfig+0x6a8>
 8005ca4:	697b      	ldr	r3, [r7, #20]
 8005ca6:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005cae:	085b      	lsrs	r3, r3, #1
 8005cb0:	3b01      	subs	r3, #1
 8005cb2:	055b      	lsls	r3, r3, #21
 8005cb4:	429a      	cmp	r2, r3
 8005cb6:	d109      	bne.n	8005ccc <HAL_RCC_OscConfig+0x6a8>
 8005cb8:	697b      	ldr	r3, [r7, #20]
 8005cba:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 8005cbe:	687b      	ldr	r3, [r7, #4]
 8005cc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005cc2:	085b      	lsrs	r3, r3, #1
 8005cc4:	3b01      	subs	r3, #1
 8005cc6:	065b      	lsls	r3, r3, #25
 8005cc8:	429a      	cmp	r2, r3
 8005cca:	d06b      	beq.n	8005da4 <HAL_RCC_OscConfig+0x780>
 8005ccc:	69bb      	ldr	r3, [r7, #24]
 8005cce:	2b0c      	cmp	r3, #12
 8005cd0:	d062      	beq.n	8005d98 <HAL_RCC_OscConfig+0x774>
 8005cd2:	4b32      	ldr	r3, [pc, #200]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005cd4:	681b      	ldr	r3, [r3, #0]
 8005cd6:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8005cda:	2b00      	cmp	r3, #0
 8005cdc:	d001      	beq.n	8005ce2 <HAL_RCC_OscConfig+0x6be>
 8005cde:	2301      	movs	r3, #1
 8005ce0:	e0ac      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005ce2:	4b2e      	ldr	r3, [pc, #184]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005ce4:	681b      	ldr	r3, [r3, #0]
 8005ce6:	4a2d      	ldr	r2, [pc, #180]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005ce8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005cec:	6013      	str	r3, [r2, #0]
 8005cee:	f7fd f887 	bl	8002e00 <HAL_GetTick>
 8005cf2:	6138      	str	r0, [r7, #16]
 8005cf4:	e008      	b.n	8005d08 <HAL_RCC_OscConfig+0x6e4>
 8005cf6:	f7fd f883 	bl	8002e00 <HAL_GetTick>
 8005cfa:	4602      	mov	r2, r0
 8005cfc:	693b      	ldr	r3, [r7, #16]
 8005cfe:	1ad3      	subs	r3, r2, r3
 8005d00:	2b02      	cmp	r3, #2
 8005d02:	d901      	bls.n	8005d08 <HAL_RCC_OscConfig+0x6e4>
 8005d04:	2303      	movs	r3, #3
 8005d06:	e099      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005d08:	4b24      	ldr	r3, [pc, #144]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005d0a:	681b      	ldr	r3, [r3, #0]
 8005d0c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005d10:	2b00      	cmp	r3, #0
 8005d12:	d1f0      	bne.n	8005cf6 <HAL_RCC_OscConfig+0x6d2>
 8005d14:	4b21      	ldr	r3, [pc, #132]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005d16:	68da      	ldr	r2, [r3, #12]
 8005d18:	4b21      	ldr	r3, [pc, #132]	; (8005da0 <HAL_RCC_OscConfig+0x77c>)
 8005d1a:	4013      	ands	r3, r2
 8005d1c:	687a      	ldr	r2, [r7, #4]
 8005d1e:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8005d20:	687a      	ldr	r2, [r7, #4]
 8005d22:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8005d24:	3a01      	subs	r2, #1
 8005d26:	0112      	lsls	r2, r2, #4
 8005d28:	4311      	orrs	r1, r2
 8005d2a:	687a      	ldr	r2, [r7, #4]
 8005d2c:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8005d2e:	0212      	lsls	r2, r2, #8
 8005d30:	4311      	orrs	r1, r2
 8005d32:	687a      	ldr	r2, [r7, #4]
 8005d34:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8005d36:	0852      	lsrs	r2, r2, #1
 8005d38:	3a01      	subs	r2, #1
 8005d3a:	0552      	lsls	r2, r2, #21
 8005d3c:	4311      	orrs	r1, r2
 8005d3e:	687a      	ldr	r2, [r7, #4]
 8005d40:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8005d42:	0852      	lsrs	r2, r2, #1
 8005d44:	3a01      	subs	r2, #1
 8005d46:	0652      	lsls	r2, r2, #25
 8005d48:	4311      	orrs	r1, r2
 8005d4a:	687a      	ldr	r2, [r7, #4]
 8005d4c:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8005d4e:	06d2      	lsls	r2, r2, #27
 8005d50:	430a      	orrs	r2, r1
 8005d52:	4912      	ldr	r1, [pc, #72]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005d54:	4313      	orrs	r3, r2
 8005d56:	60cb      	str	r3, [r1, #12]
 8005d58:	4b10      	ldr	r3, [pc, #64]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005d5a:	681b      	ldr	r3, [r3, #0]
 8005d5c:	4a0f      	ldr	r2, [pc, #60]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005d5e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005d62:	6013      	str	r3, [r2, #0]
 8005d64:	4b0d      	ldr	r3, [pc, #52]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005d66:	68db      	ldr	r3, [r3, #12]
 8005d68:	4a0c      	ldr	r2, [pc, #48]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005d6a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005d6e:	60d3      	str	r3, [r2, #12]
 8005d70:	f7fd f846 	bl	8002e00 <HAL_GetTick>
 8005d74:	6138      	str	r0, [r7, #16]
 8005d76:	e008      	b.n	8005d8a <HAL_RCC_OscConfig+0x766>
 8005d78:	f7fd f842 	bl	8002e00 <HAL_GetTick>
 8005d7c:	4602      	mov	r2, r0
 8005d7e:	693b      	ldr	r3, [r7, #16]
 8005d80:	1ad3      	subs	r3, r2, r3
 8005d82:	2b02      	cmp	r3, #2
 8005d84:	d901      	bls.n	8005d8a <HAL_RCC_OscConfig+0x766>
 8005d86:	2303      	movs	r3, #3
 8005d88:	e058      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005d8a:	4b04      	ldr	r3, [pc, #16]	; (8005d9c <HAL_RCC_OscConfig+0x778>)
 8005d8c:	681b      	ldr	r3, [r3, #0]
 8005d8e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005d92:	2b00      	cmp	r3, #0
 8005d94:	d0f0      	beq.n	8005d78 <HAL_RCC_OscConfig+0x754>
 8005d96:	e050      	b.n	8005e3a <HAL_RCC_OscConfig+0x816>
 8005d98:	2301      	movs	r3, #1
 8005d9a:	e04f      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005d9c:	40021000 	.word	0x40021000
 8005da0:	019d808c 	.word	0x019d808c
 8005da4:	4b27      	ldr	r3, [pc, #156]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005da6:	681b      	ldr	r3, [r3, #0]
 8005da8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005dac:	2b00      	cmp	r3, #0
 8005dae:	d144      	bne.n	8005e3a <HAL_RCC_OscConfig+0x816>
 8005db0:	4b24      	ldr	r3, [pc, #144]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005db2:	681b      	ldr	r3, [r3, #0]
 8005db4:	4a23      	ldr	r2, [pc, #140]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005db6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005dba:	6013      	str	r3, [r2, #0]
 8005dbc:	4b21      	ldr	r3, [pc, #132]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005dbe:	68db      	ldr	r3, [r3, #12]
 8005dc0:	4a20      	ldr	r2, [pc, #128]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005dc2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005dc6:	60d3      	str	r3, [r2, #12]
 8005dc8:	f7fd f81a 	bl	8002e00 <HAL_GetTick>
 8005dcc:	6138      	str	r0, [r7, #16]
 8005dce:	e008      	b.n	8005de2 <HAL_RCC_OscConfig+0x7be>
 8005dd0:	f7fd f816 	bl	8002e00 <HAL_GetTick>
 8005dd4:	4602      	mov	r2, r0
 8005dd6:	693b      	ldr	r3, [r7, #16]
 8005dd8:	1ad3      	subs	r3, r2, r3
 8005dda:	2b02      	cmp	r3, #2
 8005ddc:	d901      	bls.n	8005de2 <HAL_RCC_OscConfig+0x7be>
 8005dde:	2303      	movs	r3, #3
 8005de0:	e02c      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005de2:	4b18      	ldr	r3, [pc, #96]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005de4:	681b      	ldr	r3, [r3, #0]
 8005de6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005dea:	2b00      	cmp	r3, #0
 8005dec:	d0f0      	beq.n	8005dd0 <HAL_RCC_OscConfig+0x7ac>
 8005dee:	e024      	b.n	8005e3a <HAL_RCC_OscConfig+0x816>
 8005df0:	69bb      	ldr	r3, [r7, #24]
 8005df2:	2b0c      	cmp	r3, #12
 8005df4:	d01f      	beq.n	8005e36 <HAL_RCC_OscConfig+0x812>
 8005df6:	4b13      	ldr	r3, [pc, #76]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	4a12      	ldr	r2, [pc, #72]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005dfc:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005e00:	6013      	str	r3, [r2, #0]
 8005e02:	f7fc fffd 	bl	8002e00 <HAL_GetTick>
 8005e06:	6138      	str	r0, [r7, #16]
 8005e08:	e008      	b.n	8005e1c <HAL_RCC_OscConfig+0x7f8>
 8005e0a:	f7fc fff9 	bl	8002e00 <HAL_GetTick>
 8005e0e:	4602      	mov	r2, r0
 8005e10:	693b      	ldr	r3, [r7, #16]
 8005e12:	1ad3      	subs	r3, r2, r3
 8005e14:	2b02      	cmp	r3, #2
 8005e16:	d901      	bls.n	8005e1c <HAL_RCC_OscConfig+0x7f8>
 8005e18:	2303      	movs	r3, #3
 8005e1a:	e00f      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005e1c:	4b09      	ldr	r3, [pc, #36]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005e1e:	681b      	ldr	r3, [r3, #0]
 8005e20:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005e24:	2b00      	cmp	r3, #0
 8005e26:	d1f0      	bne.n	8005e0a <HAL_RCC_OscConfig+0x7e6>
 8005e28:	4b06      	ldr	r3, [pc, #24]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005e2a:	68da      	ldr	r2, [r3, #12]
 8005e2c:	4905      	ldr	r1, [pc, #20]	; (8005e44 <HAL_RCC_OscConfig+0x820>)
 8005e2e:	4b06      	ldr	r3, [pc, #24]	; (8005e48 <HAL_RCC_OscConfig+0x824>)
 8005e30:	4013      	ands	r3, r2
 8005e32:	60cb      	str	r3, [r1, #12]
 8005e34:	e001      	b.n	8005e3a <HAL_RCC_OscConfig+0x816>
 8005e36:	2301      	movs	r3, #1
 8005e38:	e000      	b.n	8005e3c <HAL_RCC_OscConfig+0x818>
 8005e3a:	2300      	movs	r3, #0
 8005e3c:	4618      	mov	r0, r3
 8005e3e:	3720      	adds	r7, #32
 8005e40:	46bd      	mov	sp, r7
 8005e42:	bd80      	pop	{r7, pc}
 8005e44:	40021000 	.word	0x40021000
 8005e48:	feeefffc 	.word	0xfeeefffc

08005e4c <HAL_RCC_ClockConfig>:
 8005e4c:	b580      	push	{r7, lr}
 8005e4e:	b084      	sub	sp, #16
 8005e50:	af00      	add	r7, sp, #0
 8005e52:	6078      	str	r0, [r7, #4]
 8005e54:	6039      	str	r1, [r7, #0]
 8005e56:	687b      	ldr	r3, [r7, #4]
 8005e58:	2b00      	cmp	r3, #0
 8005e5a:	d101      	bne.n	8005e60 <HAL_RCC_ClockConfig+0x14>
 8005e5c:	2301      	movs	r3, #1
 8005e5e:	e0e7      	b.n	8006030 <HAL_RCC_ClockConfig+0x1e4>
 8005e60:	4b75      	ldr	r3, [pc, #468]	; (8006038 <HAL_RCC_ClockConfig+0x1ec>)
 8005e62:	681b      	ldr	r3, [r3, #0]
 8005e64:	f003 0307 	and.w	r3, r3, #7
 8005e68:	683a      	ldr	r2, [r7, #0]
 8005e6a:	429a      	cmp	r2, r3
 8005e6c:	d910      	bls.n	8005e90 <HAL_RCC_ClockConfig+0x44>
 8005e6e:	4b72      	ldr	r3, [pc, #456]	; (8006038 <HAL_RCC_ClockConfig+0x1ec>)
 8005e70:	681b      	ldr	r3, [r3, #0]
 8005e72:	f023 0207 	bic.w	r2, r3, #7
 8005e76:	4970      	ldr	r1, [pc, #448]	; (8006038 <HAL_RCC_ClockConfig+0x1ec>)
 8005e78:	683b      	ldr	r3, [r7, #0]
 8005e7a:	4313      	orrs	r3, r2
 8005e7c:	600b      	str	r3, [r1, #0]
 8005e7e:	4b6e      	ldr	r3, [pc, #440]	; (8006038 <HAL_RCC_ClockConfig+0x1ec>)
 8005e80:	681b      	ldr	r3, [r3, #0]
 8005e82:	f003 0307 	and.w	r3, r3, #7
 8005e86:	683a      	ldr	r2, [r7, #0]
 8005e88:	429a      	cmp	r2, r3
 8005e8a:	d001      	beq.n	8005e90 <HAL_RCC_ClockConfig+0x44>
 8005e8c:	2301      	movs	r3, #1
 8005e8e:	e0cf      	b.n	8006030 <HAL_RCC_ClockConfig+0x1e4>
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	f003 0302 	and.w	r3, r3, #2
 8005e98:	2b00      	cmp	r3, #0
 8005e9a:	d010      	beq.n	8005ebe <HAL_RCC_ClockConfig+0x72>
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	689a      	ldr	r2, [r3, #8]
 8005ea0:	4b66      	ldr	r3, [pc, #408]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005ea2:	689b      	ldr	r3, [r3, #8]
 8005ea4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005ea8:	429a      	cmp	r2, r3
 8005eaa:	d908      	bls.n	8005ebe <HAL_RCC_ClockConfig+0x72>
 8005eac:	4b63      	ldr	r3, [pc, #396]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005eae:	689b      	ldr	r3, [r3, #8]
 8005eb0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	689b      	ldr	r3, [r3, #8]
 8005eb8:	4960      	ldr	r1, [pc, #384]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005eba:	4313      	orrs	r3, r2
 8005ebc:	608b      	str	r3, [r1, #8]
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	f003 0301 	and.w	r3, r3, #1
 8005ec6:	2b00      	cmp	r3, #0
 8005ec8:	d04c      	beq.n	8005f64 <HAL_RCC_ClockConfig+0x118>
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	685b      	ldr	r3, [r3, #4]
 8005ece:	2b03      	cmp	r3, #3
 8005ed0:	d107      	bne.n	8005ee2 <HAL_RCC_ClockConfig+0x96>
 8005ed2:	4b5a      	ldr	r3, [pc, #360]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005ed4:	681b      	ldr	r3, [r3, #0]
 8005ed6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005eda:	2b00      	cmp	r3, #0
 8005edc:	d121      	bne.n	8005f22 <HAL_RCC_ClockConfig+0xd6>
 8005ede:	2301      	movs	r3, #1
 8005ee0:	e0a6      	b.n	8006030 <HAL_RCC_ClockConfig+0x1e4>
 8005ee2:	687b      	ldr	r3, [r7, #4]
 8005ee4:	685b      	ldr	r3, [r3, #4]
 8005ee6:	2b02      	cmp	r3, #2
 8005ee8:	d107      	bne.n	8005efa <HAL_RCC_ClockConfig+0xae>
 8005eea:	4b54      	ldr	r3, [pc, #336]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005eec:	681b      	ldr	r3, [r3, #0]
 8005eee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005ef2:	2b00      	cmp	r3, #0
 8005ef4:	d115      	bne.n	8005f22 <HAL_RCC_ClockConfig+0xd6>
 8005ef6:	2301      	movs	r3, #1
 8005ef8:	e09a      	b.n	8006030 <HAL_RCC_ClockConfig+0x1e4>
 8005efa:	687b      	ldr	r3, [r7, #4]
 8005efc:	685b      	ldr	r3, [r3, #4]
 8005efe:	2b00      	cmp	r3, #0
 8005f00:	d107      	bne.n	8005f12 <HAL_RCC_ClockConfig+0xc6>
 8005f02:	4b4e      	ldr	r3, [pc, #312]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005f04:	681b      	ldr	r3, [r3, #0]
 8005f06:	f003 0302 	and.w	r3, r3, #2
 8005f0a:	2b00      	cmp	r3, #0
 8005f0c:	d109      	bne.n	8005f22 <HAL_RCC_ClockConfig+0xd6>
 8005f0e:	2301      	movs	r3, #1
 8005f10:	e08e      	b.n	8006030 <HAL_RCC_ClockConfig+0x1e4>
 8005f12:	4b4a      	ldr	r3, [pc, #296]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005f1a:	2b00      	cmp	r3, #0
 8005f1c:	d101      	bne.n	8005f22 <HAL_RCC_ClockConfig+0xd6>
 8005f1e:	2301      	movs	r3, #1
 8005f20:	e086      	b.n	8006030 <HAL_RCC_ClockConfig+0x1e4>
 8005f22:	4b46      	ldr	r3, [pc, #280]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005f24:	689b      	ldr	r3, [r3, #8]
 8005f26:	f023 0203 	bic.w	r2, r3, #3
 8005f2a:	687b      	ldr	r3, [r7, #4]
 8005f2c:	685b      	ldr	r3, [r3, #4]
 8005f2e:	4943      	ldr	r1, [pc, #268]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005f30:	4313      	orrs	r3, r2
 8005f32:	608b      	str	r3, [r1, #8]
 8005f34:	f7fc ff64 	bl	8002e00 <HAL_GetTick>
 8005f38:	60f8      	str	r0, [r7, #12]
 8005f3a:	e00a      	b.n	8005f52 <HAL_RCC_ClockConfig+0x106>
 8005f3c:	f7fc ff60 	bl	8002e00 <HAL_GetTick>
 8005f40:	4602      	mov	r2, r0
 8005f42:	68fb      	ldr	r3, [r7, #12]
 8005f44:	1ad3      	subs	r3, r2, r3
 8005f46:	f241 3288 	movw	r2, #5000	; 0x1388
 8005f4a:	4293      	cmp	r3, r2
 8005f4c:	d901      	bls.n	8005f52 <HAL_RCC_ClockConfig+0x106>
 8005f4e:	2303      	movs	r3, #3
 8005f50:	e06e      	b.n	8006030 <HAL_RCC_ClockConfig+0x1e4>
 8005f52:	4b3a      	ldr	r3, [pc, #232]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005f54:	689b      	ldr	r3, [r3, #8]
 8005f56:	f003 020c 	and.w	r2, r3, #12
 8005f5a:	687b      	ldr	r3, [r7, #4]
 8005f5c:	685b      	ldr	r3, [r3, #4]
 8005f5e:	009b      	lsls	r3, r3, #2
 8005f60:	429a      	cmp	r2, r3
 8005f62:	d1eb      	bne.n	8005f3c <HAL_RCC_ClockConfig+0xf0>
 8005f64:	687b      	ldr	r3, [r7, #4]
 8005f66:	681b      	ldr	r3, [r3, #0]
 8005f68:	f003 0302 	and.w	r3, r3, #2
 8005f6c:	2b00      	cmp	r3, #0
 8005f6e:	d010      	beq.n	8005f92 <HAL_RCC_ClockConfig+0x146>
 8005f70:	687b      	ldr	r3, [r7, #4]
 8005f72:	689a      	ldr	r2, [r3, #8]
 8005f74:	4b31      	ldr	r3, [pc, #196]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005f76:	689b      	ldr	r3, [r3, #8]
 8005f78:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005f7c:	429a      	cmp	r2, r3
 8005f7e:	d208      	bcs.n	8005f92 <HAL_RCC_ClockConfig+0x146>
 8005f80:	4b2e      	ldr	r3, [pc, #184]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005f82:	689b      	ldr	r3, [r3, #8]
 8005f84:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	689b      	ldr	r3, [r3, #8]
 8005f8c:	492b      	ldr	r1, [pc, #172]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005f8e:	4313      	orrs	r3, r2
 8005f90:	608b      	str	r3, [r1, #8]
 8005f92:	4b29      	ldr	r3, [pc, #164]	; (8006038 <HAL_RCC_ClockConfig+0x1ec>)
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	f003 0307 	and.w	r3, r3, #7
 8005f9a:	683a      	ldr	r2, [r7, #0]
 8005f9c:	429a      	cmp	r2, r3
 8005f9e:	d210      	bcs.n	8005fc2 <HAL_RCC_ClockConfig+0x176>
 8005fa0:	4b25      	ldr	r3, [pc, #148]	; (8006038 <HAL_RCC_ClockConfig+0x1ec>)
 8005fa2:	681b      	ldr	r3, [r3, #0]
 8005fa4:	f023 0207 	bic.w	r2, r3, #7
 8005fa8:	4923      	ldr	r1, [pc, #140]	; (8006038 <HAL_RCC_ClockConfig+0x1ec>)
 8005faa:	683b      	ldr	r3, [r7, #0]
 8005fac:	4313      	orrs	r3, r2
 8005fae:	600b      	str	r3, [r1, #0]
 8005fb0:	4b21      	ldr	r3, [pc, #132]	; (8006038 <HAL_RCC_ClockConfig+0x1ec>)
 8005fb2:	681b      	ldr	r3, [r3, #0]
 8005fb4:	f003 0307 	and.w	r3, r3, #7
 8005fb8:	683a      	ldr	r2, [r7, #0]
 8005fba:	429a      	cmp	r2, r3
 8005fbc:	d001      	beq.n	8005fc2 <HAL_RCC_ClockConfig+0x176>
 8005fbe:	2301      	movs	r3, #1
 8005fc0:	e036      	b.n	8006030 <HAL_RCC_ClockConfig+0x1e4>
 8005fc2:	687b      	ldr	r3, [r7, #4]
 8005fc4:	681b      	ldr	r3, [r3, #0]
 8005fc6:	f003 0304 	and.w	r3, r3, #4
 8005fca:	2b00      	cmp	r3, #0
 8005fcc:	d008      	beq.n	8005fe0 <HAL_RCC_ClockConfig+0x194>
 8005fce:	4b1b      	ldr	r3, [pc, #108]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005fd0:	689b      	ldr	r3, [r3, #8]
 8005fd2:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8005fd6:	687b      	ldr	r3, [r7, #4]
 8005fd8:	68db      	ldr	r3, [r3, #12]
 8005fda:	4918      	ldr	r1, [pc, #96]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005fdc:	4313      	orrs	r3, r2
 8005fde:	608b      	str	r3, [r1, #8]
 8005fe0:	687b      	ldr	r3, [r7, #4]
 8005fe2:	681b      	ldr	r3, [r3, #0]
 8005fe4:	f003 0308 	and.w	r3, r3, #8
 8005fe8:	2b00      	cmp	r3, #0
 8005fea:	d009      	beq.n	8006000 <HAL_RCC_ClockConfig+0x1b4>
 8005fec:	4b13      	ldr	r3, [pc, #76]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005fee:	689b      	ldr	r3, [r3, #8]
 8005ff0:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8005ff4:	687b      	ldr	r3, [r7, #4]
 8005ff6:	691b      	ldr	r3, [r3, #16]
 8005ff8:	00db      	lsls	r3, r3, #3
 8005ffa:	4910      	ldr	r1, [pc, #64]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8005ffc:	4313      	orrs	r3, r2
 8005ffe:	608b      	str	r3, [r1, #8]
 8006000:	f000 f824 	bl	800604c <HAL_RCC_GetSysClockFreq>
 8006004:	4602      	mov	r2, r0
 8006006:	4b0d      	ldr	r3, [pc, #52]	; (800603c <HAL_RCC_ClockConfig+0x1f0>)
 8006008:	689b      	ldr	r3, [r3, #8]
 800600a:	091b      	lsrs	r3, r3, #4
 800600c:	f003 030f 	and.w	r3, r3, #15
 8006010:	490b      	ldr	r1, [pc, #44]	; (8006040 <HAL_RCC_ClockConfig+0x1f4>)
 8006012:	5ccb      	ldrb	r3, [r1, r3]
 8006014:	f003 031f 	and.w	r3, r3, #31
 8006018:	fa22 f303 	lsr.w	r3, r2, r3
 800601c:	4a09      	ldr	r2, [pc, #36]	; (8006044 <HAL_RCC_ClockConfig+0x1f8>)
 800601e:	6013      	str	r3, [r2, #0]
 8006020:	4b09      	ldr	r3, [pc, #36]	; (8006048 <HAL_RCC_ClockConfig+0x1fc>)
 8006022:	681b      	ldr	r3, [r3, #0]
 8006024:	4618      	mov	r0, r3
 8006026:	f7fc fe9b 	bl	8002d60 <HAL_InitTick>
 800602a:	4603      	mov	r3, r0
 800602c:	72fb      	strb	r3, [r7, #11]
 800602e:	7afb      	ldrb	r3, [r7, #11]
 8006030:	4618      	mov	r0, r3
 8006032:	3710      	adds	r7, #16
 8006034:	46bd      	mov	sp, r7
 8006036:	bd80      	pop	{r7, pc}
 8006038:	40022000 	.word	0x40022000
 800603c:	40021000 	.word	0x40021000
 8006040:	0800ca58 	.word	0x0800ca58
 8006044:	2000000c 	.word	0x2000000c
 8006048:	20000010 	.word	0x20000010

0800604c <HAL_RCC_GetSysClockFreq>:
 800604c:	b480      	push	{r7}
 800604e:	b089      	sub	sp, #36	; 0x24
 8006050:	af00      	add	r7, sp, #0
 8006052:	2300      	movs	r3, #0
 8006054:	61fb      	str	r3, [r7, #28]
 8006056:	2300      	movs	r3, #0
 8006058:	61bb      	str	r3, [r7, #24]
 800605a:	4b3e      	ldr	r3, [pc, #248]	; (8006154 <HAL_RCC_GetSysClockFreq+0x108>)
 800605c:	689b      	ldr	r3, [r3, #8]
 800605e:	f003 030c 	and.w	r3, r3, #12
 8006062:	613b      	str	r3, [r7, #16]
 8006064:	4b3b      	ldr	r3, [pc, #236]	; (8006154 <HAL_RCC_GetSysClockFreq+0x108>)
 8006066:	68db      	ldr	r3, [r3, #12]
 8006068:	f003 0303 	and.w	r3, r3, #3
 800606c:	60fb      	str	r3, [r7, #12]
 800606e:	693b      	ldr	r3, [r7, #16]
 8006070:	2b00      	cmp	r3, #0
 8006072:	d005      	beq.n	8006080 <HAL_RCC_GetSysClockFreq+0x34>
 8006074:	693b      	ldr	r3, [r7, #16]
 8006076:	2b0c      	cmp	r3, #12
 8006078:	d121      	bne.n	80060be <HAL_RCC_GetSysClockFreq+0x72>
 800607a:	68fb      	ldr	r3, [r7, #12]
 800607c:	2b01      	cmp	r3, #1
 800607e:	d11e      	bne.n	80060be <HAL_RCC_GetSysClockFreq+0x72>
 8006080:	4b34      	ldr	r3, [pc, #208]	; (8006154 <HAL_RCC_GetSysClockFreq+0x108>)
 8006082:	681b      	ldr	r3, [r3, #0]
 8006084:	f003 0308 	and.w	r3, r3, #8
 8006088:	2b00      	cmp	r3, #0
 800608a:	d107      	bne.n	800609c <HAL_RCC_GetSysClockFreq+0x50>
 800608c:	4b31      	ldr	r3, [pc, #196]	; (8006154 <HAL_RCC_GetSysClockFreq+0x108>)
 800608e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8006092:	0a1b      	lsrs	r3, r3, #8
 8006094:	f003 030f 	and.w	r3, r3, #15
 8006098:	61fb      	str	r3, [r7, #28]
 800609a:	e005      	b.n	80060a8 <HAL_RCC_GetSysClockFreq+0x5c>
 800609c:	4b2d      	ldr	r3, [pc, #180]	; (8006154 <HAL_RCC_GetSysClockFreq+0x108>)
 800609e:	681b      	ldr	r3, [r3, #0]
 80060a0:	091b      	lsrs	r3, r3, #4
 80060a2:	f003 030f 	and.w	r3, r3, #15
 80060a6:	61fb      	str	r3, [r7, #28]
 80060a8:	4a2b      	ldr	r2, [pc, #172]	; (8006158 <HAL_RCC_GetSysClockFreq+0x10c>)
 80060aa:	69fb      	ldr	r3, [r7, #28]
 80060ac:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80060b0:	61fb      	str	r3, [r7, #28]
 80060b2:	693b      	ldr	r3, [r7, #16]
 80060b4:	2b00      	cmp	r3, #0
 80060b6:	d10d      	bne.n	80060d4 <HAL_RCC_GetSysClockFreq+0x88>
 80060b8:	69fb      	ldr	r3, [r7, #28]
 80060ba:	61bb      	str	r3, [r7, #24]
 80060bc:	e00a      	b.n	80060d4 <HAL_RCC_GetSysClockFreq+0x88>
 80060be:	693b      	ldr	r3, [r7, #16]
 80060c0:	2b04      	cmp	r3, #4
 80060c2:	d102      	bne.n	80060ca <HAL_RCC_GetSysClockFreq+0x7e>
 80060c4:	4b25      	ldr	r3, [pc, #148]	; (800615c <HAL_RCC_GetSysClockFreq+0x110>)
 80060c6:	61bb      	str	r3, [r7, #24]
 80060c8:	e004      	b.n	80060d4 <HAL_RCC_GetSysClockFreq+0x88>
 80060ca:	693b      	ldr	r3, [r7, #16]
 80060cc:	2b08      	cmp	r3, #8
 80060ce:	d101      	bne.n	80060d4 <HAL_RCC_GetSysClockFreq+0x88>
 80060d0:	4b23      	ldr	r3, [pc, #140]	; (8006160 <HAL_RCC_GetSysClockFreq+0x114>)
 80060d2:	61bb      	str	r3, [r7, #24]
 80060d4:	693b      	ldr	r3, [r7, #16]
 80060d6:	2b0c      	cmp	r3, #12
 80060d8:	d134      	bne.n	8006144 <HAL_RCC_GetSysClockFreq+0xf8>
 80060da:	4b1e      	ldr	r3, [pc, #120]	; (8006154 <HAL_RCC_GetSysClockFreq+0x108>)
 80060dc:	68db      	ldr	r3, [r3, #12]
 80060de:	f003 0303 	and.w	r3, r3, #3
 80060e2:	60bb      	str	r3, [r7, #8]
 80060e4:	68bb      	ldr	r3, [r7, #8]
 80060e6:	2b02      	cmp	r3, #2
 80060e8:	d003      	beq.n	80060f2 <HAL_RCC_GetSysClockFreq+0xa6>
 80060ea:	68bb      	ldr	r3, [r7, #8]
 80060ec:	2b03      	cmp	r3, #3
 80060ee:	d003      	beq.n	80060f8 <HAL_RCC_GetSysClockFreq+0xac>
 80060f0:	e005      	b.n	80060fe <HAL_RCC_GetSysClockFreq+0xb2>
 80060f2:	4b1a      	ldr	r3, [pc, #104]	; (800615c <HAL_RCC_GetSysClockFreq+0x110>)
 80060f4:	617b      	str	r3, [r7, #20]
 80060f6:	e005      	b.n	8006104 <HAL_RCC_GetSysClockFreq+0xb8>
 80060f8:	4b19      	ldr	r3, [pc, #100]	; (8006160 <HAL_RCC_GetSysClockFreq+0x114>)
 80060fa:	617b      	str	r3, [r7, #20]
 80060fc:	e002      	b.n	8006104 <HAL_RCC_GetSysClockFreq+0xb8>
 80060fe:	69fb      	ldr	r3, [r7, #28]
 8006100:	617b      	str	r3, [r7, #20]
 8006102:	bf00      	nop
 8006104:	4b13      	ldr	r3, [pc, #76]	; (8006154 <HAL_RCC_GetSysClockFreq+0x108>)
 8006106:	68db      	ldr	r3, [r3, #12]
 8006108:	091b      	lsrs	r3, r3, #4
 800610a:	f003 0307 	and.w	r3, r3, #7
 800610e:	3301      	adds	r3, #1
 8006110:	607b      	str	r3, [r7, #4]
 8006112:	4b10      	ldr	r3, [pc, #64]	; (8006154 <HAL_RCC_GetSysClockFreq+0x108>)
 8006114:	68db      	ldr	r3, [r3, #12]
 8006116:	0a1b      	lsrs	r3, r3, #8
 8006118:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800611c:	697a      	ldr	r2, [r7, #20]
 800611e:	fb03 f202 	mul.w	r2, r3, r2
 8006122:	687b      	ldr	r3, [r7, #4]
 8006124:	fbb2 f3f3 	udiv	r3, r2, r3
 8006128:	617b      	str	r3, [r7, #20]
 800612a:	4b0a      	ldr	r3, [pc, #40]	; (8006154 <HAL_RCC_GetSysClockFreq+0x108>)
 800612c:	68db      	ldr	r3, [r3, #12]
 800612e:	0e5b      	lsrs	r3, r3, #25
 8006130:	f003 0303 	and.w	r3, r3, #3
 8006134:	3301      	adds	r3, #1
 8006136:	005b      	lsls	r3, r3, #1
 8006138:	603b      	str	r3, [r7, #0]
 800613a:	697a      	ldr	r2, [r7, #20]
 800613c:	683b      	ldr	r3, [r7, #0]
 800613e:	fbb2 f3f3 	udiv	r3, r2, r3
 8006142:	61bb      	str	r3, [r7, #24]
 8006144:	69bb      	ldr	r3, [r7, #24]
 8006146:	4618      	mov	r0, r3
 8006148:	3724      	adds	r7, #36	; 0x24
 800614a:	46bd      	mov	sp, r7
 800614c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006150:	4770      	bx	lr
 8006152:	bf00      	nop
 8006154:	40021000 	.word	0x40021000
 8006158:	0800ca68 	.word	0x0800ca68
 800615c:	00f42400 	.word	0x00f42400
 8006160:	007a1200 	.word	0x007a1200

08006164 <RCC_SetFlashLatencyFromMSIRange>:
 8006164:	b580      	push	{r7, lr}
 8006166:	b086      	sub	sp, #24
 8006168:	af00      	add	r7, sp, #0
 800616a:	6078      	str	r0, [r7, #4]
 800616c:	2300      	movs	r3, #0
 800616e:	613b      	str	r3, [r7, #16]
 8006170:	4b2a      	ldr	r3, [pc, #168]	; (800621c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8006172:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006174:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006178:	2b00      	cmp	r3, #0
 800617a:	d003      	beq.n	8006184 <RCC_SetFlashLatencyFromMSIRange+0x20>
 800617c:	f7ff f9ee 	bl	800555c <HAL_PWREx_GetVoltageRange>
 8006180:	6178      	str	r0, [r7, #20]
 8006182:	e014      	b.n	80061ae <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8006184:	4b25      	ldr	r3, [pc, #148]	; (800621c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8006186:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006188:	4a24      	ldr	r2, [pc, #144]	; (800621c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800618a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800618e:	6593      	str	r3, [r2, #88]	; 0x58
 8006190:	4b22      	ldr	r3, [pc, #136]	; (800621c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8006192:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006194:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006198:	60fb      	str	r3, [r7, #12]
 800619a:	68fb      	ldr	r3, [r7, #12]
 800619c:	f7ff f9de 	bl	800555c <HAL_PWREx_GetVoltageRange>
 80061a0:	6178      	str	r0, [r7, #20]
 80061a2:	4b1e      	ldr	r3, [pc, #120]	; (800621c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80061a4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80061a6:	4a1d      	ldr	r2, [pc, #116]	; (800621c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80061a8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80061ac:	6593      	str	r3, [r2, #88]	; 0x58
 80061ae:	697b      	ldr	r3, [r7, #20]
 80061b0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80061b4:	d10b      	bne.n	80061ce <RCC_SetFlashLatencyFromMSIRange+0x6a>
 80061b6:	687b      	ldr	r3, [r7, #4]
 80061b8:	2b80      	cmp	r3, #128	; 0x80
 80061ba:	d919      	bls.n	80061f0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80061bc:	687b      	ldr	r3, [r7, #4]
 80061be:	2ba0      	cmp	r3, #160	; 0xa0
 80061c0:	d902      	bls.n	80061c8 <RCC_SetFlashLatencyFromMSIRange+0x64>
 80061c2:	2302      	movs	r3, #2
 80061c4:	613b      	str	r3, [r7, #16]
 80061c6:	e013      	b.n	80061f0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80061c8:	2301      	movs	r3, #1
 80061ca:	613b      	str	r3, [r7, #16]
 80061cc:	e010      	b.n	80061f0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80061ce:	687b      	ldr	r3, [r7, #4]
 80061d0:	2b80      	cmp	r3, #128	; 0x80
 80061d2:	d902      	bls.n	80061da <RCC_SetFlashLatencyFromMSIRange+0x76>
 80061d4:	2303      	movs	r3, #3
 80061d6:	613b      	str	r3, [r7, #16]
 80061d8:	e00a      	b.n	80061f0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	2b80      	cmp	r3, #128	; 0x80
 80061de:	d102      	bne.n	80061e6 <RCC_SetFlashLatencyFromMSIRange+0x82>
 80061e0:	2302      	movs	r3, #2
 80061e2:	613b      	str	r3, [r7, #16]
 80061e4:	e004      	b.n	80061f0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	2b70      	cmp	r3, #112	; 0x70
 80061ea:	d101      	bne.n	80061f0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80061ec:	2301      	movs	r3, #1
 80061ee:	613b      	str	r3, [r7, #16]
 80061f0:	4b0b      	ldr	r3, [pc, #44]	; (8006220 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80061f2:	681b      	ldr	r3, [r3, #0]
 80061f4:	f023 0207 	bic.w	r2, r3, #7
 80061f8:	4909      	ldr	r1, [pc, #36]	; (8006220 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80061fa:	693b      	ldr	r3, [r7, #16]
 80061fc:	4313      	orrs	r3, r2
 80061fe:	600b      	str	r3, [r1, #0]
 8006200:	4b07      	ldr	r3, [pc, #28]	; (8006220 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8006202:	681b      	ldr	r3, [r3, #0]
 8006204:	f003 0307 	and.w	r3, r3, #7
 8006208:	693a      	ldr	r2, [r7, #16]
 800620a:	429a      	cmp	r2, r3
 800620c:	d001      	beq.n	8006212 <RCC_SetFlashLatencyFromMSIRange+0xae>
 800620e:	2301      	movs	r3, #1
 8006210:	e000      	b.n	8006214 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8006212:	2300      	movs	r3, #0
 8006214:	4618      	mov	r0, r3
 8006216:	3718      	adds	r7, #24
 8006218:	46bd      	mov	sp, r7
 800621a:	bd80      	pop	{r7, pc}
 800621c:	40021000 	.word	0x40021000
 8006220:	40022000 	.word	0x40022000

08006224 <HAL_RCCEx_PeriphCLKConfig>:
 8006224:	b580      	push	{r7, lr}
 8006226:	b086      	sub	sp, #24
 8006228:	af00      	add	r7, sp, #0
 800622a:	6078      	str	r0, [r7, #4]
 800622c:	2300      	movs	r3, #0
 800622e:	74fb      	strb	r3, [r7, #19]
 8006230:	2300      	movs	r3, #0
 8006232:	74bb      	strb	r3, [r7, #18]
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800623c:	2b00      	cmp	r3, #0
 800623e:	d031      	beq.n	80062a4 <HAL_RCCEx_PeriphCLKConfig+0x80>
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006244:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8006248:	d01a      	beq.n	8006280 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 800624a:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 800624e:	d814      	bhi.n	800627a <HAL_RCCEx_PeriphCLKConfig+0x56>
 8006250:	2b00      	cmp	r3, #0
 8006252:	d009      	beq.n	8006268 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8006254:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8006258:	d10f      	bne.n	800627a <HAL_RCCEx_PeriphCLKConfig+0x56>
 800625a:	4b5d      	ldr	r3, [pc, #372]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 800625c:	68db      	ldr	r3, [r3, #12]
 800625e:	4a5c      	ldr	r2, [pc, #368]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006260:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006264:	60d3      	str	r3, [r2, #12]
 8006266:	e00c      	b.n	8006282 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 8006268:	687b      	ldr	r3, [r7, #4]
 800626a:	3304      	adds	r3, #4
 800626c:	2100      	movs	r1, #0
 800626e:	4618      	mov	r0, r3
 8006270:	f000 f9f0 	bl	8006654 <RCCEx_PLLSAI1_Config>
 8006274:	4603      	mov	r3, r0
 8006276:	74fb      	strb	r3, [r7, #19]
 8006278:	e003      	b.n	8006282 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 800627a:	2301      	movs	r3, #1
 800627c:	74fb      	strb	r3, [r7, #19]
 800627e:	e000      	b.n	8006282 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 8006280:	bf00      	nop
 8006282:	7cfb      	ldrb	r3, [r7, #19]
 8006284:	2b00      	cmp	r3, #0
 8006286:	d10b      	bne.n	80062a0 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 8006288:	4b51      	ldr	r3, [pc, #324]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 800628a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800628e:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8006292:	687b      	ldr	r3, [r7, #4]
 8006294:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006296:	494e      	ldr	r1, [pc, #312]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006298:	4313      	orrs	r3, r2
 800629a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800629e:	e001      	b.n	80062a4 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80062a0:	7cfb      	ldrb	r3, [r7, #19]
 80062a2:	74bb      	strb	r3, [r7, #18]
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80062ac:	2b00      	cmp	r3, #0
 80062ae:	f000 809e 	beq.w	80063ee <HAL_RCCEx_PeriphCLKConfig+0x1ca>
 80062b2:	2300      	movs	r3, #0
 80062b4:	747b      	strb	r3, [r7, #17]
 80062b6:	4b46      	ldr	r3, [pc, #280]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 80062b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80062ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80062be:	2b00      	cmp	r3, #0
 80062c0:	d101      	bne.n	80062c6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
 80062c2:	2301      	movs	r3, #1
 80062c4:	e000      	b.n	80062c8 <HAL_RCCEx_PeriphCLKConfig+0xa4>
 80062c6:	2300      	movs	r3, #0
 80062c8:	2b00      	cmp	r3, #0
 80062ca:	d00d      	beq.n	80062e8 <HAL_RCCEx_PeriphCLKConfig+0xc4>
 80062cc:	4b40      	ldr	r3, [pc, #256]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 80062ce:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80062d0:	4a3f      	ldr	r2, [pc, #252]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 80062d2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80062d6:	6593      	str	r3, [r2, #88]	; 0x58
 80062d8:	4b3d      	ldr	r3, [pc, #244]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 80062da:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80062dc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80062e0:	60bb      	str	r3, [r7, #8]
 80062e2:	68bb      	ldr	r3, [r7, #8]
 80062e4:	2301      	movs	r3, #1
 80062e6:	747b      	strb	r3, [r7, #17]
 80062e8:	4b3a      	ldr	r3, [pc, #232]	; (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1b0>)
 80062ea:	681b      	ldr	r3, [r3, #0]
 80062ec:	4a39      	ldr	r2, [pc, #228]	; (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1b0>)
 80062ee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80062f2:	6013      	str	r3, [r2, #0]
 80062f4:	f7fc fd84 	bl	8002e00 <HAL_GetTick>
 80062f8:	60f8      	str	r0, [r7, #12]
 80062fa:	e009      	b.n	8006310 <HAL_RCCEx_PeriphCLKConfig+0xec>
 80062fc:	f7fc fd80 	bl	8002e00 <HAL_GetTick>
 8006300:	4602      	mov	r2, r0
 8006302:	68fb      	ldr	r3, [r7, #12]
 8006304:	1ad3      	subs	r3, r2, r3
 8006306:	2b02      	cmp	r3, #2
 8006308:	d902      	bls.n	8006310 <HAL_RCCEx_PeriphCLKConfig+0xec>
 800630a:	2303      	movs	r3, #3
 800630c:	74fb      	strb	r3, [r7, #19]
 800630e:	e005      	b.n	800631c <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8006310:	4b30      	ldr	r3, [pc, #192]	; (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1b0>)
 8006312:	681b      	ldr	r3, [r3, #0]
 8006314:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006318:	2b00      	cmp	r3, #0
 800631a:	d0ef      	beq.n	80062fc <HAL_RCCEx_PeriphCLKConfig+0xd8>
 800631c:	7cfb      	ldrb	r3, [r7, #19]
 800631e:	2b00      	cmp	r3, #0
 8006320:	d15a      	bne.n	80063d8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8006322:	4b2b      	ldr	r3, [pc, #172]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006324:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006328:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800632c:	617b      	str	r3, [r7, #20]
 800632e:	697b      	ldr	r3, [r7, #20]
 8006330:	2b00      	cmp	r3, #0
 8006332:	d01e      	beq.n	8006372 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006338:	697a      	ldr	r2, [r7, #20]
 800633a:	429a      	cmp	r2, r3
 800633c:	d019      	beq.n	8006372 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 800633e:	4b24      	ldr	r3, [pc, #144]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006340:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006344:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006348:	617b      	str	r3, [r7, #20]
 800634a:	4b21      	ldr	r3, [pc, #132]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 800634c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006350:	4a1f      	ldr	r2, [pc, #124]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006352:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006356:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800635a:	4b1d      	ldr	r3, [pc, #116]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 800635c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006360:	4a1b      	ldr	r2, [pc, #108]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006362:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006366:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800636a:	4a19      	ldr	r2, [pc, #100]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 800636c:	697b      	ldr	r3, [r7, #20]
 800636e:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8006372:	697b      	ldr	r3, [r7, #20]
 8006374:	f003 0301 	and.w	r3, r3, #1
 8006378:	2b00      	cmp	r3, #0
 800637a:	d016      	beq.n	80063aa <HAL_RCCEx_PeriphCLKConfig+0x186>
 800637c:	f7fc fd40 	bl	8002e00 <HAL_GetTick>
 8006380:	60f8      	str	r0, [r7, #12]
 8006382:	e00b      	b.n	800639c <HAL_RCCEx_PeriphCLKConfig+0x178>
 8006384:	f7fc fd3c 	bl	8002e00 <HAL_GetTick>
 8006388:	4602      	mov	r2, r0
 800638a:	68fb      	ldr	r3, [r7, #12]
 800638c:	1ad3      	subs	r3, r2, r3
 800638e:	f241 3288 	movw	r2, #5000	; 0x1388
 8006392:	4293      	cmp	r3, r2
 8006394:	d902      	bls.n	800639c <HAL_RCCEx_PeriphCLKConfig+0x178>
 8006396:	2303      	movs	r3, #3
 8006398:	74fb      	strb	r3, [r7, #19]
 800639a:	e006      	b.n	80063aa <HAL_RCCEx_PeriphCLKConfig+0x186>
 800639c:	4b0c      	ldr	r3, [pc, #48]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 800639e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80063a2:	f003 0302 	and.w	r3, r3, #2
 80063a6:	2b00      	cmp	r3, #0
 80063a8:	d0ec      	beq.n	8006384 <HAL_RCCEx_PeriphCLKConfig+0x160>
 80063aa:	7cfb      	ldrb	r3, [r7, #19]
 80063ac:	2b00      	cmp	r3, #0
 80063ae:	d10b      	bne.n	80063c8 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
 80063b0:	4b07      	ldr	r3, [pc, #28]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 80063b2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80063b6:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80063ba:	687b      	ldr	r3, [r7, #4]
 80063bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80063be:	4904      	ldr	r1, [pc, #16]	; (80063d0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 80063c0:	4313      	orrs	r3, r2
 80063c2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80063c6:	e009      	b.n	80063dc <HAL_RCCEx_PeriphCLKConfig+0x1b8>
 80063c8:	7cfb      	ldrb	r3, [r7, #19]
 80063ca:	74bb      	strb	r3, [r7, #18]
 80063cc:	e006      	b.n	80063dc <HAL_RCCEx_PeriphCLKConfig+0x1b8>
 80063ce:	bf00      	nop
 80063d0:	40021000 	.word	0x40021000
 80063d4:	40007000 	.word	0x40007000
 80063d8:	7cfb      	ldrb	r3, [r7, #19]
 80063da:	74bb      	strb	r3, [r7, #18]
 80063dc:	7c7b      	ldrb	r3, [r7, #17]
 80063de:	2b01      	cmp	r3, #1
 80063e0:	d105      	bne.n	80063ee <HAL_RCCEx_PeriphCLKConfig+0x1ca>
 80063e2:	4b9b      	ldr	r3, [pc, #620]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80063e4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80063e6:	4a9a      	ldr	r2, [pc, #616]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80063e8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80063ec:	6593      	str	r3, [r2, #88]	; 0x58
 80063ee:	687b      	ldr	r3, [r7, #4]
 80063f0:	681b      	ldr	r3, [r3, #0]
 80063f2:	f003 0301 	and.w	r3, r3, #1
 80063f6:	2b00      	cmp	r3, #0
 80063f8:	d00a      	beq.n	8006410 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
 80063fa:	4b95      	ldr	r3, [pc, #596]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80063fc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006400:	f023 0203 	bic.w	r2, r3, #3
 8006404:	687b      	ldr	r3, [r7, #4]
 8006406:	6a1b      	ldr	r3, [r3, #32]
 8006408:	4991      	ldr	r1, [pc, #580]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800640a:	4313      	orrs	r3, r2
 800640c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8006410:	687b      	ldr	r3, [r7, #4]
 8006412:	681b      	ldr	r3, [r3, #0]
 8006414:	f003 0302 	and.w	r3, r3, #2
 8006418:	2b00      	cmp	r3, #0
 800641a:	d00a      	beq.n	8006432 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 800641c:	4b8c      	ldr	r3, [pc, #560]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800641e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006422:	f023 020c 	bic.w	r2, r3, #12
 8006426:	687b      	ldr	r3, [r7, #4]
 8006428:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800642a:	4989      	ldr	r1, [pc, #548]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800642c:	4313      	orrs	r3, r2
 800642e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	681b      	ldr	r3, [r3, #0]
 8006436:	f003 0304 	and.w	r3, r3, #4
 800643a:	2b00      	cmp	r3, #0
 800643c:	d00a      	beq.n	8006454 <HAL_RCCEx_PeriphCLKConfig+0x230>
 800643e:	4b84      	ldr	r3, [pc, #528]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006440:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006444:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8006448:	687b      	ldr	r3, [r7, #4]
 800644a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800644c:	4980      	ldr	r1, [pc, #512]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800644e:	4313      	orrs	r3, r2
 8006450:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	681b      	ldr	r3, [r3, #0]
 8006458:	f003 0320 	and.w	r3, r3, #32
 800645c:	2b00      	cmp	r3, #0
 800645e:	d00a      	beq.n	8006476 <HAL_RCCEx_PeriphCLKConfig+0x252>
 8006460:	4b7b      	ldr	r3, [pc, #492]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006462:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006466:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800646e:	4978      	ldr	r1, [pc, #480]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006470:	4313      	orrs	r3, r2
 8006472:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8006476:	687b      	ldr	r3, [r7, #4]
 8006478:	681b      	ldr	r3, [r3, #0]
 800647a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800647e:	2b00      	cmp	r3, #0
 8006480:	d00a      	beq.n	8006498 <HAL_RCCEx_PeriphCLKConfig+0x274>
 8006482:	4b73      	ldr	r3, [pc, #460]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006484:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006488:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006490:	496f      	ldr	r1, [pc, #444]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006492:	4313      	orrs	r3, r2
 8006494:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8006498:	687b      	ldr	r3, [r7, #4]
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80064a0:	2b00      	cmp	r3, #0
 80064a2:	d00a      	beq.n	80064ba <HAL_RCCEx_PeriphCLKConfig+0x296>
 80064a4:	4b6a      	ldr	r3, [pc, #424]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80064a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80064aa:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 80064ae:	687b      	ldr	r3, [r7, #4]
 80064b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80064b2:	4967      	ldr	r1, [pc, #412]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80064b4:	4313      	orrs	r3, r2
 80064b6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80064ba:	687b      	ldr	r3, [r7, #4]
 80064bc:	681b      	ldr	r3, [r3, #0]
 80064be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80064c2:	2b00      	cmp	r3, #0
 80064c4:	d00a      	beq.n	80064dc <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 80064c6:	4b62      	ldr	r3, [pc, #392]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80064c8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80064cc:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 80064d0:	687b      	ldr	r3, [r7, #4]
 80064d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064d4:	495e      	ldr	r1, [pc, #376]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80064d6:	4313      	orrs	r3, r2
 80064d8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80064dc:	687b      	ldr	r3, [r7, #4]
 80064de:	681b      	ldr	r3, [r3, #0]
 80064e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80064e4:	2b00      	cmp	r3, #0
 80064e6:	d00a      	beq.n	80064fe <HAL_RCCEx_PeriphCLKConfig+0x2da>
 80064e8:	4b59      	ldr	r3, [pc, #356]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80064ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80064ee:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80064f2:	687b      	ldr	r3, [r7, #4]
 80064f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80064f6:	4956      	ldr	r1, [pc, #344]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80064f8:	4313      	orrs	r3, r2
 80064fa:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	681b      	ldr	r3, [r3, #0]
 8006502:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006506:	2b00      	cmp	r3, #0
 8006508:	d00a      	beq.n	8006520 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 800650a:	4b51      	ldr	r3, [pc, #324]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800650c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006510:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8006514:	687b      	ldr	r3, [r7, #4]
 8006516:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006518:	494d      	ldr	r1, [pc, #308]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800651a:	4313      	orrs	r3, r2
 800651c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8006520:	687b      	ldr	r3, [r7, #4]
 8006522:	681b      	ldr	r3, [r3, #0]
 8006524:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8006528:	2b00      	cmp	r3, #0
 800652a:	d028      	beq.n	800657e <HAL_RCCEx_PeriphCLKConfig+0x35a>
 800652c:	4b48      	ldr	r3, [pc, #288]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800652e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006532:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800653a:	4945      	ldr	r1, [pc, #276]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800653c:	4313      	orrs	r3, r2
 800653e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006546:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800654a:	d106      	bne.n	800655a <HAL_RCCEx_PeriphCLKConfig+0x336>
 800654c:	4b40      	ldr	r3, [pc, #256]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800654e:	68db      	ldr	r3, [r3, #12]
 8006550:	4a3f      	ldr	r2, [pc, #252]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006552:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006556:	60d3      	str	r3, [r2, #12]
 8006558:	e011      	b.n	800657e <HAL_RCCEx_PeriphCLKConfig+0x35a>
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800655e:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8006562:	d10c      	bne.n	800657e <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8006564:	687b      	ldr	r3, [r7, #4]
 8006566:	3304      	adds	r3, #4
 8006568:	2101      	movs	r1, #1
 800656a:	4618      	mov	r0, r3
 800656c:	f000 f872 	bl	8006654 <RCCEx_PLLSAI1_Config>
 8006570:	4603      	mov	r3, r0
 8006572:	74fb      	strb	r3, [r7, #19]
 8006574:	7cfb      	ldrb	r3, [r7, #19]
 8006576:	2b00      	cmp	r3, #0
 8006578:	d001      	beq.n	800657e <HAL_RCCEx_PeriphCLKConfig+0x35a>
 800657a:	7cfb      	ldrb	r3, [r7, #19]
 800657c:	74bb      	strb	r3, [r7, #18]
 800657e:	687b      	ldr	r3, [r7, #4]
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8006586:	2b00      	cmp	r3, #0
 8006588:	d028      	beq.n	80065dc <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 800658a:	4b31      	ldr	r3, [pc, #196]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800658c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006590:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8006594:	687b      	ldr	r3, [r7, #4]
 8006596:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006598:	492d      	ldr	r1, [pc, #180]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800659a:	4313      	orrs	r3, r2
 800659c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80065a0:	687b      	ldr	r3, [r7, #4]
 80065a2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80065a4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80065a8:	d106      	bne.n	80065b8 <HAL_RCCEx_PeriphCLKConfig+0x394>
 80065aa:	4b29      	ldr	r3, [pc, #164]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80065ac:	68db      	ldr	r3, [r3, #12]
 80065ae:	4a28      	ldr	r2, [pc, #160]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80065b0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80065b4:	60d3      	str	r3, [r2, #12]
 80065b6:	e011      	b.n	80065dc <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 80065b8:	687b      	ldr	r3, [r7, #4]
 80065ba:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80065bc:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80065c0:	d10c      	bne.n	80065dc <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 80065c2:	687b      	ldr	r3, [r7, #4]
 80065c4:	3304      	adds	r3, #4
 80065c6:	2101      	movs	r1, #1
 80065c8:	4618      	mov	r0, r3
 80065ca:	f000 f843 	bl	8006654 <RCCEx_PLLSAI1_Config>
 80065ce:	4603      	mov	r3, r0
 80065d0:	74fb      	strb	r3, [r7, #19]
 80065d2:	7cfb      	ldrb	r3, [r7, #19]
 80065d4:	2b00      	cmp	r3, #0
 80065d6:	d001      	beq.n	80065dc <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 80065d8:	7cfb      	ldrb	r3, [r7, #19]
 80065da:	74bb      	strb	r3, [r7, #18]
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	681b      	ldr	r3, [r3, #0]
 80065e0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80065e4:	2b00      	cmp	r3, #0
 80065e6:	d01c      	beq.n	8006622 <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 80065e8:	4b19      	ldr	r3, [pc, #100]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80065ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80065ee:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 80065f2:	687b      	ldr	r3, [r7, #4]
 80065f4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80065f6:	4916      	ldr	r1, [pc, #88]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80065f8:	4313      	orrs	r3, r2
 80065fa:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80065fe:	687b      	ldr	r3, [r7, #4]
 8006600:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006602:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8006606:	d10c      	bne.n	8006622 <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	3304      	adds	r3, #4
 800660c:	2102      	movs	r1, #2
 800660e:	4618      	mov	r0, r3
 8006610:	f000 f820 	bl	8006654 <RCCEx_PLLSAI1_Config>
 8006614:	4603      	mov	r3, r0
 8006616:	74fb      	strb	r3, [r7, #19]
 8006618:	7cfb      	ldrb	r3, [r7, #19]
 800661a:	2b00      	cmp	r3, #0
 800661c:	d001      	beq.n	8006622 <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 800661e:	7cfb      	ldrb	r3, [r7, #19]
 8006620:	74bb      	strb	r3, [r7, #18]
 8006622:	687b      	ldr	r3, [r7, #4]
 8006624:	681b      	ldr	r3, [r3, #0]
 8006626:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800662a:	2b00      	cmp	r3, #0
 800662c:	d00a      	beq.n	8006644 <HAL_RCCEx_PeriphCLKConfig+0x420>
 800662e:	4b08      	ldr	r3, [pc, #32]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006630:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006634:	f023 4280 	bic.w	r2, r3, #1073741824	; 0x40000000
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800663c:	4904      	ldr	r1, [pc, #16]	; (8006650 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800663e:	4313      	orrs	r3, r2
 8006640:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8006644:	7cbb      	ldrb	r3, [r7, #18]
 8006646:	4618      	mov	r0, r3
 8006648:	3718      	adds	r7, #24
 800664a:	46bd      	mov	sp, r7
 800664c:	bd80      	pop	{r7, pc}
 800664e:	bf00      	nop
 8006650:	40021000 	.word	0x40021000

08006654 <RCCEx_PLLSAI1_Config>:
 8006654:	b580      	push	{r7, lr}
 8006656:	b084      	sub	sp, #16
 8006658:	af00      	add	r7, sp, #0
 800665a:	6078      	str	r0, [r7, #4]
 800665c:	6039      	str	r1, [r7, #0]
 800665e:	2300      	movs	r3, #0
 8006660:	73fb      	strb	r3, [r7, #15]
 8006662:	4b74      	ldr	r3, [pc, #464]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 8006664:	68db      	ldr	r3, [r3, #12]
 8006666:	f003 0303 	and.w	r3, r3, #3
 800666a:	2b00      	cmp	r3, #0
 800666c:	d018      	beq.n	80066a0 <RCCEx_PLLSAI1_Config+0x4c>
 800666e:	4b71      	ldr	r3, [pc, #452]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 8006670:	68db      	ldr	r3, [r3, #12]
 8006672:	f003 0203 	and.w	r2, r3, #3
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	681b      	ldr	r3, [r3, #0]
 800667a:	429a      	cmp	r2, r3
 800667c:	d10d      	bne.n	800669a <RCCEx_PLLSAI1_Config+0x46>
 800667e:	687b      	ldr	r3, [r7, #4]
 8006680:	681b      	ldr	r3, [r3, #0]
 8006682:	2b00      	cmp	r3, #0
 8006684:	d009      	beq.n	800669a <RCCEx_PLLSAI1_Config+0x46>
 8006686:	4b6b      	ldr	r3, [pc, #428]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 8006688:	68db      	ldr	r3, [r3, #12]
 800668a:	091b      	lsrs	r3, r3, #4
 800668c:	f003 0307 	and.w	r3, r3, #7
 8006690:	1c5a      	adds	r2, r3, #1
 8006692:	687b      	ldr	r3, [r7, #4]
 8006694:	685b      	ldr	r3, [r3, #4]
 8006696:	429a      	cmp	r2, r3
 8006698:	d047      	beq.n	800672a <RCCEx_PLLSAI1_Config+0xd6>
 800669a:	2301      	movs	r3, #1
 800669c:	73fb      	strb	r3, [r7, #15]
 800669e:	e044      	b.n	800672a <RCCEx_PLLSAI1_Config+0xd6>
 80066a0:	687b      	ldr	r3, [r7, #4]
 80066a2:	681b      	ldr	r3, [r3, #0]
 80066a4:	2b03      	cmp	r3, #3
 80066a6:	d018      	beq.n	80066da <RCCEx_PLLSAI1_Config+0x86>
 80066a8:	2b03      	cmp	r3, #3
 80066aa:	d825      	bhi.n	80066f8 <RCCEx_PLLSAI1_Config+0xa4>
 80066ac:	2b01      	cmp	r3, #1
 80066ae:	d002      	beq.n	80066b6 <RCCEx_PLLSAI1_Config+0x62>
 80066b0:	2b02      	cmp	r3, #2
 80066b2:	d009      	beq.n	80066c8 <RCCEx_PLLSAI1_Config+0x74>
 80066b4:	e020      	b.n	80066f8 <RCCEx_PLLSAI1_Config+0xa4>
 80066b6:	4b5f      	ldr	r3, [pc, #380]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 80066b8:	681b      	ldr	r3, [r3, #0]
 80066ba:	f003 0302 	and.w	r3, r3, #2
 80066be:	2b00      	cmp	r3, #0
 80066c0:	d11d      	bne.n	80066fe <RCCEx_PLLSAI1_Config+0xaa>
 80066c2:	2301      	movs	r3, #1
 80066c4:	73fb      	strb	r3, [r7, #15]
 80066c6:	e01a      	b.n	80066fe <RCCEx_PLLSAI1_Config+0xaa>
 80066c8:	4b5a      	ldr	r3, [pc, #360]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 80066ca:	681b      	ldr	r3, [r3, #0]
 80066cc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80066d0:	2b00      	cmp	r3, #0
 80066d2:	d116      	bne.n	8006702 <RCCEx_PLLSAI1_Config+0xae>
 80066d4:	2301      	movs	r3, #1
 80066d6:	73fb      	strb	r3, [r7, #15]
 80066d8:	e013      	b.n	8006702 <RCCEx_PLLSAI1_Config+0xae>
 80066da:	4b56      	ldr	r3, [pc, #344]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 80066dc:	681b      	ldr	r3, [r3, #0]
 80066de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80066e2:	2b00      	cmp	r3, #0
 80066e4:	d10f      	bne.n	8006706 <RCCEx_PLLSAI1_Config+0xb2>
 80066e6:	4b53      	ldr	r3, [pc, #332]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 80066e8:	681b      	ldr	r3, [r3, #0]
 80066ea:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	d109      	bne.n	8006706 <RCCEx_PLLSAI1_Config+0xb2>
 80066f2:	2301      	movs	r3, #1
 80066f4:	73fb      	strb	r3, [r7, #15]
 80066f6:	e006      	b.n	8006706 <RCCEx_PLLSAI1_Config+0xb2>
 80066f8:	2301      	movs	r3, #1
 80066fa:	73fb      	strb	r3, [r7, #15]
 80066fc:	e004      	b.n	8006708 <RCCEx_PLLSAI1_Config+0xb4>
 80066fe:	bf00      	nop
 8006700:	e002      	b.n	8006708 <RCCEx_PLLSAI1_Config+0xb4>
 8006702:	bf00      	nop
 8006704:	e000      	b.n	8006708 <RCCEx_PLLSAI1_Config+0xb4>
 8006706:	bf00      	nop
 8006708:	7bfb      	ldrb	r3, [r7, #15]
 800670a:	2b00      	cmp	r3, #0
 800670c:	d10d      	bne.n	800672a <RCCEx_PLLSAI1_Config+0xd6>
 800670e:	4b49      	ldr	r3, [pc, #292]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 8006710:	68db      	ldr	r3, [r3, #12]
 8006712:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	6819      	ldr	r1, [r3, #0]
 800671a:	687b      	ldr	r3, [r7, #4]
 800671c:	685b      	ldr	r3, [r3, #4]
 800671e:	3b01      	subs	r3, #1
 8006720:	011b      	lsls	r3, r3, #4
 8006722:	430b      	orrs	r3, r1
 8006724:	4943      	ldr	r1, [pc, #268]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 8006726:	4313      	orrs	r3, r2
 8006728:	60cb      	str	r3, [r1, #12]
 800672a:	7bfb      	ldrb	r3, [r7, #15]
 800672c:	2b00      	cmp	r3, #0
 800672e:	d17c      	bne.n	800682a <RCCEx_PLLSAI1_Config+0x1d6>
 8006730:	4b40      	ldr	r3, [pc, #256]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 8006732:	681b      	ldr	r3, [r3, #0]
 8006734:	4a3f      	ldr	r2, [pc, #252]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 8006736:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800673a:	6013      	str	r3, [r2, #0]
 800673c:	f7fc fb60 	bl	8002e00 <HAL_GetTick>
 8006740:	60b8      	str	r0, [r7, #8]
 8006742:	e009      	b.n	8006758 <RCCEx_PLLSAI1_Config+0x104>
 8006744:	f7fc fb5c 	bl	8002e00 <HAL_GetTick>
 8006748:	4602      	mov	r2, r0
 800674a:	68bb      	ldr	r3, [r7, #8]
 800674c:	1ad3      	subs	r3, r2, r3
 800674e:	2b02      	cmp	r3, #2
 8006750:	d902      	bls.n	8006758 <RCCEx_PLLSAI1_Config+0x104>
 8006752:	2303      	movs	r3, #3
 8006754:	73fb      	strb	r3, [r7, #15]
 8006756:	e005      	b.n	8006764 <RCCEx_PLLSAI1_Config+0x110>
 8006758:	4b36      	ldr	r3, [pc, #216]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 800675a:	681b      	ldr	r3, [r3, #0]
 800675c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8006760:	2b00      	cmp	r3, #0
 8006762:	d1ef      	bne.n	8006744 <RCCEx_PLLSAI1_Config+0xf0>
 8006764:	7bfb      	ldrb	r3, [r7, #15]
 8006766:	2b00      	cmp	r3, #0
 8006768:	d15f      	bne.n	800682a <RCCEx_PLLSAI1_Config+0x1d6>
 800676a:	683b      	ldr	r3, [r7, #0]
 800676c:	2b00      	cmp	r3, #0
 800676e:	d110      	bne.n	8006792 <RCCEx_PLLSAI1_Config+0x13e>
 8006770:	4b30      	ldr	r3, [pc, #192]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 8006772:	691b      	ldr	r3, [r3, #16]
 8006774:	f023 4378 	bic.w	r3, r3, #4160749568	; 0xf8000000
 8006778:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 800677c:	687a      	ldr	r2, [r7, #4]
 800677e:	6892      	ldr	r2, [r2, #8]
 8006780:	0211      	lsls	r1, r2, #8
 8006782:	687a      	ldr	r2, [r7, #4]
 8006784:	68d2      	ldr	r2, [r2, #12]
 8006786:	06d2      	lsls	r2, r2, #27
 8006788:	430a      	orrs	r2, r1
 800678a:	492a      	ldr	r1, [pc, #168]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 800678c:	4313      	orrs	r3, r2
 800678e:	610b      	str	r3, [r1, #16]
 8006790:	e027      	b.n	80067e2 <RCCEx_PLLSAI1_Config+0x18e>
 8006792:	683b      	ldr	r3, [r7, #0]
 8006794:	2b01      	cmp	r3, #1
 8006796:	d112      	bne.n	80067be <RCCEx_PLLSAI1_Config+0x16a>
 8006798:	4b26      	ldr	r3, [pc, #152]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 800679a:	691b      	ldr	r3, [r3, #16]
 800679c:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 80067a0:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 80067a4:	687a      	ldr	r2, [r7, #4]
 80067a6:	6892      	ldr	r2, [r2, #8]
 80067a8:	0211      	lsls	r1, r2, #8
 80067aa:	687a      	ldr	r2, [r7, #4]
 80067ac:	6912      	ldr	r2, [r2, #16]
 80067ae:	0852      	lsrs	r2, r2, #1
 80067b0:	3a01      	subs	r2, #1
 80067b2:	0552      	lsls	r2, r2, #21
 80067b4:	430a      	orrs	r2, r1
 80067b6:	491f      	ldr	r1, [pc, #124]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 80067b8:	4313      	orrs	r3, r2
 80067ba:	610b      	str	r3, [r1, #16]
 80067bc:	e011      	b.n	80067e2 <RCCEx_PLLSAI1_Config+0x18e>
 80067be:	4b1d      	ldr	r3, [pc, #116]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 80067c0:	691b      	ldr	r3, [r3, #16]
 80067c2:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 80067c6:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 80067ca:	687a      	ldr	r2, [r7, #4]
 80067cc:	6892      	ldr	r2, [r2, #8]
 80067ce:	0211      	lsls	r1, r2, #8
 80067d0:	687a      	ldr	r2, [r7, #4]
 80067d2:	6952      	ldr	r2, [r2, #20]
 80067d4:	0852      	lsrs	r2, r2, #1
 80067d6:	3a01      	subs	r2, #1
 80067d8:	0652      	lsls	r2, r2, #25
 80067da:	430a      	orrs	r2, r1
 80067dc:	4915      	ldr	r1, [pc, #84]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 80067de:	4313      	orrs	r3, r2
 80067e0:	610b      	str	r3, [r1, #16]
 80067e2:	4b14      	ldr	r3, [pc, #80]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	4a13      	ldr	r2, [pc, #76]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 80067e8:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80067ec:	6013      	str	r3, [r2, #0]
 80067ee:	f7fc fb07 	bl	8002e00 <HAL_GetTick>
 80067f2:	60b8      	str	r0, [r7, #8]
 80067f4:	e009      	b.n	800680a <RCCEx_PLLSAI1_Config+0x1b6>
 80067f6:	f7fc fb03 	bl	8002e00 <HAL_GetTick>
 80067fa:	4602      	mov	r2, r0
 80067fc:	68bb      	ldr	r3, [r7, #8]
 80067fe:	1ad3      	subs	r3, r2, r3
 8006800:	2b02      	cmp	r3, #2
 8006802:	d902      	bls.n	800680a <RCCEx_PLLSAI1_Config+0x1b6>
 8006804:	2303      	movs	r3, #3
 8006806:	73fb      	strb	r3, [r7, #15]
 8006808:	e005      	b.n	8006816 <RCCEx_PLLSAI1_Config+0x1c2>
 800680a:	4b0a      	ldr	r3, [pc, #40]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 800680c:	681b      	ldr	r3, [r3, #0]
 800680e:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8006812:	2b00      	cmp	r3, #0
 8006814:	d0ef      	beq.n	80067f6 <RCCEx_PLLSAI1_Config+0x1a2>
 8006816:	7bfb      	ldrb	r3, [r7, #15]
 8006818:	2b00      	cmp	r3, #0
 800681a:	d106      	bne.n	800682a <RCCEx_PLLSAI1_Config+0x1d6>
 800681c:	4b05      	ldr	r3, [pc, #20]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 800681e:	691a      	ldr	r2, [r3, #16]
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	699b      	ldr	r3, [r3, #24]
 8006824:	4903      	ldr	r1, [pc, #12]	; (8006834 <RCCEx_PLLSAI1_Config+0x1e0>)
 8006826:	4313      	orrs	r3, r2
 8006828:	610b      	str	r3, [r1, #16]
 800682a:	7bfb      	ldrb	r3, [r7, #15]
 800682c:	4618      	mov	r0, r3
 800682e:	3710      	adds	r7, #16
 8006830:	46bd      	mov	sp, r7
 8006832:	bd80      	pop	{r7, pc}
 8006834:	40021000 	.word	0x40021000

08006838 <HAL_TIM_Base_Init>:
 8006838:	b580      	push	{r7, lr}
 800683a:	b082      	sub	sp, #8
 800683c:	af00      	add	r7, sp, #0
 800683e:	6078      	str	r0, [r7, #4]
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	2b00      	cmp	r3, #0
 8006844:	d101      	bne.n	800684a <HAL_TIM_Base_Init+0x12>
 8006846:	2301      	movs	r3, #1
 8006848:	e049      	b.n	80068de <HAL_TIM_Base_Init+0xa6>
 800684a:	687b      	ldr	r3, [r7, #4]
 800684c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006850:	b2db      	uxtb	r3, r3
 8006852:	2b00      	cmp	r3, #0
 8006854:	d106      	bne.n	8006864 <HAL_TIM_Base_Init+0x2c>
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	2200      	movs	r2, #0
 800685a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800685e:	6878      	ldr	r0, [r7, #4]
 8006860:	f7fc f86e 	bl	8002940 <HAL_TIM_Base_MspInit>
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	2202      	movs	r2, #2
 8006868:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	681a      	ldr	r2, [r3, #0]
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	3304      	adds	r3, #4
 8006874:	4619      	mov	r1, r3
 8006876:	4610      	mov	r0, r2
 8006878:	f000 fda6 	bl	80073c8 <TIM_Base_SetConfig>
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	2201      	movs	r2, #1
 8006880:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	2201      	movs	r2, #1
 8006888:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	2201      	movs	r2, #1
 8006890:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	2201      	movs	r2, #1
 8006898:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	2201      	movs	r2, #1
 80068a0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	2201      	movs	r2, #1
 80068a8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	2201      	movs	r2, #1
 80068b0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	2201      	movs	r2, #1
 80068b8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	2201      	movs	r2, #1
 80068c0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	2201      	movs	r2, #1
 80068c8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	2201      	movs	r2, #1
 80068d0:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 80068d4:	687b      	ldr	r3, [r7, #4]
 80068d6:	2201      	movs	r2, #1
 80068d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80068dc:	2300      	movs	r3, #0
 80068de:	4618      	mov	r0, r3
 80068e0:	3708      	adds	r7, #8
 80068e2:	46bd      	mov	sp, r7
 80068e4:	bd80      	pop	{r7, pc}
	...

080068e8 <HAL_TIM_Base_Start_IT>:
 80068e8:	b480      	push	{r7}
 80068ea:	b085      	sub	sp, #20
 80068ec:	af00      	add	r7, sp, #0
 80068ee:	6078      	str	r0, [r7, #4]
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80068f6:	b2db      	uxtb	r3, r3
 80068f8:	2b01      	cmp	r3, #1
 80068fa:	d001      	beq.n	8006900 <HAL_TIM_Base_Start_IT+0x18>
 80068fc:	2301      	movs	r3, #1
 80068fe:	e03b      	b.n	8006978 <HAL_TIM_Base_Start_IT+0x90>
 8006900:	687b      	ldr	r3, [r7, #4]
 8006902:	2202      	movs	r2, #2
 8006904:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	681b      	ldr	r3, [r3, #0]
 800690c:	68da      	ldr	r2, [r3, #12]
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	681b      	ldr	r3, [r3, #0]
 8006912:	f042 0201 	orr.w	r2, r2, #1
 8006916:	60da      	str	r2, [r3, #12]
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	681b      	ldr	r3, [r3, #0]
 800691c:	4a19      	ldr	r2, [pc, #100]	; (8006984 <HAL_TIM_Base_Start_IT+0x9c>)
 800691e:	4293      	cmp	r3, r2
 8006920:	d009      	beq.n	8006936 <HAL_TIM_Base_Start_IT+0x4e>
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800692a:	d004      	beq.n	8006936 <HAL_TIM_Base_Start_IT+0x4e>
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	4a15      	ldr	r2, [pc, #84]	; (8006988 <HAL_TIM_Base_Start_IT+0xa0>)
 8006932:	4293      	cmp	r3, r2
 8006934:	d115      	bne.n	8006962 <HAL_TIM_Base_Start_IT+0x7a>
 8006936:	687b      	ldr	r3, [r7, #4]
 8006938:	681b      	ldr	r3, [r3, #0]
 800693a:	689a      	ldr	r2, [r3, #8]
 800693c:	4b13      	ldr	r3, [pc, #76]	; (800698c <HAL_TIM_Base_Start_IT+0xa4>)
 800693e:	4013      	ands	r3, r2
 8006940:	60fb      	str	r3, [r7, #12]
 8006942:	68fb      	ldr	r3, [r7, #12]
 8006944:	2b06      	cmp	r3, #6
 8006946:	d015      	beq.n	8006974 <HAL_TIM_Base_Start_IT+0x8c>
 8006948:	68fb      	ldr	r3, [r7, #12]
 800694a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800694e:	d011      	beq.n	8006974 <HAL_TIM_Base_Start_IT+0x8c>
 8006950:	687b      	ldr	r3, [r7, #4]
 8006952:	681b      	ldr	r3, [r3, #0]
 8006954:	681a      	ldr	r2, [r3, #0]
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	681b      	ldr	r3, [r3, #0]
 800695a:	f042 0201 	orr.w	r2, r2, #1
 800695e:	601a      	str	r2, [r3, #0]
 8006960:	e008      	b.n	8006974 <HAL_TIM_Base_Start_IT+0x8c>
 8006962:	687b      	ldr	r3, [r7, #4]
 8006964:	681b      	ldr	r3, [r3, #0]
 8006966:	681a      	ldr	r2, [r3, #0]
 8006968:	687b      	ldr	r3, [r7, #4]
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	f042 0201 	orr.w	r2, r2, #1
 8006970:	601a      	str	r2, [r3, #0]
 8006972:	e000      	b.n	8006976 <HAL_TIM_Base_Start_IT+0x8e>
 8006974:	bf00      	nop
 8006976:	2300      	movs	r3, #0
 8006978:	4618      	mov	r0, r3
 800697a:	3714      	adds	r7, #20
 800697c:	46bd      	mov	sp, r7
 800697e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006982:	4770      	bx	lr
 8006984:	40012c00 	.word	0x40012c00
 8006988:	40014000 	.word	0x40014000
 800698c:	00010007 	.word	0x00010007

08006990 <HAL_TIM_Base_Stop_IT>:
 8006990:	b480      	push	{r7}
 8006992:	b083      	sub	sp, #12
 8006994:	af00      	add	r7, sp, #0
 8006996:	6078      	str	r0, [r7, #4]
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	681b      	ldr	r3, [r3, #0]
 800699c:	68da      	ldr	r2, [r3, #12]
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	681b      	ldr	r3, [r3, #0]
 80069a2:	f022 0201 	bic.w	r2, r2, #1
 80069a6:	60da      	str	r2, [r3, #12]
 80069a8:	687b      	ldr	r3, [r7, #4]
 80069aa:	681b      	ldr	r3, [r3, #0]
 80069ac:	6a1a      	ldr	r2, [r3, #32]
 80069ae:	f241 1311 	movw	r3, #4369	; 0x1111
 80069b2:	4013      	ands	r3, r2
 80069b4:	2b00      	cmp	r3, #0
 80069b6:	d10f      	bne.n	80069d8 <HAL_TIM_Base_Stop_IT+0x48>
 80069b8:	687b      	ldr	r3, [r7, #4]
 80069ba:	681b      	ldr	r3, [r3, #0]
 80069bc:	6a1a      	ldr	r2, [r3, #32]
 80069be:	f240 4344 	movw	r3, #1092	; 0x444
 80069c2:	4013      	ands	r3, r2
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	d107      	bne.n	80069d8 <HAL_TIM_Base_Stop_IT+0x48>
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	681b      	ldr	r3, [r3, #0]
 80069cc:	681a      	ldr	r2, [r3, #0]
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	681b      	ldr	r3, [r3, #0]
 80069d2:	f022 0201 	bic.w	r2, r2, #1
 80069d6:	601a      	str	r2, [r3, #0]
 80069d8:	687b      	ldr	r3, [r7, #4]
 80069da:	2201      	movs	r2, #1
 80069dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80069e0:	2300      	movs	r3, #0
 80069e2:	4618      	mov	r0, r3
 80069e4:	370c      	adds	r7, #12
 80069e6:	46bd      	mov	sp, r7
 80069e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069ec:	4770      	bx	lr

080069ee <HAL_TIM_PWM_Init>:
 80069ee:	b580      	push	{r7, lr}
 80069f0:	b082      	sub	sp, #8
 80069f2:	af00      	add	r7, sp, #0
 80069f4:	6078      	str	r0, [r7, #4]
 80069f6:	687b      	ldr	r3, [r7, #4]
 80069f8:	2b00      	cmp	r3, #0
 80069fa:	d101      	bne.n	8006a00 <HAL_TIM_PWM_Init+0x12>
 80069fc:	2301      	movs	r3, #1
 80069fe:	e049      	b.n	8006a94 <HAL_TIM_PWM_Init+0xa6>
 8006a00:	687b      	ldr	r3, [r7, #4]
 8006a02:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006a06:	b2db      	uxtb	r3, r3
 8006a08:	2b00      	cmp	r3, #0
 8006a0a:	d106      	bne.n	8006a1a <HAL_TIM_PWM_Init+0x2c>
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	2200      	movs	r2, #0
 8006a10:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006a14:	6878      	ldr	r0, [r7, #4]
 8006a16:	f000 f841 	bl	8006a9c <HAL_TIM_PWM_MspInit>
 8006a1a:	687b      	ldr	r3, [r7, #4]
 8006a1c:	2202      	movs	r2, #2
 8006a1e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	681a      	ldr	r2, [r3, #0]
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	3304      	adds	r3, #4
 8006a2a:	4619      	mov	r1, r3
 8006a2c:	4610      	mov	r0, r2
 8006a2e:	f000 fccb 	bl	80073c8 <TIM_Base_SetConfig>
 8006a32:	687b      	ldr	r3, [r7, #4]
 8006a34:	2201      	movs	r2, #1
 8006a36:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	2201      	movs	r2, #1
 8006a3e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006a42:	687b      	ldr	r3, [r7, #4]
 8006a44:	2201      	movs	r2, #1
 8006a46:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	2201      	movs	r2, #1
 8006a4e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006a52:	687b      	ldr	r3, [r7, #4]
 8006a54:	2201      	movs	r2, #1
 8006a56:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	2201      	movs	r2, #1
 8006a5e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006a62:	687b      	ldr	r3, [r7, #4]
 8006a64:	2201      	movs	r2, #1
 8006a66:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006a6a:	687b      	ldr	r3, [r7, #4]
 8006a6c:	2201      	movs	r2, #1
 8006a6e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	2201      	movs	r2, #1
 8006a76:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006a7a:	687b      	ldr	r3, [r7, #4]
 8006a7c:	2201      	movs	r2, #1
 8006a7e:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006a82:	687b      	ldr	r3, [r7, #4]
 8006a84:	2201      	movs	r2, #1
 8006a86:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8006a8a:	687b      	ldr	r3, [r7, #4]
 8006a8c:	2201      	movs	r2, #1
 8006a8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006a92:	2300      	movs	r3, #0
 8006a94:	4618      	mov	r0, r3
 8006a96:	3708      	adds	r7, #8
 8006a98:	46bd      	mov	sp, r7
 8006a9a:	bd80      	pop	{r7, pc}

08006a9c <HAL_TIM_PWM_MspInit>:
 8006a9c:	b480      	push	{r7}
 8006a9e:	b083      	sub	sp, #12
 8006aa0:	af00      	add	r7, sp, #0
 8006aa2:	6078      	str	r0, [r7, #4]
 8006aa4:	bf00      	nop
 8006aa6:	370c      	adds	r7, #12
 8006aa8:	46bd      	mov	sp, r7
 8006aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006aae:	4770      	bx	lr

08006ab0 <HAL_TIM_PWM_Start>:
 8006ab0:	b580      	push	{r7, lr}
 8006ab2:	b084      	sub	sp, #16
 8006ab4:	af00      	add	r7, sp, #0
 8006ab6:	6078      	str	r0, [r7, #4]
 8006ab8:	6039      	str	r1, [r7, #0]
 8006aba:	683b      	ldr	r3, [r7, #0]
 8006abc:	2b00      	cmp	r3, #0
 8006abe:	d109      	bne.n	8006ad4 <HAL_TIM_PWM_Start+0x24>
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006ac6:	b2db      	uxtb	r3, r3
 8006ac8:	2b01      	cmp	r3, #1
 8006aca:	bf14      	ite	ne
 8006acc:	2301      	movne	r3, #1
 8006ace:	2300      	moveq	r3, #0
 8006ad0:	b2db      	uxtb	r3, r3
 8006ad2:	e03c      	b.n	8006b4e <HAL_TIM_PWM_Start+0x9e>
 8006ad4:	683b      	ldr	r3, [r7, #0]
 8006ad6:	2b04      	cmp	r3, #4
 8006ad8:	d109      	bne.n	8006aee <HAL_TIM_PWM_Start+0x3e>
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8006ae0:	b2db      	uxtb	r3, r3
 8006ae2:	2b01      	cmp	r3, #1
 8006ae4:	bf14      	ite	ne
 8006ae6:	2301      	movne	r3, #1
 8006ae8:	2300      	moveq	r3, #0
 8006aea:	b2db      	uxtb	r3, r3
 8006aec:	e02f      	b.n	8006b4e <HAL_TIM_PWM_Start+0x9e>
 8006aee:	683b      	ldr	r3, [r7, #0]
 8006af0:	2b08      	cmp	r3, #8
 8006af2:	d109      	bne.n	8006b08 <HAL_TIM_PWM_Start+0x58>
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8006afa:	b2db      	uxtb	r3, r3
 8006afc:	2b01      	cmp	r3, #1
 8006afe:	bf14      	ite	ne
 8006b00:	2301      	movne	r3, #1
 8006b02:	2300      	moveq	r3, #0
 8006b04:	b2db      	uxtb	r3, r3
 8006b06:	e022      	b.n	8006b4e <HAL_TIM_PWM_Start+0x9e>
 8006b08:	683b      	ldr	r3, [r7, #0]
 8006b0a:	2b0c      	cmp	r3, #12
 8006b0c:	d109      	bne.n	8006b22 <HAL_TIM_PWM_Start+0x72>
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8006b14:	b2db      	uxtb	r3, r3
 8006b16:	2b01      	cmp	r3, #1
 8006b18:	bf14      	ite	ne
 8006b1a:	2301      	movne	r3, #1
 8006b1c:	2300      	moveq	r3, #0
 8006b1e:	b2db      	uxtb	r3, r3
 8006b20:	e015      	b.n	8006b4e <HAL_TIM_PWM_Start+0x9e>
 8006b22:	683b      	ldr	r3, [r7, #0]
 8006b24:	2b10      	cmp	r3, #16
 8006b26:	d109      	bne.n	8006b3c <HAL_TIM_PWM_Start+0x8c>
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8006b2e:	b2db      	uxtb	r3, r3
 8006b30:	2b01      	cmp	r3, #1
 8006b32:	bf14      	ite	ne
 8006b34:	2301      	movne	r3, #1
 8006b36:	2300      	moveq	r3, #0
 8006b38:	b2db      	uxtb	r3, r3
 8006b3a:	e008      	b.n	8006b4e <HAL_TIM_PWM_Start+0x9e>
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8006b42:	b2db      	uxtb	r3, r3
 8006b44:	2b01      	cmp	r3, #1
 8006b46:	bf14      	ite	ne
 8006b48:	2301      	movne	r3, #1
 8006b4a:	2300      	moveq	r3, #0
 8006b4c:	b2db      	uxtb	r3, r3
 8006b4e:	2b00      	cmp	r3, #0
 8006b50:	d001      	beq.n	8006b56 <HAL_TIM_PWM_Start+0xa6>
 8006b52:	2301      	movs	r3, #1
 8006b54:	e07e      	b.n	8006c54 <HAL_TIM_PWM_Start+0x1a4>
 8006b56:	683b      	ldr	r3, [r7, #0]
 8006b58:	2b00      	cmp	r3, #0
 8006b5a:	d104      	bne.n	8006b66 <HAL_TIM_PWM_Start+0xb6>
 8006b5c:	687b      	ldr	r3, [r7, #4]
 8006b5e:	2202      	movs	r2, #2
 8006b60:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006b64:	e023      	b.n	8006bae <HAL_TIM_PWM_Start+0xfe>
 8006b66:	683b      	ldr	r3, [r7, #0]
 8006b68:	2b04      	cmp	r3, #4
 8006b6a:	d104      	bne.n	8006b76 <HAL_TIM_PWM_Start+0xc6>
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	2202      	movs	r2, #2
 8006b70:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006b74:	e01b      	b.n	8006bae <HAL_TIM_PWM_Start+0xfe>
 8006b76:	683b      	ldr	r3, [r7, #0]
 8006b78:	2b08      	cmp	r3, #8
 8006b7a:	d104      	bne.n	8006b86 <HAL_TIM_PWM_Start+0xd6>
 8006b7c:	687b      	ldr	r3, [r7, #4]
 8006b7e:	2202      	movs	r2, #2
 8006b80:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006b84:	e013      	b.n	8006bae <HAL_TIM_PWM_Start+0xfe>
 8006b86:	683b      	ldr	r3, [r7, #0]
 8006b88:	2b0c      	cmp	r3, #12
 8006b8a:	d104      	bne.n	8006b96 <HAL_TIM_PWM_Start+0xe6>
 8006b8c:	687b      	ldr	r3, [r7, #4]
 8006b8e:	2202      	movs	r2, #2
 8006b90:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006b94:	e00b      	b.n	8006bae <HAL_TIM_PWM_Start+0xfe>
 8006b96:	683b      	ldr	r3, [r7, #0]
 8006b98:	2b10      	cmp	r3, #16
 8006b9a:	d104      	bne.n	8006ba6 <HAL_TIM_PWM_Start+0xf6>
 8006b9c:	687b      	ldr	r3, [r7, #4]
 8006b9e:	2202      	movs	r2, #2
 8006ba0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006ba4:	e003      	b.n	8006bae <HAL_TIM_PWM_Start+0xfe>
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	2202      	movs	r2, #2
 8006baa:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	681b      	ldr	r3, [r3, #0]
 8006bb2:	2201      	movs	r2, #1
 8006bb4:	6839      	ldr	r1, [r7, #0]
 8006bb6:	4618      	mov	r0, r3
 8006bb8:	f000 ff82 	bl	8007ac0 <TIM_CCxChannelCmd>
 8006bbc:	687b      	ldr	r3, [r7, #4]
 8006bbe:	681b      	ldr	r3, [r3, #0]
 8006bc0:	4a26      	ldr	r2, [pc, #152]	; (8006c5c <HAL_TIM_PWM_Start+0x1ac>)
 8006bc2:	4293      	cmp	r3, r2
 8006bc4:	d009      	beq.n	8006bda <HAL_TIM_PWM_Start+0x12a>
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	4a25      	ldr	r2, [pc, #148]	; (8006c60 <HAL_TIM_PWM_Start+0x1b0>)
 8006bcc:	4293      	cmp	r3, r2
 8006bce:	d004      	beq.n	8006bda <HAL_TIM_PWM_Start+0x12a>
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	681b      	ldr	r3, [r3, #0]
 8006bd4:	4a23      	ldr	r2, [pc, #140]	; (8006c64 <HAL_TIM_PWM_Start+0x1b4>)
 8006bd6:	4293      	cmp	r3, r2
 8006bd8:	d101      	bne.n	8006bde <HAL_TIM_PWM_Start+0x12e>
 8006bda:	2301      	movs	r3, #1
 8006bdc:	e000      	b.n	8006be0 <HAL_TIM_PWM_Start+0x130>
 8006bde:	2300      	movs	r3, #0
 8006be0:	2b00      	cmp	r3, #0
 8006be2:	d007      	beq.n	8006bf4 <HAL_TIM_PWM_Start+0x144>
 8006be4:	687b      	ldr	r3, [r7, #4]
 8006be6:	681b      	ldr	r3, [r3, #0]
 8006be8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006bea:	687b      	ldr	r3, [r7, #4]
 8006bec:	681b      	ldr	r3, [r3, #0]
 8006bee:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006bf2:	645a      	str	r2, [r3, #68]	; 0x44
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	681b      	ldr	r3, [r3, #0]
 8006bf8:	4a18      	ldr	r2, [pc, #96]	; (8006c5c <HAL_TIM_PWM_Start+0x1ac>)
 8006bfa:	4293      	cmp	r3, r2
 8006bfc:	d009      	beq.n	8006c12 <HAL_TIM_PWM_Start+0x162>
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	681b      	ldr	r3, [r3, #0]
 8006c02:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006c06:	d004      	beq.n	8006c12 <HAL_TIM_PWM_Start+0x162>
 8006c08:	687b      	ldr	r3, [r7, #4]
 8006c0a:	681b      	ldr	r3, [r3, #0]
 8006c0c:	4a14      	ldr	r2, [pc, #80]	; (8006c60 <HAL_TIM_PWM_Start+0x1b0>)
 8006c0e:	4293      	cmp	r3, r2
 8006c10:	d115      	bne.n	8006c3e <HAL_TIM_PWM_Start+0x18e>
 8006c12:	687b      	ldr	r3, [r7, #4]
 8006c14:	681b      	ldr	r3, [r3, #0]
 8006c16:	689a      	ldr	r2, [r3, #8]
 8006c18:	4b13      	ldr	r3, [pc, #76]	; (8006c68 <HAL_TIM_PWM_Start+0x1b8>)
 8006c1a:	4013      	ands	r3, r2
 8006c1c:	60fb      	str	r3, [r7, #12]
 8006c1e:	68fb      	ldr	r3, [r7, #12]
 8006c20:	2b06      	cmp	r3, #6
 8006c22:	d015      	beq.n	8006c50 <HAL_TIM_PWM_Start+0x1a0>
 8006c24:	68fb      	ldr	r3, [r7, #12]
 8006c26:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006c2a:	d011      	beq.n	8006c50 <HAL_TIM_PWM_Start+0x1a0>
 8006c2c:	687b      	ldr	r3, [r7, #4]
 8006c2e:	681b      	ldr	r3, [r3, #0]
 8006c30:	681a      	ldr	r2, [r3, #0]
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	681b      	ldr	r3, [r3, #0]
 8006c36:	f042 0201 	orr.w	r2, r2, #1
 8006c3a:	601a      	str	r2, [r3, #0]
 8006c3c:	e008      	b.n	8006c50 <HAL_TIM_PWM_Start+0x1a0>
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	681b      	ldr	r3, [r3, #0]
 8006c42:	681a      	ldr	r2, [r3, #0]
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	681b      	ldr	r3, [r3, #0]
 8006c48:	f042 0201 	orr.w	r2, r2, #1
 8006c4c:	601a      	str	r2, [r3, #0]
 8006c4e:	e000      	b.n	8006c52 <HAL_TIM_PWM_Start+0x1a2>
 8006c50:	bf00      	nop
 8006c52:	2300      	movs	r3, #0
 8006c54:	4618      	mov	r0, r3
 8006c56:	3710      	adds	r7, #16
 8006c58:	46bd      	mov	sp, r7
 8006c5a:	bd80      	pop	{r7, pc}
 8006c5c:	40012c00 	.word	0x40012c00
 8006c60:	40014000 	.word	0x40014000
 8006c64:	40014400 	.word	0x40014400
 8006c68:	00010007 	.word	0x00010007

08006c6c <HAL_TIM_PWM_Stop>:
 8006c6c:	b580      	push	{r7, lr}
 8006c6e:	b082      	sub	sp, #8
 8006c70:	af00      	add	r7, sp, #0
 8006c72:	6078      	str	r0, [r7, #4]
 8006c74:	6039      	str	r1, [r7, #0]
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	681b      	ldr	r3, [r3, #0]
 8006c7a:	2200      	movs	r2, #0
 8006c7c:	6839      	ldr	r1, [r7, #0]
 8006c7e:	4618      	mov	r0, r3
 8006c80:	f000 ff1e 	bl	8007ac0 <TIM_CCxChannelCmd>
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	681b      	ldr	r3, [r3, #0]
 8006c88:	4a39      	ldr	r2, [pc, #228]	; (8006d70 <HAL_TIM_PWM_Stop+0x104>)
 8006c8a:	4293      	cmp	r3, r2
 8006c8c:	d009      	beq.n	8006ca2 <HAL_TIM_PWM_Stop+0x36>
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	681b      	ldr	r3, [r3, #0]
 8006c92:	4a38      	ldr	r2, [pc, #224]	; (8006d74 <HAL_TIM_PWM_Stop+0x108>)
 8006c94:	4293      	cmp	r3, r2
 8006c96:	d004      	beq.n	8006ca2 <HAL_TIM_PWM_Stop+0x36>
 8006c98:	687b      	ldr	r3, [r7, #4]
 8006c9a:	681b      	ldr	r3, [r3, #0]
 8006c9c:	4a36      	ldr	r2, [pc, #216]	; (8006d78 <HAL_TIM_PWM_Stop+0x10c>)
 8006c9e:	4293      	cmp	r3, r2
 8006ca0:	d101      	bne.n	8006ca6 <HAL_TIM_PWM_Stop+0x3a>
 8006ca2:	2301      	movs	r3, #1
 8006ca4:	e000      	b.n	8006ca8 <HAL_TIM_PWM_Stop+0x3c>
 8006ca6:	2300      	movs	r3, #0
 8006ca8:	2b00      	cmp	r3, #0
 8006caa:	d017      	beq.n	8006cdc <HAL_TIM_PWM_Stop+0x70>
 8006cac:	687b      	ldr	r3, [r7, #4]
 8006cae:	681b      	ldr	r3, [r3, #0]
 8006cb0:	6a1a      	ldr	r2, [r3, #32]
 8006cb2:	f241 1311 	movw	r3, #4369	; 0x1111
 8006cb6:	4013      	ands	r3, r2
 8006cb8:	2b00      	cmp	r3, #0
 8006cba:	d10f      	bne.n	8006cdc <HAL_TIM_PWM_Stop+0x70>
 8006cbc:	687b      	ldr	r3, [r7, #4]
 8006cbe:	681b      	ldr	r3, [r3, #0]
 8006cc0:	6a1a      	ldr	r2, [r3, #32]
 8006cc2:	f240 4344 	movw	r3, #1092	; 0x444
 8006cc6:	4013      	ands	r3, r2
 8006cc8:	2b00      	cmp	r3, #0
 8006cca:	d107      	bne.n	8006cdc <HAL_TIM_PWM_Stop+0x70>
 8006ccc:	687b      	ldr	r3, [r7, #4]
 8006cce:	681b      	ldr	r3, [r3, #0]
 8006cd0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006cd2:	687b      	ldr	r3, [r7, #4]
 8006cd4:	681b      	ldr	r3, [r3, #0]
 8006cd6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006cda:	645a      	str	r2, [r3, #68]	; 0x44
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	681b      	ldr	r3, [r3, #0]
 8006ce0:	6a1a      	ldr	r2, [r3, #32]
 8006ce2:	f241 1311 	movw	r3, #4369	; 0x1111
 8006ce6:	4013      	ands	r3, r2
 8006ce8:	2b00      	cmp	r3, #0
 8006cea:	d10f      	bne.n	8006d0c <HAL_TIM_PWM_Stop+0xa0>
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	681b      	ldr	r3, [r3, #0]
 8006cf0:	6a1a      	ldr	r2, [r3, #32]
 8006cf2:	f240 4344 	movw	r3, #1092	; 0x444
 8006cf6:	4013      	ands	r3, r2
 8006cf8:	2b00      	cmp	r3, #0
 8006cfa:	d107      	bne.n	8006d0c <HAL_TIM_PWM_Stop+0xa0>
 8006cfc:	687b      	ldr	r3, [r7, #4]
 8006cfe:	681b      	ldr	r3, [r3, #0]
 8006d00:	681a      	ldr	r2, [r3, #0]
 8006d02:	687b      	ldr	r3, [r7, #4]
 8006d04:	681b      	ldr	r3, [r3, #0]
 8006d06:	f022 0201 	bic.w	r2, r2, #1
 8006d0a:	601a      	str	r2, [r3, #0]
 8006d0c:	683b      	ldr	r3, [r7, #0]
 8006d0e:	2b00      	cmp	r3, #0
 8006d10:	d104      	bne.n	8006d1c <HAL_TIM_PWM_Stop+0xb0>
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	2201      	movs	r2, #1
 8006d16:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006d1a:	e023      	b.n	8006d64 <HAL_TIM_PWM_Stop+0xf8>
 8006d1c:	683b      	ldr	r3, [r7, #0]
 8006d1e:	2b04      	cmp	r3, #4
 8006d20:	d104      	bne.n	8006d2c <HAL_TIM_PWM_Stop+0xc0>
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	2201      	movs	r2, #1
 8006d26:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006d2a:	e01b      	b.n	8006d64 <HAL_TIM_PWM_Stop+0xf8>
 8006d2c:	683b      	ldr	r3, [r7, #0]
 8006d2e:	2b08      	cmp	r3, #8
 8006d30:	d104      	bne.n	8006d3c <HAL_TIM_PWM_Stop+0xd0>
 8006d32:	687b      	ldr	r3, [r7, #4]
 8006d34:	2201      	movs	r2, #1
 8006d36:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006d3a:	e013      	b.n	8006d64 <HAL_TIM_PWM_Stop+0xf8>
 8006d3c:	683b      	ldr	r3, [r7, #0]
 8006d3e:	2b0c      	cmp	r3, #12
 8006d40:	d104      	bne.n	8006d4c <HAL_TIM_PWM_Stop+0xe0>
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	2201      	movs	r2, #1
 8006d46:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006d4a:	e00b      	b.n	8006d64 <HAL_TIM_PWM_Stop+0xf8>
 8006d4c:	683b      	ldr	r3, [r7, #0]
 8006d4e:	2b10      	cmp	r3, #16
 8006d50:	d104      	bne.n	8006d5c <HAL_TIM_PWM_Stop+0xf0>
 8006d52:	687b      	ldr	r3, [r7, #4]
 8006d54:	2201      	movs	r2, #1
 8006d56:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006d5a:	e003      	b.n	8006d64 <HAL_TIM_PWM_Stop+0xf8>
 8006d5c:	687b      	ldr	r3, [r7, #4]
 8006d5e:	2201      	movs	r2, #1
 8006d60:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006d64:	2300      	movs	r3, #0
 8006d66:	4618      	mov	r0, r3
 8006d68:	3708      	adds	r7, #8
 8006d6a:	46bd      	mov	sp, r7
 8006d6c:	bd80      	pop	{r7, pc}
 8006d6e:	bf00      	nop
 8006d70:	40012c00 	.word	0x40012c00
 8006d74:	40014000 	.word	0x40014000
 8006d78:	40014400 	.word	0x40014400

08006d7c <HAL_TIM_IRQHandler>:
 8006d7c:	b580      	push	{r7, lr}
 8006d7e:	b082      	sub	sp, #8
 8006d80:	af00      	add	r7, sp, #0
 8006d82:	6078      	str	r0, [r7, #4]
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	681b      	ldr	r3, [r3, #0]
 8006d88:	691b      	ldr	r3, [r3, #16]
 8006d8a:	f003 0302 	and.w	r3, r3, #2
 8006d8e:	2b02      	cmp	r3, #2
 8006d90:	d122      	bne.n	8006dd8 <HAL_TIM_IRQHandler+0x5c>
 8006d92:	687b      	ldr	r3, [r7, #4]
 8006d94:	681b      	ldr	r3, [r3, #0]
 8006d96:	68db      	ldr	r3, [r3, #12]
 8006d98:	f003 0302 	and.w	r3, r3, #2
 8006d9c:	2b02      	cmp	r3, #2
 8006d9e:	d11b      	bne.n	8006dd8 <HAL_TIM_IRQHandler+0x5c>
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	681b      	ldr	r3, [r3, #0]
 8006da4:	f06f 0202 	mvn.w	r2, #2
 8006da8:	611a      	str	r2, [r3, #16]
 8006daa:	687b      	ldr	r3, [r7, #4]
 8006dac:	2201      	movs	r2, #1
 8006dae:	771a      	strb	r2, [r3, #28]
 8006db0:	687b      	ldr	r3, [r7, #4]
 8006db2:	681b      	ldr	r3, [r3, #0]
 8006db4:	699b      	ldr	r3, [r3, #24]
 8006db6:	f003 0303 	and.w	r3, r3, #3
 8006dba:	2b00      	cmp	r3, #0
 8006dbc:	d003      	beq.n	8006dc6 <HAL_TIM_IRQHandler+0x4a>
 8006dbe:	6878      	ldr	r0, [r7, #4]
 8006dc0:	f000 fae3 	bl	800738a <HAL_TIM_IC_CaptureCallback>
 8006dc4:	e005      	b.n	8006dd2 <HAL_TIM_IRQHandler+0x56>
 8006dc6:	6878      	ldr	r0, [r7, #4]
 8006dc8:	f000 fad5 	bl	8007376 <HAL_TIM_OC_DelayElapsedCallback>
 8006dcc:	6878      	ldr	r0, [r7, #4]
 8006dce:	f000 fae6 	bl	800739e <HAL_TIM_PWM_PulseFinishedCallback>
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	2200      	movs	r2, #0
 8006dd6:	771a      	strb	r2, [r3, #28]
 8006dd8:	687b      	ldr	r3, [r7, #4]
 8006dda:	681b      	ldr	r3, [r3, #0]
 8006ddc:	691b      	ldr	r3, [r3, #16]
 8006dde:	f003 0304 	and.w	r3, r3, #4
 8006de2:	2b04      	cmp	r3, #4
 8006de4:	d122      	bne.n	8006e2c <HAL_TIM_IRQHandler+0xb0>
 8006de6:	687b      	ldr	r3, [r7, #4]
 8006de8:	681b      	ldr	r3, [r3, #0]
 8006dea:	68db      	ldr	r3, [r3, #12]
 8006dec:	f003 0304 	and.w	r3, r3, #4
 8006df0:	2b04      	cmp	r3, #4
 8006df2:	d11b      	bne.n	8006e2c <HAL_TIM_IRQHandler+0xb0>
 8006df4:	687b      	ldr	r3, [r7, #4]
 8006df6:	681b      	ldr	r3, [r3, #0]
 8006df8:	f06f 0204 	mvn.w	r2, #4
 8006dfc:	611a      	str	r2, [r3, #16]
 8006dfe:	687b      	ldr	r3, [r7, #4]
 8006e00:	2202      	movs	r2, #2
 8006e02:	771a      	strb	r2, [r3, #28]
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	681b      	ldr	r3, [r3, #0]
 8006e08:	699b      	ldr	r3, [r3, #24]
 8006e0a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006e0e:	2b00      	cmp	r3, #0
 8006e10:	d003      	beq.n	8006e1a <HAL_TIM_IRQHandler+0x9e>
 8006e12:	6878      	ldr	r0, [r7, #4]
 8006e14:	f000 fab9 	bl	800738a <HAL_TIM_IC_CaptureCallback>
 8006e18:	e005      	b.n	8006e26 <HAL_TIM_IRQHandler+0xaa>
 8006e1a:	6878      	ldr	r0, [r7, #4]
 8006e1c:	f000 faab 	bl	8007376 <HAL_TIM_OC_DelayElapsedCallback>
 8006e20:	6878      	ldr	r0, [r7, #4]
 8006e22:	f000 fabc 	bl	800739e <HAL_TIM_PWM_PulseFinishedCallback>
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	2200      	movs	r2, #0
 8006e2a:	771a      	strb	r2, [r3, #28]
 8006e2c:	687b      	ldr	r3, [r7, #4]
 8006e2e:	681b      	ldr	r3, [r3, #0]
 8006e30:	691b      	ldr	r3, [r3, #16]
 8006e32:	f003 0308 	and.w	r3, r3, #8
 8006e36:	2b08      	cmp	r3, #8
 8006e38:	d122      	bne.n	8006e80 <HAL_TIM_IRQHandler+0x104>
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	681b      	ldr	r3, [r3, #0]
 8006e3e:	68db      	ldr	r3, [r3, #12]
 8006e40:	f003 0308 	and.w	r3, r3, #8
 8006e44:	2b08      	cmp	r3, #8
 8006e46:	d11b      	bne.n	8006e80 <HAL_TIM_IRQHandler+0x104>
 8006e48:	687b      	ldr	r3, [r7, #4]
 8006e4a:	681b      	ldr	r3, [r3, #0]
 8006e4c:	f06f 0208 	mvn.w	r2, #8
 8006e50:	611a      	str	r2, [r3, #16]
 8006e52:	687b      	ldr	r3, [r7, #4]
 8006e54:	2204      	movs	r2, #4
 8006e56:	771a      	strb	r2, [r3, #28]
 8006e58:	687b      	ldr	r3, [r7, #4]
 8006e5a:	681b      	ldr	r3, [r3, #0]
 8006e5c:	69db      	ldr	r3, [r3, #28]
 8006e5e:	f003 0303 	and.w	r3, r3, #3
 8006e62:	2b00      	cmp	r3, #0
 8006e64:	d003      	beq.n	8006e6e <HAL_TIM_IRQHandler+0xf2>
 8006e66:	6878      	ldr	r0, [r7, #4]
 8006e68:	f000 fa8f 	bl	800738a <HAL_TIM_IC_CaptureCallback>
 8006e6c:	e005      	b.n	8006e7a <HAL_TIM_IRQHandler+0xfe>
 8006e6e:	6878      	ldr	r0, [r7, #4]
 8006e70:	f000 fa81 	bl	8007376 <HAL_TIM_OC_DelayElapsedCallback>
 8006e74:	6878      	ldr	r0, [r7, #4]
 8006e76:	f000 fa92 	bl	800739e <HAL_TIM_PWM_PulseFinishedCallback>
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	2200      	movs	r2, #0
 8006e7e:	771a      	strb	r2, [r3, #28]
 8006e80:	687b      	ldr	r3, [r7, #4]
 8006e82:	681b      	ldr	r3, [r3, #0]
 8006e84:	691b      	ldr	r3, [r3, #16]
 8006e86:	f003 0310 	and.w	r3, r3, #16
 8006e8a:	2b10      	cmp	r3, #16
 8006e8c:	d122      	bne.n	8006ed4 <HAL_TIM_IRQHandler+0x158>
 8006e8e:	687b      	ldr	r3, [r7, #4]
 8006e90:	681b      	ldr	r3, [r3, #0]
 8006e92:	68db      	ldr	r3, [r3, #12]
 8006e94:	f003 0310 	and.w	r3, r3, #16
 8006e98:	2b10      	cmp	r3, #16
 8006e9a:	d11b      	bne.n	8006ed4 <HAL_TIM_IRQHandler+0x158>
 8006e9c:	687b      	ldr	r3, [r7, #4]
 8006e9e:	681b      	ldr	r3, [r3, #0]
 8006ea0:	f06f 0210 	mvn.w	r2, #16
 8006ea4:	611a      	str	r2, [r3, #16]
 8006ea6:	687b      	ldr	r3, [r7, #4]
 8006ea8:	2208      	movs	r2, #8
 8006eaa:	771a      	strb	r2, [r3, #28]
 8006eac:	687b      	ldr	r3, [r7, #4]
 8006eae:	681b      	ldr	r3, [r3, #0]
 8006eb0:	69db      	ldr	r3, [r3, #28]
 8006eb2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006eb6:	2b00      	cmp	r3, #0
 8006eb8:	d003      	beq.n	8006ec2 <HAL_TIM_IRQHandler+0x146>
 8006eba:	6878      	ldr	r0, [r7, #4]
 8006ebc:	f000 fa65 	bl	800738a <HAL_TIM_IC_CaptureCallback>
 8006ec0:	e005      	b.n	8006ece <HAL_TIM_IRQHandler+0x152>
 8006ec2:	6878      	ldr	r0, [r7, #4]
 8006ec4:	f000 fa57 	bl	8007376 <HAL_TIM_OC_DelayElapsedCallback>
 8006ec8:	6878      	ldr	r0, [r7, #4]
 8006eca:	f000 fa68 	bl	800739e <HAL_TIM_PWM_PulseFinishedCallback>
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	2200      	movs	r2, #0
 8006ed2:	771a      	strb	r2, [r3, #28]
 8006ed4:	687b      	ldr	r3, [r7, #4]
 8006ed6:	681b      	ldr	r3, [r3, #0]
 8006ed8:	691b      	ldr	r3, [r3, #16]
 8006eda:	f003 0301 	and.w	r3, r3, #1
 8006ede:	2b01      	cmp	r3, #1
 8006ee0:	d10e      	bne.n	8006f00 <HAL_TIM_IRQHandler+0x184>
 8006ee2:	687b      	ldr	r3, [r7, #4]
 8006ee4:	681b      	ldr	r3, [r3, #0]
 8006ee6:	68db      	ldr	r3, [r3, #12]
 8006ee8:	f003 0301 	and.w	r3, r3, #1
 8006eec:	2b01      	cmp	r3, #1
 8006eee:	d107      	bne.n	8006f00 <HAL_TIM_IRQHandler+0x184>
 8006ef0:	687b      	ldr	r3, [r7, #4]
 8006ef2:	681b      	ldr	r3, [r3, #0]
 8006ef4:	f06f 0201 	mvn.w	r2, #1
 8006ef8:	611a      	str	r2, [r3, #16]
 8006efa:	6878      	ldr	r0, [r7, #4]
 8006efc:	f7fa fb14 	bl	8001528 <HAL_TIM_PeriodElapsedCallback>
 8006f00:	687b      	ldr	r3, [r7, #4]
 8006f02:	681b      	ldr	r3, [r3, #0]
 8006f04:	691b      	ldr	r3, [r3, #16]
 8006f06:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006f0a:	2b80      	cmp	r3, #128	; 0x80
 8006f0c:	d10e      	bne.n	8006f2c <HAL_TIM_IRQHandler+0x1b0>
 8006f0e:	687b      	ldr	r3, [r7, #4]
 8006f10:	681b      	ldr	r3, [r3, #0]
 8006f12:	68db      	ldr	r3, [r3, #12]
 8006f14:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006f18:	2b80      	cmp	r3, #128	; 0x80
 8006f1a:	d107      	bne.n	8006f2c <HAL_TIM_IRQHandler+0x1b0>
 8006f1c:	687b      	ldr	r3, [r7, #4]
 8006f1e:	681b      	ldr	r3, [r3, #0]
 8006f20:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006f24:	611a      	str	r2, [r3, #16]
 8006f26:	6878      	ldr	r0, [r7, #4]
 8006f28:	f000 fed8 	bl	8007cdc <HAL_TIMEx_BreakCallback>
 8006f2c:	687b      	ldr	r3, [r7, #4]
 8006f2e:	681b      	ldr	r3, [r3, #0]
 8006f30:	691b      	ldr	r3, [r3, #16]
 8006f32:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006f36:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006f3a:	d10e      	bne.n	8006f5a <HAL_TIM_IRQHandler+0x1de>
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	68db      	ldr	r3, [r3, #12]
 8006f42:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006f46:	2b80      	cmp	r3, #128	; 0x80
 8006f48:	d107      	bne.n	8006f5a <HAL_TIM_IRQHandler+0x1de>
 8006f4a:	687b      	ldr	r3, [r7, #4]
 8006f4c:	681b      	ldr	r3, [r3, #0]
 8006f4e:	f46f 7280 	mvn.w	r2, #256	; 0x100
 8006f52:	611a      	str	r2, [r3, #16]
 8006f54:	6878      	ldr	r0, [r7, #4]
 8006f56:	f000 fecb 	bl	8007cf0 <HAL_TIMEx_Break2Callback>
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	681b      	ldr	r3, [r3, #0]
 8006f5e:	691b      	ldr	r3, [r3, #16]
 8006f60:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006f64:	2b40      	cmp	r3, #64	; 0x40
 8006f66:	d10e      	bne.n	8006f86 <HAL_TIM_IRQHandler+0x20a>
 8006f68:	687b      	ldr	r3, [r7, #4]
 8006f6a:	681b      	ldr	r3, [r3, #0]
 8006f6c:	68db      	ldr	r3, [r3, #12]
 8006f6e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006f72:	2b40      	cmp	r3, #64	; 0x40
 8006f74:	d107      	bne.n	8006f86 <HAL_TIM_IRQHandler+0x20a>
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	681b      	ldr	r3, [r3, #0]
 8006f7a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006f7e:	611a      	str	r2, [r3, #16]
 8006f80:	6878      	ldr	r0, [r7, #4]
 8006f82:	f000 fa16 	bl	80073b2 <HAL_TIM_TriggerCallback>
 8006f86:	687b      	ldr	r3, [r7, #4]
 8006f88:	681b      	ldr	r3, [r3, #0]
 8006f8a:	691b      	ldr	r3, [r3, #16]
 8006f8c:	f003 0320 	and.w	r3, r3, #32
 8006f90:	2b20      	cmp	r3, #32
 8006f92:	d10e      	bne.n	8006fb2 <HAL_TIM_IRQHandler+0x236>
 8006f94:	687b      	ldr	r3, [r7, #4]
 8006f96:	681b      	ldr	r3, [r3, #0]
 8006f98:	68db      	ldr	r3, [r3, #12]
 8006f9a:	f003 0320 	and.w	r3, r3, #32
 8006f9e:	2b20      	cmp	r3, #32
 8006fa0:	d107      	bne.n	8006fb2 <HAL_TIM_IRQHandler+0x236>
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	f06f 0220 	mvn.w	r2, #32
 8006faa:	611a      	str	r2, [r3, #16]
 8006fac:	6878      	ldr	r0, [r7, #4]
 8006fae:	f000 fe8b 	bl	8007cc8 <HAL_TIMEx_CommutCallback>
 8006fb2:	bf00      	nop
 8006fb4:	3708      	adds	r7, #8
 8006fb6:	46bd      	mov	sp, r7
 8006fb8:	bd80      	pop	{r7, pc}
	...

08006fbc <HAL_TIM_PWM_ConfigChannel>:
 8006fbc:	b580      	push	{r7, lr}
 8006fbe:	b086      	sub	sp, #24
 8006fc0:	af00      	add	r7, sp, #0
 8006fc2:	60f8      	str	r0, [r7, #12]
 8006fc4:	60b9      	str	r1, [r7, #8]
 8006fc6:	607a      	str	r2, [r7, #4]
 8006fc8:	2300      	movs	r3, #0
 8006fca:	75fb      	strb	r3, [r7, #23]
 8006fcc:	68fb      	ldr	r3, [r7, #12]
 8006fce:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006fd2:	2b01      	cmp	r3, #1
 8006fd4:	d101      	bne.n	8006fda <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006fd6:	2302      	movs	r3, #2
 8006fd8:	e0ff      	b.n	80071da <HAL_TIM_PWM_ConfigChannel+0x21e>
 8006fda:	68fb      	ldr	r3, [r7, #12]
 8006fdc:	2201      	movs	r2, #1
 8006fde:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006fe2:	687b      	ldr	r3, [r7, #4]
 8006fe4:	2b14      	cmp	r3, #20
 8006fe6:	f200 80f0 	bhi.w	80071ca <HAL_TIM_PWM_ConfigChannel+0x20e>
 8006fea:	a201      	add	r2, pc, #4	; (adr r2, 8006ff0 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8006fec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006ff0:	08007045 	.word	0x08007045
 8006ff4:	080071cb 	.word	0x080071cb
 8006ff8:	080071cb 	.word	0x080071cb
 8006ffc:	080071cb 	.word	0x080071cb
 8007000:	08007085 	.word	0x08007085
 8007004:	080071cb 	.word	0x080071cb
 8007008:	080071cb 	.word	0x080071cb
 800700c:	080071cb 	.word	0x080071cb
 8007010:	080070c7 	.word	0x080070c7
 8007014:	080071cb 	.word	0x080071cb
 8007018:	080071cb 	.word	0x080071cb
 800701c:	080071cb 	.word	0x080071cb
 8007020:	08007107 	.word	0x08007107
 8007024:	080071cb 	.word	0x080071cb
 8007028:	080071cb 	.word	0x080071cb
 800702c:	080071cb 	.word	0x080071cb
 8007030:	08007149 	.word	0x08007149
 8007034:	080071cb 	.word	0x080071cb
 8007038:	080071cb 	.word	0x080071cb
 800703c:	080071cb 	.word	0x080071cb
 8007040:	08007189 	.word	0x08007189
 8007044:	68fb      	ldr	r3, [r7, #12]
 8007046:	681b      	ldr	r3, [r3, #0]
 8007048:	68b9      	ldr	r1, [r7, #8]
 800704a:	4618      	mov	r0, r3
 800704c:	f000 fa20 	bl	8007490 <TIM_OC1_SetConfig>
 8007050:	68fb      	ldr	r3, [r7, #12]
 8007052:	681b      	ldr	r3, [r3, #0]
 8007054:	699a      	ldr	r2, [r3, #24]
 8007056:	68fb      	ldr	r3, [r7, #12]
 8007058:	681b      	ldr	r3, [r3, #0]
 800705a:	f042 0208 	orr.w	r2, r2, #8
 800705e:	619a      	str	r2, [r3, #24]
 8007060:	68fb      	ldr	r3, [r7, #12]
 8007062:	681b      	ldr	r3, [r3, #0]
 8007064:	699a      	ldr	r2, [r3, #24]
 8007066:	68fb      	ldr	r3, [r7, #12]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	f022 0204 	bic.w	r2, r2, #4
 800706e:	619a      	str	r2, [r3, #24]
 8007070:	68fb      	ldr	r3, [r7, #12]
 8007072:	681b      	ldr	r3, [r3, #0]
 8007074:	6999      	ldr	r1, [r3, #24]
 8007076:	68bb      	ldr	r3, [r7, #8]
 8007078:	691a      	ldr	r2, [r3, #16]
 800707a:	68fb      	ldr	r3, [r7, #12]
 800707c:	681b      	ldr	r3, [r3, #0]
 800707e:	430a      	orrs	r2, r1
 8007080:	619a      	str	r2, [r3, #24]
 8007082:	e0a5      	b.n	80071d0 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007084:	68fb      	ldr	r3, [r7, #12]
 8007086:	681b      	ldr	r3, [r3, #0]
 8007088:	68b9      	ldr	r1, [r7, #8]
 800708a:	4618      	mov	r0, r3
 800708c:	f000 fa7c 	bl	8007588 <TIM_OC2_SetConfig>
 8007090:	68fb      	ldr	r3, [r7, #12]
 8007092:	681b      	ldr	r3, [r3, #0]
 8007094:	699a      	ldr	r2, [r3, #24]
 8007096:	68fb      	ldr	r3, [r7, #12]
 8007098:	681b      	ldr	r3, [r3, #0]
 800709a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800709e:	619a      	str	r2, [r3, #24]
 80070a0:	68fb      	ldr	r3, [r7, #12]
 80070a2:	681b      	ldr	r3, [r3, #0]
 80070a4:	699a      	ldr	r2, [r3, #24]
 80070a6:	68fb      	ldr	r3, [r7, #12]
 80070a8:	681b      	ldr	r3, [r3, #0]
 80070aa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80070ae:	619a      	str	r2, [r3, #24]
 80070b0:	68fb      	ldr	r3, [r7, #12]
 80070b2:	681b      	ldr	r3, [r3, #0]
 80070b4:	6999      	ldr	r1, [r3, #24]
 80070b6:	68bb      	ldr	r3, [r7, #8]
 80070b8:	691b      	ldr	r3, [r3, #16]
 80070ba:	021a      	lsls	r2, r3, #8
 80070bc:	68fb      	ldr	r3, [r7, #12]
 80070be:	681b      	ldr	r3, [r3, #0]
 80070c0:	430a      	orrs	r2, r1
 80070c2:	619a      	str	r2, [r3, #24]
 80070c4:	e084      	b.n	80071d0 <HAL_TIM_PWM_ConfigChannel+0x214>
 80070c6:	68fb      	ldr	r3, [r7, #12]
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	68b9      	ldr	r1, [r7, #8]
 80070cc:	4618      	mov	r0, r3
 80070ce:	f000 fad5 	bl	800767c <TIM_OC3_SetConfig>
 80070d2:	68fb      	ldr	r3, [r7, #12]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	69da      	ldr	r2, [r3, #28]
 80070d8:	68fb      	ldr	r3, [r7, #12]
 80070da:	681b      	ldr	r3, [r3, #0]
 80070dc:	f042 0208 	orr.w	r2, r2, #8
 80070e0:	61da      	str	r2, [r3, #28]
 80070e2:	68fb      	ldr	r3, [r7, #12]
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	69da      	ldr	r2, [r3, #28]
 80070e8:	68fb      	ldr	r3, [r7, #12]
 80070ea:	681b      	ldr	r3, [r3, #0]
 80070ec:	f022 0204 	bic.w	r2, r2, #4
 80070f0:	61da      	str	r2, [r3, #28]
 80070f2:	68fb      	ldr	r3, [r7, #12]
 80070f4:	681b      	ldr	r3, [r3, #0]
 80070f6:	69d9      	ldr	r1, [r3, #28]
 80070f8:	68bb      	ldr	r3, [r7, #8]
 80070fa:	691a      	ldr	r2, [r3, #16]
 80070fc:	68fb      	ldr	r3, [r7, #12]
 80070fe:	681b      	ldr	r3, [r3, #0]
 8007100:	430a      	orrs	r2, r1
 8007102:	61da      	str	r2, [r3, #28]
 8007104:	e064      	b.n	80071d0 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007106:	68fb      	ldr	r3, [r7, #12]
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	68b9      	ldr	r1, [r7, #8]
 800710c:	4618      	mov	r0, r3
 800710e:	f000 fb2d 	bl	800776c <TIM_OC4_SetConfig>
 8007112:	68fb      	ldr	r3, [r7, #12]
 8007114:	681b      	ldr	r3, [r3, #0]
 8007116:	69da      	ldr	r2, [r3, #28]
 8007118:	68fb      	ldr	r3, [r7, #12]
 800711a:	681b      	ldr	r3, [r3, #0]
 800711c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007120:	61da      	str	r2, [r3, #28]
 8007122:	68fb      	ldr	r3, [r7, #12]
 8007124:	681b      	ldr	r3, [r3, #0]
 8007126:	69da      	ldr	r2, [r3, #28]
 8007128:	68fb      	ldr	r3, [r7, #12]
 800712a:	681b      	ldr	r3, [r3, #0]
 800712c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007130:	61da      	str	r2, [r3, #28]
 8007132:	68fb      	ldr	r3, [r7, #12]
 8007134:	681b      	ldr	r3, [r3, #0]
 8007136:	69d9      	ldr	r1, [r3, #28]
 8007138:	68bb      	ldr	r3, [r7, #8]
 800713a:	691b      	ldr	r3, [r3, #16]
 800713c:	021a      	lsls	r2, r3, #8
 800713e:	68fb      	ldr	r3, [r7, #12]
 8007140:	681b      	ldr	r3, [r3, #0]
 8007142:	430a      	orrs	r2, r1
 8007144:	61da      	str	r2, [r3, #28]
 8007146:	e043      	b.n	80071d0 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007148:	68fb      	ldr	r3, [r7, #12]
 800714a:	681b      	ldr	r3, [r3, #0]
 800714c:	68b9      	ldr	r1, [r7, #8]
 800714e:	4618      	mov	r0, r3
 8007150:	f000 fb6a 	bl	8007828 <TIM_OC5_SetConfig>
 8007154:	68fb      	ldr	r3, [r7, #12]
 8007156:	681b      	ldr	r3, [r3, #0]
 8007158:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800715a:	68fb      	ldr	r3, [r7, #12]
 800715c:	681b      	ldr	r3, [r3, #0]
 800715e:	f042 0208 	orr.w	r2, r2, #8
 8007162:	655a      	str	r2, [r3, #84]	; 0x54
 8007164:	68fb      	ldr	r3, [r7, #12]
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800716a:	68fb      	ldr	r3, [r7, #12]
 800716c:	681b      	ldr	r3, [r3, #0]
 800716e:	f022 0204 	bic.w	r2, r2, #4
 8007172:	655a      	str	r2, [r3, #84]	; 0x54
 8007174:	68fb      	ldr	r3, [r7, #12]
 8007176:	681b      	ldr	r3, [r3, #0]
 8007178:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800717a:	68bb      	ldr	r3, [r7, #8]
 800717c:	691a      	ldr	r2, [r3, #16]
 800717e:	68fb      	ldr	r3, [r7, #12]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	430a      	orrs	r2, r1
 8007184:	655a      	str	r2, [r3, #84]	; 0x54
 8007186:	e023      	b.n	80071d0 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007188:	68fb      	ldr	r3, [r7, #12]
 800718a:	681b      	ldr	r3, [r3, #0]
 800718c:	68b9      	ldr	r1, [r7, #8]
 800718e:	4618      	mov	r0, r3
 8007190:	f000 fba2 	bl	80078d8 <TIM_OC6_SetConfig>
 8007194:	68fb      	ldr	r3, [r7, #12]
 8007196:	681b      	ldr	r3, [r3, #0]
 8007198:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800719a:	68fb      	ldr	r3, [r7, #12]
 800719c:	681b      	ldr	r3, [r3, #0]
 800719e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80071a2:	655a      	str	r2, [r3, #84]	; 0x54
 80071a4:	68fb      	ldr	r3, [r7, #12]
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80071aa:	68fb      	ldr	r3, [r7, #12]
 80071ac:	681b      	ldr	r3, [r3, #0]
 80071ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80071b2:	655a      	str	r2, [r3, #84]	; 0x54
 80071b4:	68fb      	ldr	r3, [r7, #12]
 80071b6:	681b      	ldr	r3, [r3, #0]
 80071b8:	6d59      	ldr	r1, [r3, #84]	; 0x54
 80071ba:	68bb      	ldr	r3, [r7, #8]
 80071bc:	691b      	ldr	r3, [r3, #16]
 80071be:	021a      	lsls	r2, r3, #8
 80071c0:	68fb      	ldr	r3, [r7, #12]
 80071c2:	681b      	ldr	r3, [r3, #0]
 80071c4:	430a      	orrs	r2, r1
 80071c6:	655a      	str	r2, [r3, #84]	; 0x54
 80071c8:	e002      	b.n	80071d0 <HAL_TIM_PWM_ConfigChannel+0x214>
 80071ca:	2301      	movs	r3, #1
 80071cc:	75fb      	strb	r3, [r7, #23]
 80071ce:	bf00      	nop
 80071d0:	68fb      	ldr	r3, [r7, #12]
 80071d2:	2200      	movs	r2, #0
 80071d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80071d8:	7dfb      	ldrb	r3, [r7, #23]
 80071da:	4618      	mov	r0, r3
 80071dc:	3718      	adds	r7, #24
 80071de:	46bd      	mov	sp, r7
 80071e0:	bd80      	pop	{r7, pc}
 80071e2:	bf00      	nop

080071e4 <HAL_TIM_ConfigClockSource>:
 80071e4:	b580      	push	{r7, lr}
 80071e6:	b084      	sub	sp, #16
 80071e8:	af00      	add	r7, sp, #0
 80071ea:	6078      	str	r0, [r7, #4]
 80071ec:	6039      	str	r1, [r7, #0]
 80071ee:	2300      	movs	r3, #0
 80071f0:	73fb      	strb	r3, [r7, #15]
 80071f2:	687b      	ldr	r3, [r7, #4]
 80071f4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80071f8:	2b01      	cmp	r3, #1
 80071fa:	d101      	bne.n	8007200 <HAL_TIM_ConfigClockSource+0x1c>
 80071fc:	2302      	movs	r3, #2
 80071fe:	e0b6      	b.n	800736e <HAL_TIM_ConfigClockSource+0x18a>
 8007200:	687b      	ldr	r3, [r7, #4]
 8007202:	2201      	movs	r2, #1
 8007204:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	2202      	movs	r2, #2
 800720c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	681b      	ldr	r3, [r3, #0]
 8007214:	689b      	ldr	r3, [r3, #8]
 8007216:	60bb      	str	r3, [r7, #8]
 8007218:	68bb      	ldr	r3, [r7, #8]
 800721a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800721e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8007222:	60bb      	str	r3, [r7, #8]
 8007224:	68bb      	ldr	r3, [r7, #8]
 8007226:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800722a:	60bb      	str	r3, [r7, #8]
 800722c:	687b      	ldr	r3, [r7, #4]
 800722e:	681b      	ldr	r3, [r3, #0]
 8007230:	68ba      	ldr	r2, [r7, #8]
 8007232:	609a      	str	r2, [r3, #8]
 8007234:	683b      	ldr	r3, [r7, #0]
 8007236:	681b      	ldr	r3, [r3, #0]
 8007238:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800723c:	d03e      	beq.n	80072bc <HAL_TIM_ConfigClockSource+0xd8>
 800723e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007242:	f200 8087 	bhi.w	8007354 <HAL_TIM_ConfigClockSource+0x170>
 8007246:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800724a:	f000 8086 	beq.w	800735a <HAL_TIM_ConfigClockSource+0x176>
 800724e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007252:	d87f      	bhi.n	8007354 <HAL_TIM_ConfigClockSource+0x170>
 8007254:	2b70      	cmp	r3, #112	; 0x70
 8007256:	d01a      	beq.n	800728e <HAL_TIM_ConfigClockSource+0xaa>
 8007258:	2b70      	cmp	r3, #112	; 0x70
 800725a:	d87b      	bhi.n	8007354 <HAL_TIM_ConfigClockSource+0x170>
 800725c:	2b60      	cmp	r3, #96	; 0x60
 800725e:	d050      	beq.n	8007302 <HAL_TIM_ConfigClockSource+0x11e>
 8007260:	2b60      	cmp	r3, #96	; 0x60
 8007262:	d877      	bhi.n	8007354 <HAL_TIM_ConfigClockSource+0x170>
 8007264:	2b50      	cmp	r3, #80	; 0x50
 8007266:	d03c      	beq.n	80072e2 <HAL_TIM_ConfigClockSource+0xfe>
 8007268:	2b50      	cmp	r3, #80	; 0x50
 800726a:	d873      	bhi.n	8007354 <HAL_TIM_ConfigClockSource+0x170>
 800726c:	2b40      	cmp	r3, #64	; 0x40
 800726e:	d058      	beq.n	8007322 <HAL_TIM_ConfigClockSource+0x13e>
 8007270:	2b40      	cmp	r3, #64	; 0x40
 8007272:	d86f      	bhi.n	8007354 <HAL_TIM_ConfigClockSource+0x170>
 8007274:	2b30      	cmp	r3, #48	; 0x30
 8007276:	d064      	beq.n	8007342 <HAL_TIM_ConfigClockSource+0x15e>
 8007278:	2b30      	cmp	r3, #48	; 0x30
 800727a:	d86b      	bhi.n	8007354 <HAL_TIM_ConfigClockSource+0x170>
 800727c:	2b20      	cmp	r3, #32
 800727e:	d060      	beq.n	8007342 <HAL_TIM_ConfigClockSource+0x15e>
 8007280:	2b20      	cmp	r3, #32
 8007282:	d867      	bhi.n	8007354 <HAL_TIM_ConfigClockSource+0x170>
 8007284:	2b00      	cmp	r3, #0
 8007286:	d05c      	beq.n	8007342 <HAL_TIM_ConfigClockSource+0x15e>
 8007288:	2b10      	cmp	r3, #16
 800728a:	d05a      	beq.n	8007342 <HAL_TIM_ConfigClockSource+0x15e>
 800728c:	e062      	b.n	8007354 <HAL_TIM_ConfigClockSource+0x170>
 800728e:	687b      	ldr	r3, [r7, #4]
 8007290:	6818      	ldr	r0, [r3, #0]
 8007292:	683b      	ldr	r3, [r7, #0]
 8007294:	6899      	ldr	r1, [r3, #8]
 8007296:	683b      	ldr	r3, [r7, #0]
 8007298:	685a      	ldr	r2, [r3, #4]
 800729a:	683b      	ldr	r3, [r7, #0]
 800729c:	68db      	ldr	r3, [r3, #12]
 800729e:	f000 fbef 	bl	8007a80 <TIM_ETR_SetConfig>
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	681b      	ldr	r3, [r3, #0]
 80072a6:	689b      	ldr	r3, [r3, #8]
 80072a8:	60bb      	str	r3, [r7, #8]
 80072aa:	68bb      	ldr	r3, [r7, #8]
 80072ac:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80072b0:	60bb      	str	r3, [r7, #8]
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	681b      	ldr	r3, [r3, #0]
 80072b6:	68ba      	ldr	r2, [r7, #8]
 80072b8:	609a      	str	r2, [r3, #8]
 80072ba:	e04f      	b.n	800735c <HAL_TIM_ConfigClockSource+0x178>
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	6818      	ldr	r0, [r3, #0]
 80072c0:	683b      	ldr	r3, [r7, #0]
 80072c2:	6899      	ldr	r1, [r3, #8]
 80072c4:	683b      	ldr	r3, [r7, #0]
 80072c6:	685a      	ldr	r2, [r3, #4]
 80072c8:	683b      	ldr	r3, [r7, #0]
 80072ca:	68db      	ldr	r3, [r3, #12]
 80072cc:	f000 fbd8 	bl	8007a80 <TIM_ETR_SetConfig>
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	681b      	ldr	r3, [r3, #0]
 80072d4:	689a      	ldr	r2, [r3, #8]
 80072d6:	687b      	ldr	r3, [r7, #4]
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80072de:	609a      	str	r2, [r3, #8]
 80072e0:	e03c      	b.n	800735c <HAL_TIM_ConfigClockSource+0x178>
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	6818      	ldr	r0, [r3, #0]
 80072e6:	683b      	ldr	r3, [r7, #0]
 80072e8:	6859      	ldr	r1, [r3, #4]
 80072ea:	683b      	ldr	r3, [r7, #0]
 80072ec:	68db      	ldr	r3, [r3, #12]
 80072ee:	461a      	mov	r2, r3
 80072f0:	f000 fb4c 	bl	800798c <TIM_TI1_ConfigInputStage>
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	681b      	ldr	r3, [r3, #0]
 80072f8:	2150      	movs	r1, #80	; 0x50
 80072fa:	4618      	mov	r0, r3
 80072fc:	f000 fba5 	bl	8007a4a <TIM_ITRx_SetConfig>
 8007300:	e02c      	b.n	800735c <HAL_TIM_ConfigClockSource+0x178>
 8007302:	687b      	ldr	r3, [r7, #4]
 8007304:	6818      	ldr	r0, [r3, #0]
 8007306:	683b      	ldr	r3, [r7, #0]
 8007308:	6859      	ldr	r1, [r3, #4]
 800730a:	683b      	ldr	r3, [r7, #0]
 800730c:	68db      	ldr	r3, [r3, #12]
 800730e:	461a      	mov	r2, r3
 8007310:	f000 fb6b 	bl	80079ea <TIM_TI2_ConfigInputStage>
 8007314:	687b      	ldr	r3, [r7, #4]
 8007316:	681b      	ldr	r3, [r3, #0]
 8007318:	2160      	movs	r1, #96	; 0x60
 800731a:	4618      	mov	r0, r3
 800731c:	f000 fb95 	bl	8007a4a <TIM_ITRx_SetConfig>
 8007320:	e01c      	b.n	800735c <HAL_TIM_ConfigClockSource+0x178>
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	6818      	ldr	r0, [r3, #0]
 8007326:	683b      	ldr	r3, [r7, #0]
 8007328:	6859      	ldr	r1, [r3, #4]
 800732a:	683b      	ldr	r3, [r7, #0]
 800732c:	68db      	ldr	r3, [r3, #12]
 800732e:	461a      	mov	r2, r3
 8007330:	f000 fb2c 	bl	800798c <TIM_TI1_ConfigInputStage>
 8007334:	687b      	ldr	r3, [r7, #4]
 8007336:	681b      	ldr	r3, [r3, #0]
 8007338:	2140      	movs	r1, #64	; 0x40
 800733a:	4618      	mov	r0, r3
 800733c:	f000 fb85 	bl	8007a4a <TIM_ITRx_SetConfig>
 8007340:	e00c      	b.n	800735c <HAL_TIM_ConfigClockSource+0x178>
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	681a      	ldr	r2, [r3, #0]
 8007346:	683b      	ldr	r3, [r7, #0]
 8007348:	681b      	ldr	r3, [r3, #0]
 800734a:	4619      	mov	r1, r3
 800734c:	4610      	mov	r0, r2
 800734e:	f000 fb7c 	bl	8007a4a <TIM_ITRx_SetConfig>
 8007352:	e003      	b.n	800735c <HAL_TIM_ConfigClockSource+0x178>
 8007354:	2301      	movs	r3, #1
 8007356:	73fb      	strb	r3, [r7, #15]
 8007358:	e000      	b.n	800735c <HAL_TIM_ConfigClockSource+0x178>
 800735a:	bf00      	nop
 800735c:	687b      	ldr	r3, [r7, #4]
 800735e:	2201      	movs	r2, #1
 8007360:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	2200      	movs	r2, #0
 8007368:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800736c:	7bfb      	ldrb	r3, [r7, #15]
 800736e:	4618      	mov	r0, r3
 8007370:	3710      	adds	r7, #16
 8007372:	46bd      	mov	sp, r7
 8007374:	bd80      	pop	{r7, pc}

08007376 <HAL_TIM_OC_DelayElapsedCallback>:
 8007376:	b480      	push	{r7}
 8007378:	b083      	sub	sp, #12
 800737a:	af00      	add	r7, sp, #0
 800737c:	6078      	str	r0, [r7, #4]
 800737e:	bf00      	nop
 8007380:	370c      	adds	r7, #12
 8007382:	46bd      	mov	sp, r7
 8007384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007388:	4770      	bx	lr

0800738a <HAL_TIM_IC_CaptureCallback>:
 800738a:	b480      	push	{r7}
 800738c:	b083      	sub	sp, #12
 800738e:	af00      	add	r7, sp, #0
 8007390:	6078      	str	r0, [r7, #4]
 8007392:	bf00      	nop
 8007394:	370c      	adds	r7, #12
 8007396:	46bd      	mov	sp, r7
 8007398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800739c:	4770      	bx	lr

0800739e <HAL_TIM_PWM_PulseFinishedCallback>:
 800739e:	b480      	push	{r7}
 80073a0:	b083      	sub	sp, #12
 80073a2:	af00      	add	r7, sp, #0
 80073a4:	6078      	str	r0, [r7, #4]
 80073a6:	bf00      	nop
 80073a8:	370c      	adds	r7, #12
 80073aa:	46bd      	mov	sp, r7
 80073ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073b0:	4770      	bx	lr

080073b2 <HAL_TIM_TriggerCallback>:
 80073b2:	b480      	push	{r7}
 80073b4:	b083      	sub	sp, #12
 80073b6:	af00      	add	r7, sp, #0
 80073b8:	6078      	str	r0, [r7, #4]
 80073ba:	bf00      	nop
 80073bc:	370c      	adds	r7, #12
 80073be:	46bd      	mov	sp, r7
 80073c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073c4:	4770      	bx	lr
	...

080073c8 <TIM_Base_SetConfig>:
 80073c8:	b480      	push	{r7}
 80073ca:	b085      	sub	sp, #20
 80073cc:	af00      	add	r7, sp, #0
 80073ce:	6078      	str	r0, [r7, #4]
 80073d0:	6039      	str	r1, [r7, #0]
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	681b      	ldr	r3, [r3, #0]
 80073d6:	60fb      	str	r3, [r7, #12]
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	4a2a      	ldr	r2, [pc, #168]	; (8007484 <TIM_Base_SetConfig+0xbc>)
 80073dc:	4293      	cmp	r3, r2
 80073de:	d003      	beq.n	80073e8 <TIM_Base_SetConfig+0x20>
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80073e6:	d108      	bne.n	80073fa <TIM_Base_SetConfig+0x32>
 80073e8:	68fb      	ldr	r3, [r7, #12]
 80073ea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80073ee:	60fb      	str	r3, [r7, #12]
 80073f0:	683b      	ldr	r3, [r7, #0]
 80073f2:	685b      	ldr	r3, [r3, #4]
 80073f4:	68fa      	ldr	r2, [r7, #12]
 80073f6:	4313      	orrs	r3, r2
 80073f8:	60fb      	str	r3, [r7, #12]
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	4a21      	ldr	r2, [pc, #132]	; (8007484 <TIM_Base_SetConfig+0xbc>)
 80073fe:	4293      	cmp	r3, r2
 8007400:	d00b      	beq.n	800741a <TIM_Base_SetConfig+0x52>
 8007402:	687b      	ldr	r3, [r7, #4]
 8007404:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007408:	d007      	beq.n	800741a <TIM_Base_SetConfig+0x52>
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	4a1e      	ldr	r2, [pc, #120]	; (8007488 <TIM_Base_SetConfig+0xc0>)
 800740e:	4293      	cmp	r3, r2
 8007410:	d003      	beq.n	800741a <TIM_Base_SetConfig+0x52>
 8007412:	687b      	ldr	r3, [r7, #4]
 8007414:	4a1d      	ldr	r2, [pc, #116]	; (800748c <TIM_Base_SetConfig+0xc4>)
 8007416:	4293      	cmp	r3, r2
 8007418:	d108      	bne.n	800742c <TIM_Base_SetConfig+0x64>
 800741a:	68fb      	ldr	r3, [r7, #12]
 800741c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007420:	60fb      	str	r3, [r7, #12]
 8007422:	683b      	ldr	r3, [r7, #0]
 8007424:	68db      	ldr	r3, [r3, #12]
 8007426:	68fa      	ldr	r2, [r7, #12]
 8007428:	4313      	orrs	r3, r2
 800742a:	60fb      	str	r3, [r7, #12]
 800742c:	68fb      	ldr	r3, [r7, #12]
 800742e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8007432:	683b      	ldr	r3, [r7, #0]
 8007434:	695b      	ldr	r3, [r3, #20]
 8007436:	4313      	orrs	r3, r2
 8007438:	60fb      	str	r3, [r7, #12]
 800743a:	687b      	ldr	r3, [r7, #4]
 800743c:	68fa      	ldr	r2, [r7, #12]
 800743e:	601a      	str	r2, [r3, #0]
 8007440:	683b      	ldr	r3, [r7, #0]
 8007442:	689a      	ldr	r2, [r3, #8]
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	62da      	str	r2, [r3, #44]	; 0x2c
 8007448:	683b      	ldr	r3, [r7, #0]
 800744a:	681a      	ldr	r2, [r3, #0]
 800744c:	687b      	ldr	r3, [r7, #4]
 800744e:	629a      	str	r2, [r3, #40]	; 0x28
 8007450:	687b      	ldr	r3, [r7, #4]
 8007452:	4a0c      	ldr	r2, [pc, #48]	; (8007484 <TIM_Base_SetConfig+0xbc>)
 8007454:	4293      	cmp	r3, r2
 8007456:	d007      	beq.n	8007468 <TIM_Base_SetConfig+0xa0>
 8007458:	687b      	ldr	r3, [r7, #4]
 800745a:	4a0b      	ldr	r2, [pc, #44]	; (8007488 <TIM_Base_SetConfig+0xc0>)
 800745c:	4293      	cmp	r3, r2
 800745e:	d003      	beq.n	8007468 <TIM_Base_SetConfig+0xa0>
 8007460:	687b      	ldr	r3, [r7, #4]
 8007462:	4a0a      	ldr	r2, [pc, #40]	; (800748c <TIM_Base_SetConfig+0xc4>)
 8007464:	4293      	cmp	r3, r2
 8007466:	d103      	bne.n	8007470 <TIM_Base_SetConfig+0xa8>
 8007468:	683b      	ldr	r3, [r7, #0]
 800746a:	691a      	ldr	r2, [r3, #16]
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	631a      	str	r2, [r3, #48]	; 0x30
 8007470:	687b      	ldr	r3, [r7, #4]
 8007472:	2201      	movs	r2, #1
 8007474:	615a      	str	r2, [r3, #20]
 8007476:	bf00      	nop
 8007478:	3714      	adds	r7, #20
 800747a:	46bd      	mov	sp, r7
 800747c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007480:	4770      	bx	lr
 8007482:	bf00      	nop
 8007484:	40012c00 	.word	0x40012c00
 8007488:	40014000 	.word	0x40014000
 800748c:	40014400 	.word	0x40014400

08007490 <TIM_OC1_SetConfig>:
 8007490:	b480      	push	{r7}
 8007492:	b087      	sub	sp, #28
 8007494:	af00      	add	r7, sp, #0
 8007496:	6078      	str	r0, [r7, #4]
 8007498:	6039      	str	r1, [r7, #0]
 800749a:	687b      	ldr	r3, [r7, #4]
 800749c:	6a1b      	ldr	r3, [r3, #32]
 800749e:	f023 0201 	bic.w	r2, r3, #1
 80074a2:	687b      	ldr	r3, [r7, #4]
 80074a4:	621a      	str	r2, [r3, #32]
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	6a1b      	ldr	r3, [r3, #32]
 80074aa:	617b      	str	r3, [r7, #20]
 80074ac:	687b      	ldr	r3, [r7, #4]
 80074ae:	685b      	ldr	r3, [r3, #4]
 80074b0:	613b      	str	r3, [r7, #16]
 80074b2:	687b      	ldr	r3, [r7, #4]
 80074b4:	699b      	ldr	r3, [r3, #24]
 80074b6:	60fb      	str	r3, [r7, #12]
 80074b8:	68fb      	ldr	r3, [r7, #12]
 80074ba:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80074be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80074c2:	60fb      	str	r3, [r7, #12]
 80074c4:	68fb      	ldr	r3, [r7, #12]
 80074c6:	f023 0303 	bic.w	r3, r3, #3
 80074ca:	60fb      	str	r3, [r7, #12]
 80074cc:	683b      	ldr	r3, [r7, #0]
 80074ce:	681b      	ldr	r3, [r3, #0]
 80074d0:	68fa      	ldr	r2, [r7, #12]
 80074d2:	4313      	orrs	r3, r2
 80074d4:	60fb      	str	r3, [r7, #12]
 80074d6:	697b      	ldr	r3, [r7, #20]
 80074d8:	f023 0302 	bic.w	r3, r3, #2
 80074dc:	617b      	str	r3, [r7, #20]
 80074de:	683b      	ldr	r3, [r7, #0]
 80074e0:	689b      	ldr	r3, [r3, #8]
 80074e2:	697a      	ldr	r2, [r7, #20]
 80074e4:	4313      	orrs	r3, r2
 80074e6:	617b      	str	r3, [r7, #20]
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	4a24      	ldr	r2, [pc, #144]	; (800757c <TIM_OC1_SetConfig+0xec>)
 80074ec:	4293      	cmp	r3, r2
 80074ee:	d007      	beq.n	8007500 <TIM_OC1_SetConfig+0x70>
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	4a23      	ldr	r2, [pc, #140]	; (8007580 <TIM_OC1_SetConfig+0xf0>)
 80074f4:	4293      	cmp	r3, r2
 80074f6:	d003      	beq.n	8007500 <TIM_OC1_SetConfig+0x70>
 80074f8:	687b      	ldr	r3, [r7, #4]
 80074fa:	4a22      	ldr	r2, [pc, #136]	; (8007584 <TIM_OC1_SetConfig+0xf4>)
 80074fc:	4293      	cmp	r3, r2
 80074fe:	d10c      	bne.n	800751a <TIM_OC1_SetConfig+0x8a>
 8007500:	697b      	ldr	r3, [r7, #20]
 8007502:	f023 0308 	bic.w	r3, r3, #8
 8007506:	617b      	str	r3, [r7, #20]
 8007508:	683b      	ldr	r3, [r7, #0]
 800750a:	68db      	ldr	r3, [r3, #12]
 800750c:	697a      	ldr	r2, [r7, #20]
 800750e:	4313      	orrs	r3, r2
 8007510:	617b      	str	r3, [r7, #20]
 8007512:	697b      	ldr	r3, [r7, #20]
 8007514:	f023 0304 	bic.w	r3, r3, #4
 8007518:	617b      	str	r3, [r7, #20]
 800751a:	687b      	ldr	r3, [r7, #4]
 800751c:	4a17      	ldr	r2, [pc, #92]	; (800757c <TIM_OC1_SetConfig+0xec>)
 800751e:	4293      	cmp	r3, r2
 8007520:	d007      	beq.n	8007532 <TIM_OC1_SetConfig+0xa2>
 8007522:	687b      	ldr	r3, [r7, #4]
 8007524:	4a16      	ldr	r2, [pc, #88]	; (8007580 <TIM_OC1_SetConfig+0xf0>)
 8007526:	4293      	cmp	r3, r2
 8007528:	d003      	beq.n	8007532 <TIM_OC1_SetConfig+0xa2>
 800752a:	687b      	ldr	r3, [r7, #4]
 800752c:	4a15      	ldr	r2, [pc, #84]	; (8007584 <TIM_OC1_SetConfig+0xf4>)
 800752e:	4293      	cmp	r3, r2
 8007530:	d111      	bne.n	8007556 <TIM_OC1_SetConfig+0xc6>
 8007532:	693b      	ldr	r3, [r7, #16]
 8007534:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007538:	613b      	str	r3, [r7, #16]
 800753a:	693b      	ldr	r3, [r7, #16]
 800753c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007540:	613b      	str	r3, [r7, #16]
 8007542:	683b      	ldr	r3, [r7, #0]
 8007544:	695b      	ldr	r3, [r3, #20]
 8007546:	693a      	ldr	r2, [r7, #16]
 8007548:	4313      	orrs	r3, r2
 800754a:	613b      	str	r3, [r7, #16]
 800754c:	683b      	ldr	r3, [r7, #0]
 800754e:	699b      	ldr	r3, [r3, #24]
 8007550:	693a      	ldr	r2, [r7, #16]
 8007552:	4313      	orrs	r3, r2
 8007554:	613b      	str	r3, [r7, #16]
 8007556:	687b      	ldr	r3, [r7, #4]
 8007558:	693a      	ldr	r2, [r7, #16]
 800755a:	605a      	str	r2, [r3, #4]
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	68fa      	ldr	r2, [r7, #12]
 8007560:	619a      	str	r2, [r3, #24]
 8007562:	683b      	ldr	r3, [r7, #0]
 8007564:	685a      	ldr	r2, [r3, #4]
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	635a      	str	r2, [r3, #52]	; 0x34
 800756a:	687b      	ldr	r3, [r7, #4]
 800756c:	697a      	ldr	r2, [r7, #20]
 800756e:	621a      	str	r2, [r3, #32]
 8007570:	bf00      	nop
 8007572:	371c      	adds	r7, #28
 8007574:	46bd      	mov	sp, r7
 8007576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800757a:	4770      	bx	lr
 800757c:	40012c00 	.word	0x40012c00
 8007580:	40014000 	.word	0x40014000
 8007584:	40014400 	.word	0x40014400

08007588 <TIM_OC2_SetConfig>:
 8007588:	b480      	push	{r7}
 800758a:	b087      	sub	sp, #28
 800758c:	af00      	add	r7, sp, #0
 800758e:	6078      	str	r0, [r7, #4]
 8007590:	6039      	str	r1, [r7, #0]
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	6a1b      	ldr	r3, [r3, #32]
 8007596:	f023 0210 	bic.w	r2, r3, #16
 800759a:	687b      	ldr	r3, [r7, #4]
 800759c:	621a      	str	r2, [r3, #32]
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	6a1b      	ldr	r3, [r3, #32]
 80075a2:	617b      	str	r3, [r7, #20]
 80075a4:	687b      	ldr	r3, [r7, #4]
 80075a6:	685b      	ldr	r3, [r3, #4]
 80075a8:	613b      	str	r3, [r7, #16]
 80075aa:	687b      	ldr	r3, [r7, #4]
 80075ac:	699b      	ldr	r3, [r3, #24]
 80075ae:	60fb      	str	r3, [r7, #12]
 80075b0:	68fb      	ldr	r3, [r7, #12]
 80075b2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80075b6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80075ba:	60fb      	str	r3, [r7, #12]
 80075bc:	68fb      	ldr	r3, [r7, #12]
 80075be:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80075c2:	60fb      	str	r3, [r7, #12]
 80075c4:	683b      	ldr	r3, [r7, #0]
 80075c6:	681b      	ldr	r3, [r3, #0]
 80075c8:	021b      	lsls	r3, r3, #8
 80075ca:	68fa      	ldr	r2, [r7, #12]
 80075cc:	4313      	orrs	r3, r2
 80075ce:	60fb      	str	r3, [r7, #12]
 80075d0:	697b      	ldr	r3, [r7, #20]
 80075d2:	f023 0320 	bic.w	r3, r3, #32
 80075d6:	617b      	str	r3, [r7, #20]
 80075d8:	683b      	ldr	r3, [r7, #0]
 80075da:	689b      	ldr	r3, [r3, #8]
 80075dc:	011b      	lsls	r3, r3, #4
 80075de:	697a      	ldr	r2, [r7, #20]
 80075e0:	4313      	orrs	r3, r2
 80075e2:	617b      	str	r3, [r7, #20]
 80075e4:	687b      	ldr	r3, [r7, #4]
 80075e6:	4a22      	ldr	r2, [pc, #136]	; (8007670 <TIM_OC2_SetConfig+0xe8>)
 80075e8:	4293      	cmp	r3, r2
 80075ea:	d10d      	bne.n	8007608 <TIM_OC2_SetConfig+0x80>
 80075ec:	697b      	ldr	r3, [r7, #20]
 80075ee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80075f2:	617b      	str	r3, [r7, #20]
 80075f4:	683b      	ldr	r3, [r7, #0]
 80075f6:	68db      	ldr	r3, [r3, #12]
 80075f8:	011b      	lsls	r3, r3, #4
 80075fa:	697a      	ldr	r2, [r7, #20]
 80075fc:	4313      	orrs	r3, r2
 80075fe:	617b      	str	r3, [r7, #20]
 8007600:	697b      	ldr	r3, [r7, #20]
 8007602:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007606:	617b      	str	r3, [r7, #20]
 8007608:	687b      	ldr	r3, [r7, #4]
 800760a:	4a19      	ldr	r2, [pc, #100]	; (8007670 <TIM_OC2_SetConfig+0xe8>)
 800760c:	4293      	cmp	r3, r2
 800760e:	d007      	beq.n	8007620 <TIM_OC2_SetConfig+0x98>
 8007610:	687b      	ldr	r3, [r7, #4]
 8007612:	4a18      	ldr	r2, [pc, #96]	; (8007674 <TIM_OC2_SetConfig+0xec>)
 8007614:	4293      	cmp	r3, r2
 8007616:	d003      	beq.n	8007620 <TIM_OC2_SetConfig+0x98>
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	4a17      	ldr	r2, [pc, #92]	; (8007678 <TIM_OC2_SetConfig+0xf0>)
 800761c:	4293      	cmp	r3, r2
 800761e:	d113      	bne.n	8007648 <TIM_OC2_SetConfig+0xc0>
 8007620:	693b      	ldr	r3, [r7, #16]
 8007622:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007626:	613b      	str	r3, [r7, #16]
 8007628:	693b      	ldr	r3, [r7, #16]
 800762a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800762e:	613b      	str	r3, [r7, #16]
 8007630:	683b      	ldr	r3, [r7, #0]
 8007632:	695b      	ldr	r3, [r3, #20]
 8007634:	009b      	lsls	r3, r3, #2
 8007636:	693a      	ldr	r2, [r7, #16]
 8007638:	4313      	orrs	r3, r2
 800763a:	613b      	str	r3, [r7, #16]
 800763c:	683b      	ldr	r3, [r7, #0]
 800763e:	699b      	ldr	r3, [r3, #24]
 8007640:	009b      	lsls	r3, r3, #2
 8007642:	693a      	ldr	r2, [r7, #16]
 8007644:	4313      	orrs	r3, r2
 8007646:	613b      	str	r3, [r7, #16]
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	693a      	ldr	r2, [r7, #16]
 800764c:	605a      	str	r2, [r3, #4]
 800764e:	687b      	ldr	r3, [r7, #4]
 8007650:	68fa      	ldr	r2, [r7, #12]
 8007652:	619a      	str	r2, [r3, #24]
 8007654:	683b      	ldr	r3, [r7, #0]
 8007656:	685a      	ldr	r2, [r3, #4]
 8007658:	687b      	ldr	r3, [r7, #4]
 800765a:	639a      	str	r2, [r3, #56]	; 0x38
 800765c:	687b      	ldr	r3, [r7, #4]
 800765e:	697a      	ldr	r2, [r7, #20]
 8007660:	621a      	str	r2, [r3, #32]
 8007662:	bf00      	nop
 8007664:	371c      	adds	r7, #28
 8007666:	46bd      	mov	sp, r7
 8007668:	f85d 7b04 	ldr.w	r7, [sp], #4
 800766c:	4770      	bx	lr
 800766e:	bf00      	nop
 8007670:	40012c00 	.word	0x40012c00
 8007674:	40014000 	.word	0x40014000
 8007678:	40014400 	.word	0x40014400

0800767c <TIM_OC3_SetConfig>:
 800767c:	b480      	push	{r7}
 800767e:	b087      	sub	sp, #28
 8007680:	af00      	add	r7, sp, #0
 8007682:	6078      	str	r0, [r7, #4]
 8007684:	6039      	str	r1, [r7, #0]
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	6a1b      	ldr	r3, [r3, #32]
 800768a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800768e:	687b      	ldr	r3, [r7, #4]
 8007690:	621a      	str	r2, [r3, #32]
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	6a1b      	ldr	r3, [r3, #32]
 8007696:	617b      	str	r3, [r7, #20]
 8007698:	687b      	ldr	r3, [r7, #4]
 800769a:	685b      	ldr	r3, [r3, #4]
 800769c:	613b      	str	r3, [r7, #16]
 800769e:	687b      	ldr	r3, [r7, #4]
 80076a0:	69db      	ldr	r3, [r3, #28]
 80076a2:	60fb      	str	r3, [r7, #12]
 80076a4:	68fb      	ldr	r3, [r7, #12]
 80076a6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80076aa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80076ae:	60fb      	str	r3, [r7, #12]
 80076b0:	68fb      	ldr	r3, [r7, #12]
 80076b2:	f023 0303 	bic.w	r3, r3, #3
 80076b6:	60fb      	str	r3, [r7, #12]
 80076b8:	683b      	ldr	r3, [r7, #0]
 80076ba:	681b      	ldr	r3, [r3, #0]
 80076bc:	68fa      	ldr	r2, [r7, #12]
 80076be:	4313      	orrs	r3, r2
 80076c0:	60fb      	str	r3, [r7, #12]
 80076c2:	697b      	ldr	r3, [r7, #20]
 80076c4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80076c8:	617b      	str	r3, [r7, #20]
 80076ca:	683b      	ldr	r3, [r7, #0]
 80076cc:	689b      	ldr	r3, [r3, #8]
 80076ce:	021b      	lsls	r3, r3, #8
 80076d0:	697a      	ldr	r2, [r7, #20]
 80076d2:	4313      	orrs	r3, r2
 80076d4:	617b      	str	r3, [r7, #20]
 80076d6:	687b      	ldr	r3, [r7, #4]
 80076d8:	4a21      	ldr	r2, [pc, #132]	; (8007760 <TIM_OC3_SetConfig+0xe4>)
 80076da:	4293      	cmp	r3, r2
 80076dc:	d10d      	bne.n	80076fa <TIM_OC3_SetConfig+0x7e>
 80076de:	697b      	ldr	r3, [r7, #20]
 80076e0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80076e4:	617b      	str	r3, [r7, #20]
 80076e6:	683b      	ldr	r3, [r7, #0]
 80076e8:	68db      	ldr	r3, [r3, #12]
 80076ea:	021b      	lsls	r3, r3, #8
 80076ec:	697a      	ldr	r2, [r7, #20]
 80076ee:	4313      	orrs	r3, r2
 80076f0:	617b      	str	r3, [r7, #20]
 80076f2:	697b      	ldr	r3, [r7, #20]
 80076f4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80076f8:	617b      	str	r3, [r7, #20]
 80076fa:	687b      	ldr	r3, [r7, #4]
 80076fc:	4a18      	ldr	r2, [pc, #96]	; (8007760 <TIM_OC3_SetConfig+0xe4>)
 80076fe:	4293      	cmp	r3, r2
 8007700:	d007      	beq.n	8007712 <TIM_OC3_SetConfig+0x96>
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	4a17      	ldr	r2, [pc, #92]	; (8007764 <TIM_OC3_SetConfig+0xe8>)
 8007706:	4293      	cmp	r3, r2
 8007708:	d003      	beq.n	8007712 <TIM_OC3_SetConfig+0x96>
 800770a:	687b      	ldr	r3, [r7, #4]
 800770c:	4a16      	ldr	r2, [pc, #88]	; (8007768 <TIM_OC3_SetConfig+0xec>)
 800770e:	4293      	cmp	r3, r2
 8007710:	d113      	bne.n	800773a <TIM_OC3_SetConfig+0xbe>
 8007712:	693b      	ldr	r3, [r7, #16]
 8007714:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007718:	613b      	str	r3, [r7, #16]
 800771a:	693b      	ldr	r3, [r7, #16]
 800771c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8007720:	613b      	str	r3, [r7, #16]
 8007722:	683b      	ldr	r3, [r7, #0]
 8007724:	695b      	ldr	r3, [r3, #20]
 8007726:	011b      	lsls	r3, r3, #4
 8007728:	693a      	ldr	r2, [r7, #16]
 800772a:	4313      	orrs	r3, r2
 800772c:	613b      	str	r3, [r7, #16]
 800772e:	683b      	ldr	r3, [r7, #0]
 8007730:	699b      	ldr	r3, [r3, #24]
 8007732:	011b      	lsls	r3, r3, #4
 8007734:	693a      	ldr	r2, [r7, #16]
 8007736:	4313      	orrs	r3, r2
 8007738:	613b      	str	r3, [r7, #16]
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	693a      	ldr	r2, [r7, #16]
 800773e:	605a      	str	r2, [r3, #4]
 8007740:	687b      	ldr	r3, [r7, #4]
 8007742:	68fa      	ldr	r2, [r7, #12]
 8007744:	61da      	str	r2, [r3, #28]
 8007746:	683b      	ldr	r3, [r7, #0]
 8007748:	685a      	ldr	r2, [r3, #4]
 800774a:	687b      	ldr	r3, [r7, #4]
 800774c:	63da      	str	r2, [r3, #60]	; 0x3c
 800774e:	687b      	ldr	r3, [r7, #4]
 8007750:	697a      	ldr	r2, [r7, #20]
 8007752:	621a      	str	r2, [r3, #32]
 8007754:	bf00      	nop
 8007756:	371c      	adds	r7, #28
 8007758:	46bd      	mov	sp, r7
 800775a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800775e:	4770      	bx	lr
 8007760:	40012c00 	.word	0x40012c00
 8007764:	40014000 	.word	0x40014000
 8007768:	40014400 	.word	0x40014400

0800776c <TIM_OC4_SetConfig>:
 800776c:	b480      	push	{r7}
 800776e:	b087      	sub	sp, #28
 8007770:	af00      	add	r7, sp, #0
 8007772:	6078      	str	r0, [r7, #4]
 8007774:	6039      	str	r1, [r7, #0]
 8007776:	687b      	ldr	r3, [r7, #4]
 8007778:	6a1b      	ldr	r3, [r3, #32]
 800777a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800777e:	687b      	ldr	r3, [r7, #4]
 8007780:	621a      	str	r2, [r3, #32]
 8007782:	687b      	ldr	r3, [r7, #4]
 8007784:	6a1b      	ldr	r3, [r3, #32]
 8007786:	613b      	str	r3, [r7, #16]
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	685b      	ldr	r3, [r3, #4]
 800778c:	617b      	str	r3, [r7, #20]
 800778e:	687b      	ldr	r3, [r7, #4]
 8007790:	69db      	ldr	r3, [r3, #28]
 8007792:	60fb      	str	r3, [r7, #12]
 8007794:	68fb      	ldr	r3, [r7, #12]
 8007796:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800779a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800779e:	60fb      	str	r3, [r7, #12]
 80077a0:	68fb      	ldr	r3, [r7, #12]
 80077a2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80077a6:	60fb      	str	r3, [r7, #12]
 80077a8:	683b      	ldr	r3, [r7, #0]
 80077aa:	681b      	ldr	r3, [r3, #0]
 80077ac:	021b      	lsls	r3, r3, #8
 80077ae:	68fa      	ldr	r2, [r7, #12]
 80077b0:	4313      	orrs	r3, r2
 80077b2:	60fb      	str	r3, [r7, #12]
 80077b4:	693b      	ldr	r3, [r7, #16]
 80077b6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80077ba:	613b      	str	r3, [r7, #16]
 80077bc:	683b      	ldr	r3, [r7, #0]
 80077be:	689b      	ldr	r3, [r3, #8]
 80077c0:	031b      	lsls	r3, r3, #12
 80077c2:	693a      	ldr	r2, [r7, #16]
 80077c4:	4313      	orrs	r3, r2
 80077c6:	613b      	str	r3, [r7, #16]
 80077c8:	687b      	ldr	r3, [r7, #4]
 80077ca:	4a14      	ldr	r2, [pc, #80]	; (800781c <TIM_OC4_SetConfig+0xb0>)
 80077cc:	4293      	cmp	r3, r2
 80077ce:	d007      	beq.n	80077e0 <TIM_OC4_SetConfig+0x74>
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	4a13      	ldr	r2, [pc, #76]	; (8007820 <TIM_OC4_SetConfig+0xb4>)
 80077d4:	4293      	cmp	r3, r2
 80077d6:	d003      	beq.n	80077e0 <TIM_OC4_SetConfig+0x74>
 80077d8:	687b      	ldr	r3, [r7, #4]
 80077da:	4a12      	ldr	r2, [pc, #72]	; (8007824 <TIM_OC4_SetConfig+0xb8>)
 80077dc:	4293      	cmp	r3, r2
 80077de:	d109      	bne.n	80077f4 <TIM_OC4_SetConfig+0x88>
 80077e0:	697b      	ldr	r3, [r7, #20]
 80077e2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80077e6:	617b      	str	r3, [r7, #20]
 80077e8:	683b      	ldr	r3, [r7, #0]
 80077ea:	695b      	ldr	r3, [r3, #20]
 80077ec:	019b      	lsls	r3, r3, #6
 80077ee:	697a      	ldr	r2, [r7, #20]
 80077f0:	4313      	orrs	r3, r2
 80077f2:	617b      	str	r3, [r7, #20]
 80077f4:	687b      	ldr	r3, [r7, #4]
 80077f6:	697a      	ldr	r2, [r7, #20]
 80077f8:	605a      	str	r2, [r3, #4]
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	68fa      	ldr	r2, [r7, #12]
 80077fe:	61da      	str	r2, [r3, #28]
 8007800:	683b      	ldr	r3, [r7, #0]
 8007802:	685a      	ldr	r2, [r3, #4]
 8007804:	687b      	ldr	r3, [r7, #4]
 8007806:	641a      	str	r2, [r3, #64]	; 0x40
 8007808:	687b      	ldr	r3, [r7, #4]
 800780a:	693a      	ldr	r2, [r7, #16]
 800780c:	621a      	str	r2, [r3, #32]
 800780e:	bf00      	nop
 8007810:	371c      	adds	r7, #28
 8007812:	46bd      	mov	sp, r7
 8007814:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007818:	4770      	bx	lr
 800781a:	bf00      	nop
 800781c:	40012c00 	.word	0x40012c00
 8007820:	40014000 	.word	0x40014000
 8007824:	40014400 	.word	0x40014400

08007828 <TIM_OC5_SetConfig>:
 8007828:	b480      	push	{r7}
 800782a:	b087      	sub	sp, #28
 800782c:	af00      	add	r7, sp, #0
 800782e:	6078      	str	r0, [r7, #4]
 8007830:	6039      	str	r1, [r7, #0]
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	6a1b      	ldr	r3, [r3, #32]
 8007836:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	621a      	str	r2, [r3, #32]
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	6a1b      	ldr	r3, [r3, #32]
 8007842:	613b      	str	r3, [r7, #16]
 8007844:	687b      	ldr	r3, [r7, #4]
 8007846:	685b      	ldr	r3, [r3, #4]
 8007848:	617b      	str	r3, [r7, #20]
 800784a:	687b      	ldr	r3, [r7, #4]
 800784c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800784e:	60fb      	str	r3, [r7, #12]
 8007850:	68fb      	ldr	r3, [r7, #12]
 8007852:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007856:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800785a:	60fb      	str	r3, [r7, #12]
 800785c:	683b      	ldr	r3, [r7, #0]
 800785e:	681b      	ldr	r3, [r3, #0]
 8007860:	68fa      	ldr	r2, [r7, #12]
 8007862:	4313      	orrs	r3, r2
 8007864:	60fb      	str	r3, [r7, #12]
 8007866:	693b      	ldr	r3, [r7, #16]
 8007868:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800786c:	613b      	str	r3, [r7, #16]
 800786e:	683b      	ldr	r3, [r7, #0]
 8007870:	689b      	ldr	r3, [r3, #8]
 8007872:	041b      	lsls	r3, r3, #16
 8007874:	693a      	ldr	r2, [r7, #16]
 8007876:	4313      	orrs	r3, r2
 8007878:	613b      	str	r3, [r7, #16]
 800787a:	687b      	ldr	r3, [r7, #4]
 800787c:	4a13      	ldr	r2, [pc, #76]	; (80078cc <TIM_OC5_SetConfig+0xa4>)
 800787e:	4293      	cmp	r3, r2
 8007880:	d007      	beq.n	8007892 <TIM_OC5_SetConfig+0x6a>
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	4a12      	ldr	r2, [pc, #72]	; (80078d0 <TIM_OC5_SetConfig+0xa8>)
 8007886:	4293      	cmp	r3, r2
 8007888:	d003      	beq.n	8007892 <TIM_OC5_SetConfig+0x6a>
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	4a11      	ldr	r2, [pc, #68]	; (80078d4 <TIM_OC5_SetConfig+0xac>)
 800788e:	4293      	cmp	r3, r2
 8007890:	d109      	bne.n	80078a6 <TIM_OC5_SetConfig+0x7e>
 8007892:	697b      	ldr	r3, [r7, #20]
 8007894:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007898:	617b      	str	r3, [r7, #20]
 800789a:	683b      	ldr	r3, [r7, #0]
 800789c:	695b      	ldr	r3, [r3, #20]
 800789e:	021b      	lsls	r3, r3, #8
 80078a0:	697a      	ldr	r2, [r7, #20]
 80078a2:	4313      	orrs	r3, r2
 80078a4:	617b      	str	r3, [r7, #20]
 80078a6:	687b      	ldr	r3, [r7, #4]
 80078a8:	697a      	ldr	r2, [r7, #20]
 80078aa:	605a      	str	r2, [r3, #4]
 80078ac:	687b      	ldr	r3, [r7, #4]
 80078ae:	68fa      	ldr	r2, [r7, #12]
 80078b0:	655a      	str	r2, [r3, #84]	; 0x54
 80078b2:	683b      	ldr	r3, [r7, #0]
 80078b4:	685a      	ldr	r2, [r3, #4]
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	659a      	str	r2, [r3, #88]	; 0x58
 80078ba:	687b      	ldr	r3, [r7, #4]
 80078bc:	693a      	ldr	r2, [r7, #16]
 80078be:	621a      	str	r2, [r3, #32]
 80078c0:	bf00      	nop
 80078c2:	371c      	adds	r7, #28
 80078c4:	46bd      	mov	sp, r7
 80078c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078ca:	4770      	bx	lr
 80078cc:	40012c00 	.word	0x40012c00
 80078d0:	40014000 	.word	0x40014000
 80078d4:	40014400 	.word	0x40014400

080078d8 <TIM_OC6_SetConfig>:
 80078d8:	b480      	push	{r7}
 80078da:	b087      	sub	sp, #28
 80078dc:	af00      	add	r7, sp, #0
 80078de:	6078      	str	r0, [r7, #4]
 80078e0:	6039      	str	r1, [r7, #0]
 80078e2:	687b      	ldr	r3, [r7, #4]
 80078e4:	6a1b      	ldr	r3, [r3, #32]
 80078e6:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 80078ea:	687b      	ldr	r3, [r7, #4]
 80078ec:	621a      	str	r2, [r3, #32]
 80078ee:	687b      	ldr	r3, [r7, #4]
 80078f0:	6a1b      	ldr	r3, [r3, #32]
 80078f2:	613b      	str	r3, [r7, #16]
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	685b      	ldr	r3, [r3, #4]
 80078f8:	617b      	str	r3, [r7, #20]
 80078fa:	687b      	ldr	r3, [r7, #4]
 80078fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80078fe:	60fb      	str	r3, [r7, #12]
 8007900:	68fb      	ldr	r3, [r7, #12]
 8007902:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8007906:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800790a:	60fb      	str	r3, [r7, #12]
 800790c:	683b      	ldr	r3, [r7, #0]
 800790e:	681b      	ldr	r3, [r3, #0]
 8007910:	021b      	lsls	r3, r3, #8
 8007912:	68fa      	ldr	r2, [r7, #12]
 8007914:	4313      	orrs	r3, r2
 8007916:	60fb      	str	r3, [r7, #12]
 8007918:	693b      	ldr	r3, [r7, #16]
 800791a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800791e:	613b      	str	r3, [r7, #16]
 8007920:	683b      	ldr	r3, [r7, #0]
 8007922:	689b      	ldr	r3, [r3, #8]
 8007924:	051b      	lsls	r3, r3, #20
 8007926:	693a      	ldr	r2, [r7, #16]
 8007928:	4313      	orrs	r3, r2
 800792a:	613b      	str	r3, [r7, #16]
 800792c:	687b      	ldr	r3, [r7, #4]
 800792e:	4a14      	ldr	r2, [pc, #80]	; (8007980 <TIM_OC6_SetConfig+0xa8>)
 8007930:	4293      	cmp	r3, r2
 8007932:	d007      	beq.n	8007944 <TIM_OC6_SetConfig+0x6c>
 8007934:	687b      	ldr	r3, [r7, #4]
 8007936:	4a13      	ldr	r2, [pc, #76]	; (8007984 <TIM_OC6_SetConfig+0xac>)
 8007938:	4293      	cmp	r3, r2
 800793a:	d003      	beq.n	8007944 <TIM_OC6_SetConfig+0x6c>
 800793c:	687b      	ldr	r3, [r7, #4]
 800793e:	4a12      	ldr	r2, [pc, #72]	; (8007988 <TIM_OC6_SetConfig+0xb0>)
 8007940:	4293      	cmp	r3, r2
 8007942:	d109      	bne.n	8007958 <TIM_OC6_SetConfig+0x80>
 8007944:	697b      	ldr	r3, [r7, #20]
 8007946:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800794a:	617b      	str	r3, [r7, #20]
 800794c:	683b      	ldr	r3, [r7, #0]
 800794e:	695b      	ldr	r3, [r3, #20]
 8007950:	029b      	lsls	r3, r3, #10
 8007952:	697a      	ldr	r2, [r7, #20]
 8007954:	4313      	orrs	r3, r2
 8007956:	617b      	str	r3, [r7, #20]
 8007958:	687b      	ldr	r3, [r7, #4]
 800795a:	697a      	ldr	r2, [r7, #20]
 800795c:	605a      	str	r2, [r3, #4]
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	68fa      	ldr	r2, [r7, #12]
 8007962:	655a      	str	r2, [r3, #84]	; 0x54
 8007964:	683b      	ldr	r3, [r7, #0]
 8007966:	685a      	ldr	r2, [r3, #4]
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	65da      	str	r2, [r3, #92]	; 0x5c
 800796c:	687b      	ldr	r3, [r7, #4]
 800796e:	693a      	ldr	r2, [r7, #16]
 8007970:	621a      	str	r2, [r3, #32]
 8007972:	bf00      	nop
 8007974:	371c      	adds	r7, #28
 8007976:	46bd      	mov	sp, r7
 8007978:	f85d 7b04 	ldr.w	r7, [sp], #4
 800797c:	4770      	bx	lr
 800797e:	bf00      	nop
 8007980:	40012c00 	.word	0x40012c00
 8007984:	40014000 	.word	0x40014000
 8007988:	40014400 	.word	0x40014400

0800798c <TIM_TI1_ConfigInputStage>:
 800798c:	b480      	push	{r7}
 800798e:	b087      	sub	sp, #28
 8007990:	af00      	add	r7, sp, #0
 8007992:	60f8      	str	r0, [r7, #12]
 8007994:	60b9      	str	r1, [r7, #8]
 8007996:	607a      	str	r2, [r7, #4]
 8007998:	68fb      	ldr	r3, [r7, #12]
 800799a:	6a1b      	ldr	r3, [r3, #32]
 800799c:	617b      	str	r3, [r7, #20]
 800799e:	68fb      	ldr	r3, [r7, #12]
 80079a0:	6a1b      	ldr	r3, [r3, #32]
 80079a2:	f023 0201 	bic.w	r2, r3, #1
 80079a6:	68fb      	ldr	r3, [r7, #12]
 80079a8:	621a      	str	r2, [r3, #32]
 80079aa:	68fb      	ldr	r3, [r7, #12]
 80079ac:	699b      	ldr	r3, [r3, #24]
 80079ae:	613b      	str	r3, [r7, #16]
 80079b0:	693b      	ldr	r3, [r7, #16]
 80079b2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80079b6:	613b      	str	r3, [r7, #16]
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	011b      	lsls	r3, r3, #4
 80079bc:	693a      	ldr	r2, [r7, #16]
 80079be:	4313      	orrs	r3, r2
 80079c0:	613b      	str	r3, [r7, #16]
 80079c2:	697b      	ldr	r3, [r7, #20]
 80079c4:	f023 030a 	bic.w	r3, r3, #10
 80079c8:	617b      	str	r3, [r7, #20]
 80079ca:	697a      	ldr	r2, [r7, #20]
 80079cc:	68bb      	ldr	r3, [r7, #8]
 80079ce:	4313      	orrs	r3, r2
 80079d0:	617b      	str	r3, [r7, #20]
 80079d2:	68fb      	ldr	r3, [r7, #12]
 80079d4:	693a      	ldr	r2, [r7, #16]
 80079d6:	619a      	str	r2, [r3, #24]
 80079d8:	68fb      	ldr	r3, [r7, #12]
 80079da:	697a      	ldr	r2, [r7, #20]
 80079dc:	621a      	str	r2, [r3, #32]
 80079de:	bf00      	nop
 80079e0:	371c      	adds	r7, #28
 80079e2:	46bd      	mov	sp, r7
 80079e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079e8:	4770      	bx	lr

080079ea <TIM_TI2_ConfigInputStage>:
 80079ea:	b480      	push	{r7}
 80079ec:	b087      	sub	sp, #28
 80079ee:	af00      	add	r7, sp, #0
 80079f0:	60f8      	str	r0, [r7, #12]
 80079f2:	60b9      	str	r1, [r7, #8]
 80079f4:	607a      	str	r2, [r7, #4]
 80079f6:	68fb      	ldr	r3, [r7, #12]
 80079f8:	6a1b      	ldr	r3, [r3, #32]
 80079fa:	f023 0210 	bic.w	r2, r3, #16
 80079fe:	68fb      	ldr	r3, [r7, #12]
 8007a00:	621a      	str	r2, [r3, #32]
 8007a02:	68fb      	ldr	r3, [r7, #12]
 8007a04:	699b      	ldr	r3, [r3, #24]
 8007a06:	617b      	str	r3, [r7, #20]
 8007a08:	68fb      	ldr	r3, [r7, #12]
 8007a0a:	6a1b      	ldr	r3, [r3, #32]
 8007a0c:	613b      	str	r3, [r7, #16]
 8007a0e:	697b      	ldr	r3, [r7, #20]
 8007a10:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8007a14:	617b      	str	r3, [r7, #20]
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	031b      	lsls	r3, r3, #12
 8007a1a:	697a      	ldr	r2, [r7, #20]
 8007a1c:	4313      	orrs	r3, r2
 8007a1e:	617b      	str	r3, [r7, #20]
 8007a20:	693b      	ldr	r3, [r7, #16]
 8007a22:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8007a26:	613b      	str	r3, [r7, #16]
 8007a28:	68bb      	ldr	r3, [r7, #8]
 8007a2a:	011b      	lsls	r3, r3, #4
 8007a2c:	693a      	ldr	r2, [r7, #16]
 8007a2e:	4313      	orrs	r3, r2
 8007a30:	613b      	str	r3, [r7, #16]
 8007a32:	68fb      	ldr	r3, [r7, #12]
 8007a34:	697a      	ldr	r2, [r7, #20]
 8007a36:	619a      	str	r2, [r3, #24]
 8007a38:	68fb      	ldr	r3, [r7, #12]
 8007a3a:	693a      	ldr	r2, [r7, #16]
 8007a3c:	621a      	str	r2, [r3, #32]
 8007a3e:	bf00      	nop
 8007a40:	371c      	adds	r7, #28
 8007a42:	46bd      	mov	sp, r7
 8007a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a48:	4770      	bx	lr

08007a4a <TIM_ITRx_SetConfig>:
 8007a4a:	b480      	push	{r7}
 8007a4c:	b085      	sub	sp, #20
 8007a4e:	af00      	add	r7, sp, #0
 8007a50:	6078      	str	r0, [r7, #4]
 8007a52:	6039      	str	r1, [r7, #0]
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	689b      	ldr	r3, [r3, #8]
 8007a58:	60fb      	str	r3, [r7, #12]
 8007a5a:	68fb      	ldr	r3, [r7, #12]
 8007a5c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007a60:	60fb      	str	r3, [r7, #12]
 8007a62:	683a      	ldr	r2, [r7, #0]
 8007a64:	68fb      	ldr	r3, [r7, #12]
 8007a66:	4313      	orrs	r3, r2
 8007a68:	f043 0307 	orr.w	r3, r3, #7
 8007a6c:	60fb      	str	r3, [r7, #12]
 8007a6e:	687b      	ldr	r3, [r7, #4]
 8007a70:	68fa      	ldr	r2, [r7, #12]
 8007a72:	609a      	str	r2, [r3, #8]
 8007a74:	bf00      	nop
 8007a76:	3714      	adds	r7, #20
 8007a78:	46bd      	mov	sp, r7
 8007a7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a7e:	4770      	bx	lr

08007a80 <TIM_ETR_SetConfig>:
 8007a80:	b480      	push	{r7}
 8007a82:	b087      	sub	sp, #28
 8007a84:	af00      	add	r7, sp, #0
 8007a86:	60f8      	str	r0, [r7, #12]
 8007a88:	60b9      	str	r1, [r7, #8]
 8007a8a:	607a      	str	r2, [r7, #4]
 8007a8c:	603b      	str	r3, [r7, #0]
 8007a8e:	68fb      	ldr	r3, [r7, #12]
 8007a90:	689b      	ldr	r3, [r3, #8]
 8007a92:	617b      	str	r3, [r7, #20]
 8007a94:	697b      	ldr	r3, [r7, #20]
 8007a96:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007a9a:	617b      	str	r3, [r7, #20]
 8007a9c:	683b      	ldr	r3, [r7, #0]
 8007a9e:	021a      	lsls	r2, r3, #8
 8007aa0:	687b      	ldr	r3, [r7, #4]
 8007aa2:	431a      	orrs	r2, r3
 8007aa4:	68bb      	ldr	r3, [r7, #8]
 8007aa6:	4313      	orrs	r3, r2
 8007aa8:	697a      	ldr	r2, [r7, #20]
 8007aaa:	4313      	orrs	r3, r2
 8007aac:	617b      	str	r3, [r7, #20]
 8007aae:	68fb      	ldr	r3, [r7, #12]
 8007ab0:	697a      	ldr	r2, [r7, #20]
 8007ab2:	609a      	str	r2, [r3, #8]
 8007ab4:	bf00      	nop
 8007ab6:	371c      	adds	r7, #28
 8007ab8:	46bd      	mov	sp, r7
 8007aba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007abe:	4770      	bx	lr

08007ac0 <TIM_CCxChannelCmd>:
 8007ac0:	b480      	push	{r7}
 8007ac2:	b087      	sub	sp, #28
 8007ac4:	af00      	add	r7, sp, #0
 8007ac6:	60f8      	str	r0, [r7, #12]
 8007ac8:	60b9      	str	r1, [r7, #8]
 8007aca:	607a      	str	r2, [r7, #4]
 8007acc:	68bb      	ldr	r3, [r7, #8]
 8007ace:	f003 031f 	and.w	r3, r3, #31
 8007ad2:	2201      	movs	r2, #1
 8007ad4:	fa02 f303 	lsl.w	r3, r2, r3
 8007ad8:	617b      	str	r3, [r7, #20]
 8007ada:	68fb      	ldr	r3, [r7, #12]
 8007adc:	6a1a      	ldr	r2, [r3, #32]
 8007ade:	697b      	ldr	r3, [r7, #20]
 8007ae0:	43db      	mvns	r3, r3
 8007ae2:	401a      	ands	r2, r3
 8007ae4:	68fb      	ldr	r3, [r7, #12]
 8007ae6:	621a      	str	r2, [r3, #32]
 8007ae8:	68fb      	ldr	r3, [r7, #12]
 8007aea:	6a1a      	ldr	r2, [r3, #32]
 8007aec:	68bb      	ldr	r3, [r7, #8]
 8007aee:	f003 031f 	and.w	r3, r3, #31
 8007af2:	6879      	ldr	r1, [r7, #4]
 8007af4:	fa01 f303 	lsl.w	r3, r1, r3
 8007af8:	431a      	orrs	r2, r3
 8007afa:	68fb      	ldr	r3, [r7, #12]
 8007afc:	621a      	str	r2, [r3, #32]
 8007afe:	bf00      	nop
 8007b00:	371c      	adds	r7, #28
 8007b02:	46bd      	mov	sp, r7
 8007b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b08:	4770      	bx	lr
	...

08007b0c <HAL_TIMEx_MasterConfigSynchronization>:
 8007b0c:	b480      	push	{r7}
 8007b0e:	b085      	sub	sp, #20
 8007b10:	af00      	add	r7, sp, #0
 8007b12:	6078      	str	r0, [r7, #4]
 8007b14:	6039      	str	r1, [r7, #0]
 8007b16:	687b      	ldr	r3, [r7, #4]
 8007b18:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007b1c:	2b01      	cmp	r3, #1
 8007b1e:	d101      	bne.n	8007b24 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007b20:	2302      	movs	r3, #2
 8007b22:	e04f      	b.n	8007bc4 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	2201      	movs	r2, #1
 8007b28:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007b2c:	687b      	ldr	r3, [r7, #4]
 8007b2e:	2202      	movs	r2, #2
 8007b30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007b34:	687b      	ldr	r3, [r7, #4]
 8007b36:	681b      	ldr	r3, [r3, #0]
 8007b38:	685b      	ldr	r3, [r3, #4]
 8007b3a:	60fb      	str	r3, [r7, #12]
 8007b3c:	687b      	ldr	r3, [r7, #4]
 8007b3e:	681b      	ldr	r3, [r3, #0]
 8007b40:	689b      	ldr	r3, [r3, #8]
 8007b42:	60bb      	str	r3, [r7, #8]
 8007b44:	687b      	ldr	r3, [r7, #4]
 8007b46:	681b      	ldr	r3, [r3, #0]
 8007b48:	4a21      	ldr	r2, [pc, #132]	; (8007bd0 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 8007b4a:	4293      	cmp	r3, r2
 8007b4c:	d108      	bne.n	8007b60 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 8007b4e:	68fb      	ldr	r3, [r7, #12]
 8007b50:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8007b54:	60fb      	str	r3, [r7, #12]
 8007b56:	683b      	ldr	r3, [r7, #0]
 8007b58:	685b      	ldr	r3, [r3, #4]
 8007b5a:	68fa      	ldr	r2, [r7, #12]
 8007b5c:	4313      	orrs	r3, r2
 8007b5e:	60fb      	str	r3, [r7, #12]
 8007b60:	68fb      	ldr	r3, [r7, #12]
 8007b62:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007b66:	60fb      	str	r3, [r7, #12]
 8007b68:	683b      	ldr	r3, [r7, #0]
 8007b6a:	681b      	ldr	r3, [r3, #0]
 8007b6c:	68fa      	ldr	r2, [r7, #12]
 8007b6e:	4313      	orrs	r3, r2
 8007b70:	60fb      	str	r3, [r7, #12]
 8007b72:	687b      	ldr	r3, [r7, #4]
 8007b74:	681b      	ldr	r3, [r3, #0]
 8007b76:	68fa      	ldr	r2, [r7, #12]
 8007b78:	605a      	str	r2, [r3, #4]
 8007b7a:	687b      	ldr	r3, [r7, #4]
 8007b7c:	681b      	ldr	r3, [r3, #0]
 8007b7e:	4a14      	ldr	r2, [pc, #80]	; (8007bd0 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 8007b80:	4293      	cmp	r3, r2
 8007b82:	d009      	beq.n	8007b98 <HAL_TIMEx_MasterConfigSynchronization+0x8c>
 8007b84:	687b      	ldr	r3, [r7, #4]
 8007b86:	681b      	ldr	r3, [r3, #0]
 8007b88:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007b8c:	d004      	beq.n	8007b98 <HAL_TIMEx_MasterConfigSynchronization+0x8c>
 8007b8e:	687b      	ldr	r3, [r7, #4]
 8007b90:	681b      	ldr	r3, [r3, #0]
 8007b92:	4a10      	ldr	r2, [pc, #64]	; (8007bd4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8007b94:	4293      	cmp	r3, r2
 8007b96:	d10c      	bne.n	8007bb2 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8007b98:	68bb      	ldr	r3, [r7, #8]
 8007b9a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007b9e:	60bb      	str	r3, [r7, #8]
 8007ba0:	683b      	ldr	r3, [r7, #0]
 8007ba2:	689b      	ldr	r3, [r3, #8]
 8007ba4:	68ba      	ldr	r2, [r7, #8]
 8007ba6:	4313      	orrs	r3, r2
 8007ba8:	60bb      	str	r3, [r7, #8]
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	681b      	ldr	r3, [r3, #0]
 8007bae:	68ba      	ldr	r2, [r7, #8]
 8007bb0:	609a      	str	r2, [r3, #8]
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	2201      	movs	r2, #1
 8007bb6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007bba:	687b      	ldr	r3, [r7, #4]
 8007bbc:	2200      	movs	r2, #0
 8007bbe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007bc2:	2300      	movs	r3, #0
 8007bc4:	4618      	mov	r0, r3
 8007bc6:	3714      	adds	r7, #20
 8007bc8:	46bd      	mov	sp, r7
 8007bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bce:	4770      	bx	lr
 8007bd0:	40012c00 	.word	0x40012c00
 8007bd4:	40014000 	.word	0x40014000

08007bd8 <HAL_TIMEx_ConfigBreakDeadTime>:
 8007bd8:	b480      	push	{r7}
 8007bda:	b085      	sub	sp, #20
 8007bdc:	af00      	add	r7, sp, #0
 8007bde:	6078      	str	r0, [r7, #4]
 8007be0:	6039      	str	r1, [r7, #0]
 8007be2:	2300      	movs	r3, #0
 8007be4:	60fb      	str	r3, [r7, #12]
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007bec:	2b01      	cmp	r3, #1
 8007bee:	d101      	bne.n	8007bf4 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8007bf0:	2302      	movs	r3, #2
 8007bf2:	e060      	b.n	8007cb6 <HAL_TIMEx_ConfigBreakDeadTime+0xde>
 8007bf4:	687b      	ldr	r3, [r7, #4]
 8007bf6:	2201      	movs	r2, #1
 8007bf8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007bfc:	68fb      	ldr	r3, [r7, #12]
 8007bfe:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8007c02:	683b      	ldr	r3, [r7, #0]
 8007c04:	68db      	ldr	r3, [r3, #12]
 8007c06:	4313      	orrs	r3, r2
 8007c08:	60fb      	str	r3, [r7, #12]
 8007c0a:	68fb      	ldr	r3, [r7, #12]
 8007c0c:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8007c10:	683b      	ldr	r3, [r7, #0]
 8007c12:	689b      	ldr	r3, [r3, #8]
 8007c14:	4313      	orrs	r3, r2
 8007c16:	60fb      	str	r3, [r7, #12]
 8007c18:	68fb      	ldr	r3, [r7, #12]
 8007c1a:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8007c1e:	683b      	ldr	r3, [r7, #0]
 8007c20:	685b      	ldr	r3, [r3, #4]
 8007c22:	4313      	orrs	r3, r2
 8007c24:	60fb      	str	r3, [r7, #12]
 8007c26:	68fb      	ldr	r3, [r7, #12]
 8007c28:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8007c2c:	683b      	ldr	r3, [r7, #0]
 8007c2e:	681b      	ldr	r3, [r3, #0]
 8007c30:	4313      	orrs	r3, r2
 8007c32:	60fb      	str	r3, [r7, #12]
 8007c34:	68fb      	ldr	r3, [r7, #12]
 8007c36:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8007c3a:	683b      	ldr	r3, [r7, #0]
 8007c3c:	691b      	ldr	r3, [r3, #16]
 8007c3e:	4313      	orrs	r3, r2
 8007c40:	60fb      	str	r3, [r7, #12]
 8007c42:	68fb      	ldr	r3, [r7, #12]
 8007c44:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8007c48:	683b      	ldr	r3, [r7, #0]
 8007c4a:	695b      	ldr	r3, [r3, #20]
 8007c4c:	4313      	orrs	r3, r2
 8007c4e:	60fb      	str	r3, [r7, #12]
 8007c50:	68fb      	ldr	r3, [r7, #12]
 8007c52:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8007c56:	683b      	ldr	r3, [r7, #0]
 8007c58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c5a:	4313      	orrs	r3, r2
 8007c5c:	60fb      	str	r3, [r7, #12]
 8007c5e:	68fb      	ldr	r3, [r7, #12]
 8007c60:	f423 2270 	bic.w	r2, r3, #983040	; 0xf0000
 8007c64:	683b      	ldr	r3, [r7, #0]
 8007c66:	699b      	ldr	r3, [r3, #24]
 8007c68:	041b      	lsls	r3, r3, #16
 8007c6a:	4313      	orrs	r3, r2
 8007c6c:	60fb      	str	r3, [r7, #12]
 8007c6e:	687b      	ldr	r3, [r7, #4]
 8007c70:	681b      	ldr	r3, [r3, #0]
 8007c72:	4a14      	ldr	r2, [pc, #80]	; (8007cc4 <HAL_TIMEx_ConfigBreakDeadTime+0xec>)
 8007c74:	4293      	cmp	r3, r2
 8007c76:	d115      	bne.n	8007ca4 <HAL_TIMEx_ConfigBreakDeadTime+0xcc>
 8007c78:	68fb      	ldr	r3, [r7, #12]
 8007c7a:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
 8007c7e:	683b      	ldr	r3, [r7, #0]
 8007c80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007c82:	051b      	lsls	r3, r3, #20
 8007c84:	4313      	orrs	r3, r2
 8007c86:	60fb      	str	r3, [r7, #12]
 8007c88:	68fb      	ldr	r3, [r7, #12]
 8007c8a:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8007c8e:	683b      	ldr	r3, [r7, #0]
 8007c90:	69db      	ldr	r3, [r3, #28]
 8007c92:	4313      	orrs	r3, r2
 8007c94:	60fb      	str	r3, [r7, #12]
 8007c96:	68fb      	ldr	r3, [r7, #12]
 8007c98:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8007c9c:	683b      	ldr	r3, [r7, #0]
 8007c9e:	6a1b      	ldr	r3, [r3, #32]
 8007ca0:	4313      	orrs	r3, r2
 8007ca2:	60fb      	str	r3, [r7, #12]
 8007ca4:	687b      	ldr	r3, [r7, #4]
 8007ca6:	681b      	ldr	r3, [r3, #0]
 8007ca8:	68fa      	ldr	r2, [r7, #12]
 8007caa:	645a      	str	r2, [r3, #68]	; 0x44
 8007cac:	687b      	ldr	r3, [r7, #4]
 8007cae:	2200      	movs	r2, #0
 8007cb0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007cb4:	2300      	movs	r3, #0
 8007cb6:	4618      	mov	r0, r3
 8007cb8:	3714      	adds	r7, #20
 8007cba:	46bd      	mov	sp, r7
 8007cbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cc0:	4770      	bx	lr
 8007cc2:	bf00      	nop
 8007cc4:	40012c00 	.word	0x40012c00

08007cc8 <HAL_TIMEx_CommutCallback>:
 8007cc8:	b480      	push	{r7}
 8007cca:	b083      	sub	sp, #12
 8007ccc:	af00      	add	r7, sp, #0
 8007cce:	6078      	str	r0, [r7, #4]
 8007cd0:	bf00      	nop
 8007cd2:	370c      	adds	r7, #12
 8007cd4:	46bd      	mov	sp, r7
 8007cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cda:	4770      	bx	lr

08007cdc <HAL_TIMEx_BreakCallback>:
 8007cdc:	b480      	push	{r7}
 8007cde:	b083      	sub	sp, #12
 8007ce0:	af00      	add	r7, sp, #0
 8007ce2:	6078      	str	r0, [r7, #4]
 8007ce4:	bf00      	nop
 8007ce6:	370c      	adds	r7, #12
 8007ce8:	46bd      	mov	sp, r7
 8007cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cee:	4770      	bx	lr

08007cf0 <HAL_TIMEx_Break2Callback>:
 8007cf0:	b480      	push	{r7}
 8007cf2:	b083      	sub	sp, #12
 8007cf4:	af00      	add	r7, sp, #0
 8007cf6:	6078      	str	r0, [r7, #4]
 8007cf8:	bf00      	nop
 8007cfa:	370c      	adds	r7, #12
 8007cfc:	46bd      	mov	sp, r7
 8007cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d02:	4770      	bx	lr

08007d04 <__errno>:
 8007d04:	4b01      	ldr	r3, [pc, #4]	; (8007d0c <__errno+0x8>)
 8007d06:	6818      	ldr	r0, [r3, #0]
 8007d08:	4770      	bx	lr
 8007d0a:	bf00      	nop
 8007d0c:	20000018 	.word	0x20000018

08007d10 <__libc_init_array>:
 8007d10:	b570      	push	{r4, r5, r6, lr}
 8007d12:	4d0d      	ldr	r5, [pc, #52]	; (8007d48 <__libc_init_array+0x38>)
 8007d14:	4c0d      	ldr	r4, [pc, #52]	; (8007d4c <__libc_init_array+0x3c>)
 8007d16:	1b64      	subs	r4, r4, r5
 8007d18:	10a4      	asrs	r4, r4, #2
 8007d1a:	2600      	movs	r6, #0
 8007d1c:	42a6      	cmp	r6, r4
 8007d1e:	d109      	bne.n	8007d34 <__libc_init_array+0x24>
 8007d20:	4d0b      	ldr	r5, [pc, #44]	; (8007d50 <__libc_init_array+0x40>)
 8007d22:	4c0c      	ldr	r4, [pc, #48]	; (8007d54 <__libc_init_array+0x44>)
 8007d24:	f004 fe8a 	bl	800ca3c <_init>
 8007d28:	1b64      	subs	r4, r4, r5
 8007d2a:	10a4      	asrs	r4, r4, #2
 8007d2c:	2600      	movs	r6, #0
 8007d2e:	42a6      	cmp	r6, r4
 8007d30:	d105      	bne.n	8007d3e <__libc_init_array+0x2e>
 8007d32:	bd70      	pop	{r4, r5, r6, pc}
 8007d34:	f855 3b04 	ldr.w	r3, [r5], #4
 8007d38:	4798      	blx	r3
 8007d3a:	3601      	adds	r6, #1
 8007d3c:	e7ee      	b.n	8007d1c <__libc_init_array+0xc>
 8007d3e:	f855 3b04 	ldr.w	r3, [r5], #4
 8007d42:	4798      	blx	r3
 8007d44:	3601      	adds	r6, #1
 8007d46:	e7f2      	b.n	8007d2e <__libc_init_array+0x1e>
 8007d48:	0800cf3c 	.word	0x0800cf3c
 8007d4c:	0800cf3c 	.word	0x0800cf3c
 8007d50:	0800cf3c 	.word	0x0800cf3c
 8007d54:	0800cf40 	.word	0x0800cf40

08007d58 <memset>:
 8007d58:	4402      	add	r2, r0
 8007d5a:	4603      	mov	r3, r0
 8007d5c:	4293      	cmp	r3, r2
 8007d5e:	d100      	bne.n	8007d62 <memset+0xa>
 8007d60:	4770      	bx	lr
 8007d62:	f803 1b01 	strb.w	r1, [r3], #1
 8007d66:	e7f9      	b.n	8007d5c <memset+0x4>

08007d68 <__cvt>:
 8007d68:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007d6c:	ec55 4b10 	vmov	r4, r5, d0
 8007d70:	2d00      	cmp	r5, #0
 8007d72:	460e      	mov	r6, r1
 8007d74:	4619      	mov	r1, r3
 8007d76:	462b      	mov	r3, r5
 8007d78:	bfbb      	ittet	lt
 8007d7a:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8007d7e:	461d      	movlt	r5, r3
 8007d80:	2300      	movge	r3, #0
 8007d82:	232d      	movlt	r3, #45	; 0x2d
 8007d84:	700b      	strb	r3, [r1, #0]
 8007d86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007d88:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8007d8c:	4691      	mov	r9, r2
 8007d8e:	f023 0820 	bic.w	r8, r3, #32
 8007d92:	bfbc      	itt	lt
 8007d94:	4622      	movlt	r2, r4
 8007d96:	4614      	movlt	r4, r2
 8007d98:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8007d9c:	d005      	beq.n	8007daa <__cvt+0x42>
 8007d9e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8007da2:	d100      	bne.n	8007da6 <__cvt+0x3e>
 8007da4:	3601      	adds	r6, #1
 8007da6:	2102      	movs	r1, #2
 8007da8:	e000      	b.n	8007dac <__cvt+0x44>
 8007daa:	2103      	movs	r1, #3
 8007dac:	ab03      	add	r3, sp, #12
 8007dae:	9301      	str	r3, [sp, #4]
 8007db0:	ab02      	add	r3, sp, #8
 8007db2:	9300      	str	r3, [sp, #0]
 8007db4:	ec45 4b10 	vmov	d0, r4, r5
 8007db8:	4653      	mov	r3, sl
 8007dba:	4632      	mov	r2, r6
 8007dbc:	f001 fdac 	bl	8009918 <_dtoa_r>
 8007dc0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8007dc4:	4607      	mov	r7, r0
 8007dc6:	d102      	bne.n	8007dce <__cvt+0x66>
 8007dc8:	f019 0f01 	tst.w	r9, #1
 8007dcc:	d022      	beq.n	8007e14 <__cvt+0xac>
 8007dce:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8007dd2:	eb07 0906 	add.w	r9, r7, r6
 8007dd6:	d110      	bne.n	8007dfa <__cvt+0x92>
 8007dd8:	783b      	ldrb	r3, [r7, #0]
 8007dda:	2b30      	cmp	r3, #48	; 0x30
 8007ddc:	d10a      	bne.n	8007df4 <__cvt+0x8c>
 8007dde:	2200      	movs	r2, #0
 8007de0:	2300      	movs	r3, #0
 8007de2:	4620      	mov	r0, r4
 8007de4:	4629      	mov	r1, r5
 8007de6:	f7f8 fe6f 	bl	8000ac8 <__aeabi_dcmpeq>
 8007dea:	b918      	cbnz	r0, 8007df4 <__cvt+0x8c>
 8007dec:	f1c6 0601 	rsb	r6, r6, #1
 8007df0:	f8ca 6000 	str.w	r6, [sl]
 8007df4:	f8da 3000 	ldr.w	r3, [sl]
 8007df8:	4499      	add	r9, r3
 8007dfa:	2200      	movs	r2, #0
 8007dfc:	2300      	movs	r3, #0
 8007dfe:	4620      	mov	r0, r4
 8007e00:	4629      	mov	r1, r5
 8007e02:	f7f8 fe61 	bl	8000ac8 <__aeabi_dcmpeq>
 8007e06:	b108      	cbz	r0, 8007e0c <__cvt+0xa4>
 8007e08:	f8cd 900c 	str.w	r9, [sp, #12]
 8007e0c:	2230      	movs	r2, #48	; 0x30
 8007e0e:	9b03      	ldr	r3, [sp, #12]
 8007e10:	454b      	cmp	r3, r9
 8007e12:	d307      	bcc.n	8007e24 <__cvt+0xbc>
 8007e14:	9b03      	ldr	r3, [sp, #12]
 8007e16:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007e18:	1bdb      	subs	r3, r3, r7
 8007e1a:	4638      	mov	r0, r7
 8007e1c:	6013      	str	r3, [r2, #0]
 8007e1e:	b004      	add	sp, #16
 8007e20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007e24:	1c59      	adds	r1, r3, #1
 8007e26:	9103      	str	r1, [sp, #12]
 8007e28:	701a      	strb	r2, [r3, #0]
 8007e2a:	e7f0      	b.n	8007e0e <__cvt+0xa6>

08007e2c <__exponent>:
 8007e2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007e2e:	4603      	mov	r3, r0
 8007e30:	2900      	cmp	r1, #0
 8007e32:	bfb8      	it	lt
 8007e34:	4249      	neglt	r1, r1
 8007e36:	f803 2b02 	strb.w	r2, [r3], #2
 8007e3a:	bfb4      	ite	lt
 8007e3c:	222d      	movlt	r2, #45	; 0x2d
 8007e3e:	222b      	movge	r2, #43	; 0x2b
 8007e40:	2909      	cmp	r1, #9
 8007e42:	7042      	strb	r2, [r0, #1]
 8007e44:	dd2a      	ble.n	8007e9c <__exponent+0x70>
 8007e46:	f10d 0407 	add.w	r4, sp, #7
 8007e4a:	46a4      	mov	ip, r4
 8007e4c:	270a      	movs	r7, #10
 8007e4e:	46a6      	mov	lr, r4
 8007e50:	460a      	mov	r2, r1
 8007e52:	fb91 f6f7 	sdiv	r6, r1, r7
 8007e56:	fb07 1516 	mls	r5, r7, r6, r1
 8007e5a:	3530      	adds	r5, #48	; 0x30
 8007e5c:	2a63      	cmp	r2, #99	; 0x63
 8007e5e:	f104 34ff 	add.w	r4, r4, #4294967295
 8007e62:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8007e66:	4631      	mov	r1, r6
 8007e68:	dcf1      	bgt.n	8007e4e <__exponent+0x22>
 8007e6a:	3130      	adds	r1, #48	; 0x30
 8007e6c:	f1ae 0502 	sub.w	r5, lr, #2
 8007e70:	f804 1c01 	strb.w	r1, [r4, #-1]
 8007e74:	1c44      	adds	r4, r0, #1
 8007e76:	4629      	mov	r1, r5
 8007e78:	4561      	cmp	r1, ip
 8007e7a:	d30a      	bcc.n	8007e92 <__exponent+0x66>
 8007e7c:	f10d 0209 	add.w	r2, sp, #9
 8007e80:	eba2 020e 	sub.w	r2, r2, lr
 8007e84:	4565      	cmp	r5, ip
 8007e86:	bf88      	it	hi
 8007e88:	2200      	movhi	r2, #0
 8007e8a:	4413      	add	r3, r2
 8007e8c:	1a18      	subs	r0, r3, r0
 8007e8e:	b003      	add	sp, #12
 8007e90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007e92:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007e96:	f804 2f01 	strb.w	r2, [r4, #1]!
 8007e9a:	e7ed      	b.n	8007e78 <__exponent+0x4c>
 8007e9c:	2330      	movs	r3, #48	; 0x30
 8007e9e:	3130      	adds	r1, #48	; 0x30
 8007ea0:	7083      	strb	r3, [r0, #2]
 8007ea2:	70c1      	strb	r1, [r0, #3]
 8007ea4:	1d03      	adds	r3, r0, #4
 8007ea6:	e7f1      	b.n	8007e8c <__exponent+0x60>

08007ea8 <_printf_float>:
 8007ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007eac:	ed2d 8b02 	vpush	{d8}
 8007eb0:	b08d      	sub	sp, #52	; 0x34
 8007eb2:	460c      	mov	r4, r1
 8007eb4:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8007eb8:	4616      	mov	r6, r2
 8007eba:	461f      	mov	r7, r3
 8007ebc:	4605      	mov	r5, r0
 8007ebe:	f002 fe89 	bl	800abd4 <_localeconv_r>
 8007ec2:	f8d0 a000 	ldr.w	sl, [r0]
 8007ec6:	4650      	mov	r0, sl
 8007ec8:	f7f8 f982 	bl	80001d0 <strlen>
 8007ecc:	2300      	movs	r3, #0
 8007ece:	930a      	str	r3, [sp, #40]	; 0x28
 8007ed0:	6823      	ldr	r3, [r4, #0]
 8007ed2:	9305      	str	r3, [sp, #20]
 8007ed4:	f8d8 3000 	ldr.w	r3, [r8]
 8007ed8:	f894 b018 	ldrb.w	fp, [r4, #24]
 8007edc:	3307      	adds	r3, #7
 8007ede:	f023 0307 	bic.w	r3, r3, #7
 8007ee2:	f103 0208 	add.w	r2, r3, #8
 8007ee6:	f8c8 2000 	str.w	r2, [r8]
 8007eea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007eee:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8007ef2:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8007ef6:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8007efa:	9307      	str	r3, [sp, #28]
 8007efc:	f8cd 8018 	str.w	r8, [sp, #24]
 8007f00:	ee08 0a10 	vmov	s16, r0
 8007f04:	4b9f      	ldr	r3, [pc, #636]	; (8008184 <_printf_float+0x2dc>)
 8007f06:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007f0a:	f04f 32ff 	mov.w	r2, #4294967295
 8007f0e:	f7f8 fe0d 	bl	8000b2c <__aeabi_dcmpun>
 8007f12:	bb88      	cbnz	r0, 8007f78 <_printf_float+0xd0>
 8007f14:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007f18:	4b9a      	ldr	r3, [pc, #616]	; (8008184 <_printf_float+0x2dc>)
 8007f1a:	f04f 32ff 	mov.w	r2, #4294967295
 8007f1e:	f7f8 fde7 	bl	8000af0 <__aeabi_dcmple>
 8007f22:	bb48      	cbnz	r0, 8007f78 <_printf_float+0xd0>
 8007f24:	2200      	movs	r2, #0
 8007f26:	2300      	movs	r3, #0
 8007f28:	4640      	mov	r0, r8
 8007f2a:	4649      	mov	r1, r9
 8007f2c:	f7f8 fdd6 	bl	8000adc <__aeabi_dcmplt>
 8007f30:	b110      	cbz	r0, 8007f38 <_printf_float+0x90>
 8007f32:	232d      	movs	r3, #45	; 0x2d
 8007f34:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007f38:	4b93      	ldr	r3, [pc, #588]	; (8008188 <_printf_float+0x2e0>)
 8007f3a:	4894      	ldr	r0, [pc, #592]	; (800818c <_printf_float+0x2e4>)
 8007f3c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8007f40:	bf94      	ite	ls
 8007f42:	4698      	movls	r8, r3
 8007f44:	4680      	movhi	r8, r0
 8007f46:	2303      	movs	r3, #3
 8007f48:	6123      	str	r3, [r4, #16]
 8007f4a:	9b05      	ldr	r3, [sp, #20]
 8007f4c:	f023 0204 	bic.w	r2, r3, #4
 8007f50:	6022      	str	r2, [r4, #0]
 8007f52:	f04f 0900 	mov.w	r9, #0
 8007f56:	9700      	str	r7, [sp, #0]
 8007f58:	4633      	mov	r3, r6
 8007f5a:	aa0b      	add	r2, sp, #44	; 0x2c
 8007f5c:	4621      	mov	r1, r4
 8007f5e:	4628      	mov	r0, r5
 8007f60:	f000 f9d8 	bl	8008314 <_printf_common>
 8007f64:	3001      	adds	r0, #1
 8007f66:	f040 8090 	bne.w	800808a <_printf_float+0x1e2>
 8007f6a:	f04f 30ff 	mov.w	r0, #4294967295
 8007f6e:	b00d      	add	sp, #52	; 0x34
 8007f70:	ecbd 8b02 	vpop	{d8}
 8007f74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f78:	4642      	mov	r2, r8
 8007f7a:	464b      	mov	r3, r9
 8007f7c:	4640      	mov	r0, r8
 8007f7e:	4649      	mov	r1, r9
 8007f80:	f7f8 fdd4 	bl	8000b2c <__aeabi_dcmpun>
 8007f84:	b140      	cbz	r0, 8007f98 <_printf_float+0xf0>
 8007f86:	464b      	mov	r3, r9
 8007f88:	2b00      	cmp	r3, #0
 8007f8a:	bfbc      	itt	lt
 8007f8c:	232d      	movlt	r3, #45	; 0x2d
 8007f8e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8007f92:	487f      	ldr	r0, [pc, #508]	; (8008190 <_printf_float+0x2e8>)
 8007f94:	4b7f      	ldr	r3, [pc, #508]	; (8008194 <_printf_float+0x2ec>)
 8007f96:	e7d1      	b.n	8007f3c <_printf_float+0x94>
 8007f98:	6863      	ldr	r3, [r4, #4]
 8007f9a:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8007f9e:	9206      	str	r2, [sp, #24]
 8007fa0:	1c5a      	adds	r2, r3, #1
 8007fa2:	d13f      	bne.n	8008024 <_printf_float+0x17c>
 8007fa4:	2306      	movs	r3, #6
 8007fa6:	6063      	str	r3, [r4, #4]
 8007fa8:	9b05      	ldr	r3, [sp, #20]
 8007faa:	6861      	ldr	r1, [r4, #4]
 8007fac:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8007fb0:	2300      	movs	r3, #0
 8007fb2:	9303      	str	r3, [sp, #12]
 8007fb4:	ab0a      	add	r3, sp, #40	; 0x28
 8007fb6:	e9cd b301 	strd	fp, r3, [sp, #4]
 8007fba:	ab09      	add	r3, sp, #36	; 0x24
 8007fbc:	ec49 8b10 	vmov	d0, r8, r9
 8007fc0:	9300      	str	r3, [sp, #0]
 8007fc2:	6022      	str	r2, [r4, #0]
 8007fc4:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8007fc8:	4628      	mov	r0, r5
 8007fca:	f7ff fecd 	bl	8007d68 <__cvt>
 8007fce:	9b06      	ldr	r3, [sp, #24]
 8007fd0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007fd2:	2b47      	cmp	r3, #71	; 0x47
 8007fd4:	4680      	mov	r8, r0
 8007fd6:	d108      	bne.n	8007fea <_printf_float+0x142>
 8007fd8:	1cc8      	adds	r0, r1, #3
 8007fda:	db02      	blt.n	8007fe2 <_printf_float+0x13a>
 8007fdc:	6863      	ldr	r3, [r4, #4]
 8007fde:	4299      	cmp	r1, r3
 8007fe0:	dd41      	ble.n	8008066 <_printf_float+0x1be>
 8007fe2:	f1ab 0b02 	sub.w	fp, fp, #2
 8007fe6:	fa5f fb8b 	uxtb.w	fp, fp
 8007fea:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8007fee:	d820      	bhi.n	8008032 <_printf_float+0x18a>
 8007ff0:	3901      	subs	r1, #1
 8007ff2:	465a      	mov	r2, fp
 8007ff4:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8007ff8:	9109      	str	r1, [sp, #36]	; 0x24
 8007ffa:	f7ff ff17 	bl	8007e2c <__exponent>
 8007ffe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008000:	1813      	adds	r3, r2, r0
 8008002:	2a01      	cmp	r2, #1
 8008004:	4681      	mov	r9, r0
 8008006:	6123      	str	r3, [r4, #16]
 8008008:	dc02      	bgt.n	8008010 <_printf_float+0x168>
 800800a:	6822      	ldr	r2, [r4, #0]
 800800c:	07d2      	lsls	r2, r2, #31
 800800e:	d501      	bpl.n	8008014 <_printf_float+0x16c>
 8008010:	3301      	adds	r3, #1
 8008012:	6123      	str	r3, [r4, #16]
 8008014:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8008018:	2b00      	cmp	r3, #0
 800801a:	d09c      	beq.n	8007f56 <_printf_float+0xae>
 800801c:	232d      	movs	r3, #45	; 0x2d
 800801e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8008022:	e798      	b.n	8007f56 <_printf_float+0xae>
 8008024:	9a06      	ldr	r2, [sp, #24]
 8008026:	2a47      	cmp	r2, #71	; 0x47
 8008028:	d1be      	bne.n	8007fa8 <_printf_float+0x100>
 800802a:	2b00      	cmp	r3, #0
 800802c:	d1bc      	bne.n	8007fa8 <_printf_float+0x100>
 800802e:	2301      	movs	r3, #1
 8008030:	e7b9      	b.n	8007fa6 <_printf_float+0xfe>
 8008032:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8008036:	d118      	bne.n	800806a <_printf_float+0x1c2>
 8008038:	2900      	cmp	r1, #0
 800803a:	6863      	ldr	r3, [r4, #4]
 800803c:	dd0b      	ble.n	8008056 <_printf_float+0x1ae>
 800803e:	6121      	str	r1, [r4, #16]
 8008040:	b913      	cbnz	r3, 8008048 <_printf_float+0x1a0>
 8008042:	6822      	ldr	r2, [r4, #0]
 8008044:	07d0      	lsls	r0, r2, #31
 8008046:	d502      	bpl.n	800804e <_printf_float+0x1a6>
 8008048:	3301      	adds	r3, #1
 800804a:	440b      	add	r3, r1
 800804c:	6123      	str	r3, [r4, #16]
 800804e:	65a1      	str	r1, [r4, #88]	; 0x58
 8008050:	f04f 0900 	mov.w	r9, #0
 8008054:	e7de      	b.n	8008014 <_printf_float+0x16c>
 8008056:	b913      	cbnz	r3, 800805e <_printf_float+0x1b6>
 8008058:	6822      	ldr	r2, [r4, #0]
 800805a:	07d2      	lsls	r2, r2, #31
 800805c:	d501      	bpl.n	8008062 <_printf_float+0x1ba>
 800805e:	3302      	adds	r3, #2
 8008060:	e7f4      	b.n	800804c <_printf_float+0x1a4>
 8008062:	2301      	movs	r3, #1
 8008064:	e7f2      	b.n	800804c <_printf_float+0x1a4>
 8008066:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800806a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800806c:	4299      	cmp	r1, r3
 800806e:	db05      	blt.n	800807c <_printf_float+0x1d4>
 8008070:	6823      	ldr	r3, [r4, #0]
 8008072:	6121      	str	r1, [r4, #16]
 8008074:	07d8      	lsls	r0, r3, #31
 8008076:	d5ea      	bpl.n	800804e <_printf_float+0x1a6>
 8008078:	1c4b      	adds	r3, r1, #1
 800807a:	e7e7      	b.n	800804c <_printf_float+0x1a4>
 800807c:	2900      	cmp	r1, #0
 800807e:	bfd4      	ite	le
 8008080:	f1c1 0202 	rsble	r2, r1, #2
 8008084:	2201      	movgt	r2, #1
 8008086:	4413      	add	r3, r2
 8008088:	e7e0      	b.n	800804c <_printf_float+0x1a4>
 800808a:	6823      	ldr	r3, [r4, #0]
 800808c:	055a      	lsls	r2, r3, #21
 800808e:	d407      	bmi.n	80080a0 <_printf_float+0x1f8>
 8008090:	6923      	ldr	r3, [r4, #16]
 8008092:	4642      	mov	r2, r8
 8008094:	4631      	mov	r1, r6
 8008096:	4628      	mov	r0, r5
 8008098:	47b8      	blx	r7
 800809a:	3001      	adds	r0, #1
 800809c:	d12c      	bne.n	80080f8 <_printf_float+0x250>
 800809e:	e764      	b.n	8007f6a <_printf_float+0xc2>
 80080a0:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80080a4:	f240 80e0 	bls.w	8008268 <_printf_float+0x3c0>
 80080a8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80080ac:	2200      	movs	r2, #0
 80080ae:	2300      	movs	r3, #0
 80080b0:	f7f8 fd0a 	bl	8000ac8 <__aeabi_dcmpeq>
 80080b4:	2800      	cmp	r0, #0
 80080b6:	d034      	beq.n	8008122 <_printf_float+0x27a>
 80080b8:	4a37      	ldr	r2, [pc, #220]	; (8008198 <_printf_float+0x2f0>)
 80080ba:	2301      	movs	r3, #1
 80080bc:	4631      	mov	r1, r6
 80080be:	4628      	mov	r0, r5
 80080c0:	47b8      	blx	r7
 80080c2:	3001      	adds	r0, #1
 80080c4:	f43f af51 	beq.w	8007f6a <_printf_float+0xc2>
 80080c8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80080cc:	429a      	cmp	r2, r3
 80080ce:	db02      	blt.n	80080d6 <_printf_float+0x22e>
 80080d0:	6823      	ldr	r3, [r4, #0]
 80080d2:	07d8      	lsls	r0, r3, #31
 80080d4:	d510      	bpl.n	80080f8 <_printf_float+0x250>
 80080d6:	ee18 3a10 	vmov	r3, s16
 80080da:	4652      	mov	r2, sl
 80080dc:	4631      	mov	r1, r6
 80080de:	4628      	mov	r0, r5
 80080e0:	47b8      	blx	r7
 80080e2:	3001      	adds	r0, #1
 80080e4:	f43f af41 	beq.w	8007f6a <_printf_float+0xc2>
 80080e8:	f04f 0800 	mov.w	r8, #0
 80080ec:	f104 091a 	add.w	r9, r4, #26
 80080f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80080f2:	3b01      	subs	r3, #1
 80080f4:	4543      	cmp	r3, r8
 80080f6:	dc09      	bgt.n	800810c <_printf_float+0x264>
 80080f8:	6823      	ldr	r3, [r4, #0]
 80080fa:	079b      	lsls	r3, r3, #30
 80080fc:	f100 8105 	bmi.w	800830a <_printf_float+0x462>
 8008100:	68e0      	ldr	r0, [r4, #12]
 8008102:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008104:	4298      	cmp	r0, r3
 8008106:	bfb8      	it	lt
 8008108:	4618      	movlt	r0, r3
 800810a:	e730      	b.n	8007f6e <_printf_float+0xc6>
 800810c:	2301      	movs	r3, #1
 800810e:	464a      	mov	r2, r9
 8008110:	4631      	mov	r1, r6
 8008112:	4628      	mov	r0, r5
 8008114:	47b8      	blx	r7
 8008116:	3001      	adds	r0, #1
 8008118:	f43f af27 	beq.w	8007f6a <_printf_float+0xc2>
 800811c:	f108 0801 	add.w	r8, r8, #1
 8008120:	e7e6      	b.n	80080f0 <_printf_float+0x248>
 8008122:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008124:	2b00      	cmp	r3, #0
 8008126:	dc39      	bgt.n	800819c <_printf_float+0x2f4>
 8008128:	4a1b      	ldr	r2, [pc, #108]	; (8008198 <_printf_float+0x2f0>)
 800812a:	2301      	movs	r3, #1
 800812c:	4631      	mov	r1, r6
 800812e:	4628      	mov	r0, r5
 8008130:	47b8      	blx	r7
 8008132:	3001      	adds	r0, #1
 8008134:	f43f af19 	beq.w	8007f6a <_printf_float+0xc2>
 8008138:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800813c:	4313      	orrs	r3, r2
 800813e:	d102      	bne.n	8008146 <_printf_float+0x29e>
 8008140:	6823      	ldr	r3, [r4, #0]
 8008142:	07d9      	lsls	r1, r3, #31
 8008144:	d5d8      	bpl.n	80080f8 <_printf_float+0x250>
 8008146:	ee18 3a10 	vmov	r3, s16
 800814a:	4652      	mov	r2, sl
 800814c:	4631      	mov	r1, r6
 800814e:	4628      	mov	r0, r5
 8008150:	47b8      	blx	r7
 8008152:	3001      	adds	r0, #1
 8008154:	f43f af09 	beq.w	8007f6a <_printf_float+0xc2>
 8008158:	f04f 0900 	mov.w	r9, #0
 800815c:	f104 0a1a 	add.w	sl, r4, #26
 8008160:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008162:	425b      	negs	r3, r3
 8008164:	454b      	cmp	r3, r9
 8008166:	dc01      	bgt.n	800816c <_printf_float+0x2c4>
 8008168:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800816a:	e792      	b.n	8008092 <_printf_float+0x1ea>
 800816c:	2301      	movs	r3, #1
 800816e:	4652      	mov	r2, sl
 8008170:	4631      	mov	r1, r6
 8008172:	4628      	mov	r0, r5
 8008174:	47b8      	blx	r7
 8008176:	3001      	adds	r0, #1
 8008178:	f43f aef7 	beq.w	8007f6a <_printf_float+0xc2>
 800817c:	f109 0901 	add.w	r9, r9, #1
 8008180:	e7ee      	b.n	8008160 <_printf_float+0x2b8>
 8008182:	bf00      	nop
 8008184:	7fefffff 	.word	0x7fefffff
 8008188:	0800ca9c 	.word	0x0800ca9c
 800818c:	0800caa0 	.word	0x0800caa0
 8008190:	0800caa8 	.word	0x0800caa8
 8008194:	0800caa4 	.word	0x0800caa4
 8008198:	0800caac 	.word	0x0800caac
 800819c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800819e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80081a0:	429a      	cmp	r2, r3
 80081a2:	bfa8      	it	ge
 80081a4:	461a      	movge	r2, r3
 80081a6:	2a00      	cmp	r2, #0
 80081a8:	4691      	mov	r9, r2
 80081aa:	dc37      	bgt.n	800821c <_printf_float+0x374>
 80081ac:	f04f 0b00 	mov.w	fp, #0
 80081b0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80081b4:	f104 021a 	add.w	r2, r4, #26
 80081b8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80081ba:	9305      	str	r3, [sp, #20]
 80081bc:	eba3 0309 	sub.w	r3, r3, r9
 80081c0:	455b      	cmp	r3, fp
 80081c2:	dc33      	bgt.n	800822c <_printf_float+0x384>
 80081c4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80081c8:	429a      	cmp	r2, r3
 80081ca:	db3b      	blt.n	8008244 <_printf_float+0x39c>
 80081cc:	6823      	ldr	r3, [r4, #0]
 80081ce:	07da      	lsls	r2, r3, #31
 80081d0:	d438      	bmi.n	8008244 <_printf_float+0x39c>
 80081d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80081d4:	9a05      	ldr	r2, [sp, #20]
 80081d6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80081d8:	1a9a      	subs	r2, r3, r2
 80081da:	eba3 0901 	sub.w	r9, r3, r1
 80081de:	4591      	cmp	r9, r2
 80081e0:	bfa8      	it	ge
 80081e2:	4691      	movge	r9, r2
 80081e4:	f1b9 0f00 	cmp.w	r9, #0
 80081e8:	dc35      	bgt.n	8008256 <_printf_float+0x3ae>
 80081ea:	f04f 0800 	mov.w	r8, #0
 80081ee:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80081f2:	f104 0a1a 	add.w	sl, r4, #26
 80081f6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80081fa:	1a9b      	subs	r3, r3, r2
 80081fc:	eba3 0309 	sub.w	r3, r3, r9
 8008200:	4543      	cmp	r3, r8
 8008202:	f77f af79 	ble.w	80080f8 <_printf_float+0x250>
 8008206:	2301      	movs	r3, #1
 8008208:	4652      	mov	r2, sl
 800820a:	4631      	mov	r1, r6
 800820c:	4628      	mov	r0, r5
 800820e:	47b8      	blx	r7
 8008210:	3001      	adds	r0, #1
 8008212:	f43f aeaa 	beq.w	8007f6a <_printf_float+0xc2>
 8008216:	f108 0801 	add.w	r8, r8, #1
 800821a:	e7ec      	b.n	80081f6 <_printf_float+0x34e>
 800821c:	4613      	mov	r3, r2
 800821e:	4631      	mov	r1, r6
 8008220:	4642      	mov	r2, r8
 8008222:	4628      	mov	r0, r5
 8008224:	47b8      	blx	r7
 8008226:	3001      	adds	r0, #1
 8008228:	d1c0      	bne.n	80081ac <_printf_float+0x304>
 800822a:	e69e      	b.n	8007f6a <_printf_float+0xc2>
 800822c:	2301      	movs	r3, #1
 800822e:	4631      	mov	r1, r6
 8008230:	4628      	mov	r0, r5
 8008232:	9205      	str	r2, [sp, #20]
 8008234:	47b8      	blx	r7
 8008236:	3001      	adds	r0, #1
 8008238:	f43f ae97 	beq.w	8007f6a <_printf_float+0xc2>
 800823c:	9a05      	ldr	r2, [sp, #20]
 800823e:	f10b 0b01 	add.w	fp, fp, #1
 8008242:	e7b9      	b.n	80081b8 <_printf_float+0x310>
 8008244:	ee18 3a10 	vmov	r3, s16
 8008248:	4652      	mov	r2, sl
 800824a:	4631      	mov	r1, r6
 800824c:	4628      	mov	r0, r5
 800824e:	47b8      	blx	r7
 8008250:	3001      	adds	r0, #1
 8008252:	d1be      	bne.n	80081d2 <_printf_float+0x32a>
 8008254:	e689      	b.n	8007f6a <_printf_float+0xc2>
 8008256:	9a05      	ldr	r2, [sp, #20]
 8008258:	464b      	mov	r3, r9
 800825a:	4442      	add	r2, r8
 800825c:	4631      	mov	r1, r6
 800825e:	4628      	mov	r0, r5
 8008260:	47b8      	blx	r7
 8008262:	3001      	adds	r0, #1
 8008264:	d1c1      	bne.n	80081ea <_printf_float+0x342>
 8008266:	e680      	b.n	8007f6a <_printf_float+0xc2>
 8008268:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800826a:	2a01      	cmp	r2, #1
 800826c:	dc01      	bgt.n	8008272 <_printf_float+0x3ca>
 800826e:	07db      	lsls	r3, r3, #31
 8008270:	d538      	bpl.n	80082e4 <_printf_float+0x43c>
 8008272:	2301      	movs	r3, #1
 8008274:	4642      	mov	r2, r8
 8008276:	4631      	mov	r1, r6
 8008278:	4628      	mov	r0, r5
 800827a:	47b8      	blx	r7
 800827c:	3001      	adds	r0, #1
 800827e:	f43f ae74 	beq.w	8007f6a <_printf_float+0xc2>
 8008282:	ee18 3a10 	vmov	r3, s16
 8008286:	4652      	mov	r2, sl
 8008288:	4631      	mov	r1, r6
 800828a:	4628      	mov	r0, r5
 800828c:	47b8      	blx	r7
 800828e:	3001      	adds	r0, #1
 8008290:	f43f ae6b 	beq.w	8007f6a <_printf_float+0xc2>
 8008294:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8008298:	2200      	movs	r2, #0
 800829a:	2300      	movs	r3, #0
 800829c:	f7f8 fc14 	bl	8000ac8 <__aeabi_dcmpeq>
 80082a0:	b9d8      	cbnz	r0, 80082da <_printf_float+0x432>
 80082a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80082a4:	f108 0201 	add.w	r2, r8, #1
 80082a8:	3b01      	subs	r3, #1
 80082aa:	4631      	mov	r1, r6
 80082ac:	4628      	mov	r0, r5
 80082ae:	47b8      	blx	r7
 80082b0:	3001      	adds	r0, #1
 80082b2:	d10e      	bne.n	80082d2 <_printf_float+0x42a>
 80082b4:	e659      	b.n	8007f6a <_printf_float+0xc2>
 80082b6:	2301      	movs	r3, #1
 80082b8:	4652      	mov	r2, sl
 80082ba:	4631      	mov	r1, r6
 80082bc:	4628      	mov	r0, r5
 80082be:	47b8      	blx	r7
 80082c0:	3001      	adds	r0, #1
 80082c2:	f43f ae52 	beq.w	8007f6a <_printf_float+0xc2>
 80082c6:	f108 0801 	add.w	r8, r8, #1
 80082ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80082cc:	3b01      	subs	r3, #1
 80082ce:	4543      	cmp	r3, r8
 80082d0:	dcf1      	bgt.n	80082b6 <_printf_float+0x40e>
 80082d2:	464b      	mov	r3, r9
 80082d4:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80082d8:	e6dc      	b.n	8008094 <_printf_float+0x1ec>
 80082da:	f04f 0800 	mov.w	r8, #0
 80082de:	f104 0a1a 	add.w	sl, r4, #26
 80082e2:	e7f2      	b.n	80082ca <_printf_float+0x422>
 80082e4:	2301      	movs	r3, #1
 80082e6:	4642      	mov	r2, r8
 80082e8:	e7df      	b.n	80082aa <_printf_float+0x402>
 80082ea:	2301      	movs	r3, #1
 80082ec:	464a      	mov	r2, r9
 80082ee:	4631      	mov	r1, r6
 80082f0:	4628      	mov	r0, r5
 80082f2:	47b8      	blx	r7
 80082f4:	3001      	adds	r0, #1
 80082f6:	f43f ae38 	beq.w	8007f6a <_printf_float+0xc2>
 80082fa:	f108 0801 	add.w	r8, r8, #1
 80082fe:	68e3      	ldr	r3, [r4, #12]
 8008300:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008302:	1a5b      	subs	r3, r3, r1
 8008304:	4543      	cmp	r3, r8
 8008306:	dcf0      	bgt.n	80082ea <_printf_float+0x442>
 8008308:	e6fa      	b.n	8008100 <_printf_float+0x258>
 800830a:	f04f 0800 	mov.w	r8, #0
 800830e:	f104 0919 	add.w	r9, r4, #25
 8008312:	e7f4      	b.n	80082fe <_printf_float+0x456>

08008314 <_printf_common>:
 8008314:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008318:	4616      	mov	r6, r2
 800831a:	4699      	mov	r9, r3
 800831c:	688a      	ldr	r2, [r1, #8]
 800831e:	690b      	ldr	r3, [r1, #16]
 8008320:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8008324:	4293      	cmp	r3, r2
 8008326:	bfb8      	it	lt
 8008328:	4613      	movlt	r3, r2
 800832a:	6033      	str	r3, [r6, #0]
 800832c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8008330:	4607      	mov	r7, r0
 8008332:	460c      	mov	r4, r1
 8008334:	b10a      	cbz	r2, 800833a <_printf_common+0x26>
 8008336:	3301      	adds	r3, #1
 8008338:	6033      	str	r3, [r6, #0]
 800833a:	6823      	ldr	r3, [r4, #0]
 800833c:	0699      	lsls	r1, r3, #26
 800833e:	bf42      	ittt	mi
 8008340:	6833      	ldrmi	r3, [r6, #0]
 8008342:	3302      	addmi	r3, #2
 8008344:	6033      	strmi	r3, [r6, #0]
 8008346:	6825      	ldr	r5, [r4, #0]
 8008348:	f015 0506 	ands.w	r5, r5, #6
 800834c:	d106      	bne.n	800835c <_printf_common+0x48>
 800834e:	f104 0a19 	add.w	sl, r4, #25
 8008352:	68e3      	ldr	r3, [r4, #12]
 8008354:	6832      	ldr	r2, [r6, #0]
 8008356:	1a9b      	subs	r3, r3, r2
 8008358:	42ab      	cmp	r3, r5
 800835a:	dc26      	bgt.n	80083aa <_printf_common+0x96>
 800835c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8008360:	1e13      	subs	r3, r2, #0
 8008362:	6822      	ldr	r2, [r4, #0]
 8008364:	bf18      	it	ne
 8008366:	2301      	movne	r3, #1
 8008368:	0692      	lsls	r2, r2, #26
 800836a:	d42b      	bmi.n	80083c4 <_printf_common+0xb0>
 800836c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8008370:	4649      	mov	r1, r9
 8008372:	4638      	mov	r0, r7
 8008374:	47c0      	blx	r8
 8008376:	3001      	adds	r0, #1
 8008378:	d01e      	beq.n	80083b8 <_printf_common+0xa4>
 800837a:	6823      	ldr	r3, [r4, #0]
 800837c:	68e5      	ldr	r5, [r4, #12]
 800837e:	6832      	ldr	r2, [r6, #0]
 8008380:	f003 0306 	and.w	r3, r3, #6
 8008384:	2b04      	cmp	r3, #4
 8008386:	bf08      	it	eq
 8008388:	1aad      	subeq	r5, r5, r2
 800838a:	68a3      	ldr	r3, [r4, #8]
 800838c:	6922      	ldr	r2, [r4, #16]
 800838e:	bf0c      	ite	eq
 8008390:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8008394:	2500      	movne	r5, #0
 8008396:	4293      	cmp	r3, r2
 8008398:	bfc4      	itt	gt
 800839a:	1a9b      	subgt	r3, r3, r2
 800839c:	18ed      	addgt	r5, r5, r3
 800839e:	2600      	movs	r6, #0
 80083a0:	341a      	adds	r4, #26
 80083a2:	42b5      	cmp	r5, r6
 80083a4:	d11a      	bne.n	80083dc <_printf_common+0xc8>
 80083a6:	2000      	movs	r0, #0
 80083a8:	e008      	b.n	80083bc <_printf_common+0xa8>
 80083aa:	2301      	movs	r3, #1
 80083ac:	4652      	mov	r2, sl
 80083ae:	4649      	mov	r1, r9
 80083b0:	4638      	mov	r0, r7
 80083b2:	47c0      	blx	r8
 80083b4:	3001      	adds	r0, #1
 80083b6:	d103      	bne.n	80083c0 <_printf_common+0xac>
 80083b8:	f04f 30ff 	mov.w	r0, #4294967295
 80083bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80083c0:	3501      	adds	r5, #1
 80083c2:	e7c6      	b.n	8008352 <_printf_common+0x3e>
 80083c4:	18e1      	adds	r1, r4, r3
 80083c6:	1c5a      	adds	r2, r3, #1
 80083c8:	2030      	movs	r0, #48	; 0x30
 80083ca:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80083ce:	4422      	add	r2, r4
 80083d0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80083d4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80083d8:	3302      	adds	r3, #2
 80083da:	e7c7      	b.n	800836c <_printf_common+0x58>
 80083dc:	2301      	movs	r3, #1
 80083de:	4622      	mov	r2, r4
 80083e0:	4649      	mov	r1, r9
 80083e2:	4638      	mov	r0, r7
 80083e4:	47c0      	blx	r8
 80083e6:	3001      	adds	r0, #1
 80083e8:	d0e6      	beq.n	80083b8 <_printf_common+0xa4>
 80083ea:	3601      	adds	r6, #1
 80083ec:	e7d9      	b.n	80083a2 <_printf_common+0x8e>
	...

080083f0 <_printf_i>:
 80083f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80083f4:	7e0f      	ldrb	r7, [r1, #24]
 80083f6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80083f8:	2f78      	cmp	r7, #120	; 0x78
 80083fa:	4691      	mov	r9, r2
 80083fc:	4680      	mov	r8, r0
 80083fe:	460c      	mov	r4, r1
 8008400:	469a      	mov	sl, r3
 8008402:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8008406:	d807      	bhi.n	8008418 <_printf_i+0x28>
 8008408:	2f62      	cmp	r7, #98	; 0x62
 800840a:	d80a      	bhi.n	8008422 <_printf_i+0x32>
 800840c:	2f00      	cmp	r7, #0
 800840e:	f000 80d8 	beq.w	80085c2 <_printf_i+0x1d2>
 8008412:	2f58      	cmp	r7, #88	; 0x58
 8008414:	f000 80a3 	beq.w	800855e <_printf_i+0x16e>
 8008418:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800841c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8008420:	e03a      	b.n	8008498 <_printf_i+0xa8>
 8008422:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8008426:	2b15      	cmp	r3, #21
 8008428:	d8f6      	bhi.n	8008418 <_printf_i+0x28>
 800842a:	a101      	add	r1, pc, #4	; (adr r1, 8008430 <_printf_i+0x40>)
 800842c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8008430:	08008489 	.word	0x08008489
 8008434:	0800849d 	.word	0x0800849d
 8008438:	08008419 	.word	0x08008419
 800843c:	08008419 	.word	0x08008419
 8008440:	08008419 	.word	0x08008419
 8008444:	08008419 	.word	0x08008419
 8008448:	0800849d 	.word	0x0800849d
 800844c:	08008419 	.word	0x08008419
 8008450:	08008419 	.word	0x08008419
 8008454:	08008419 	.word	0x08008419
 8008458:	08008419 	.word	0x08008419
 800845c:	080085a9 	.word	0x080085a9
 8008460:	080084cd 	.word	0x080084cd
 8008464:	0800858b 	.word	0x0800858b
 8008468:	08008419 	.word	0x08008419
 800846c:	08008419 	.word	0x08008419
 8008470:	080085cb 	.word	0x080085cb
 8008474:	08008419 	.word	0x08008419
 8008478:	080084cd 	.word	0x080084cd
 800847c:	08008419 	.word	0x08008419
 8008480:	08008419 	.word	0x08008419
 8008484:	08008593 	.word	0x08008593
 8008488:	682b      	ldr	r3, [r5, #0]
 800848a:	1d1a      	adds	r2, r3, #4
 800848c:	681b      	ldr	r3, [r3, #0]
 800848e:	602a      	str	r2, [r5, #0]
 8008490:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8008494:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8008498:	2301      	movs	r3, #1
 800849a:	e0a3      	b.n	80085e4 <_printf_i+0x1f4>
 800849c:	6820      	ldr	r0, [r4, #0]
 800849e:	6829      	ldr	r1, [r5, #0]
 80084a0:	0606      	lsls	r6, r0, #24
 80084a2:	f101 0304 	add.w	r3, r1, #4
 80084a6:	d50a      	bpl.n	80084be <_printf_i+0xce>
 80084a8:	680e      	ldr	r6, [r1, #0]
 80084aa:	602b      	str	r3, [r5, #0]
 80084ac:	2e00      	cmp	r6, #0
 80084ae:	da03      	bge.n	80084b8 <_printf_i+0xc8>
 80084b0:	232d      	movs	r3, #45	; 0x2d
 80084b2:	4276      	negs	r6, r6
 80084b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80084b8:	485e      	ldr	r0, [pc, #376]	; (8008634 <_printf_i+0x244>)
 80084ba:	230a      	movs	r3, #10
 80084bc:	e019      	b.n	80084f2 <_printf_i+0x102>
 80084be:	680e      	ldr	r6, [r1, #0]
 80084c0:	602b      	str	r3, [r5, #0]
 80084c2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80084c6:	bf18      	it	ne
 80084c8:	b236      	sxthne	r6, r6
 80084ca:	e7ef      	b.n	80084ac <_printf_i+0xbc>
 80084cc:	682b      	ldr	r3, [r5, #0]
 80084ce:	6820      	ldr	r0, [r4, #0]
 80084d0:	1d19      	adds	r1, r3, #4
 80084d2:	6029      	str	r1, [r5, #0]
 80084d4:	0601      	lsls	r1, r0, #24
 80084d6:	d501      	bpl.n	80084dc <_printf_i+0xec>
 80084d8:	681e      	ldr	r6, [r3, #0]
 80084da:	e002      	b.n	80084e2 <_printf_i+0xf2>
 80084dc:	0646      	lsls	r6, r0, #25
 80084de:	d5fb      	bpl.n	80084d8 <_printf_i+0xe8>
 80084e0:	881e      	ldrh	r6, [r3, #0]
 80084e2:	4854      	ldr	r0, [pc, #336]	; (8008634 <_printf_i+0x244>)
 80084e4:	2f6f      	cmp	r7, #111	; 0x6f
 80084e6:	bf0c      	ite	eq
 80084e8:	2308      	moveq	r3, #8
 80084ea:	230a      	movne	r3, #10
 80084ec:	2100      	movs	r1, #0
 80084ee:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80084f2:	6865      	ldr	r5, [r4, #4]
 80084f4:	60a5      	str	r5, [r4, #8]
 80084f6:	2d00      	cmp	r5, #0
 80084f8:	bfa2      	ittt	ge
 80084fa:	6821      	ldrge	r1, [r4, #0]
 80084fc:	f021 0104 	bicge.w	r1, r1, #4
 8008500:	6021      	strge	r1, [r4, #0]
 8008502:	b90e      	cbnz	r6, 8008508 <_printf_i+0x118>
 8008504:	2d00      	cmp	r5, #0
 8008506:	d04d      	beq.n	80085a4 <_printf_i+0x1b4>
 8008508:	4615      	mov	r5, r2
 800850a:	fbb6 f1f3 	udiv	r1, r6, r3
 800850e:	fb03 6711 	mls	r7, r3, r1, r6
 8008512:	5dc7      	ldrb	r7, [r0, r7]
 8008514:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8008518:	4637      	mov	r7, r6
 800851a:	42bb      	cmp	r3, r7
 800851c:	460e      	mov	r6, r1
 800851e:	d9f4      	bls.n	800850a <_printf_i+0x11a>
 8008520:	2b08      	cmp	r3, #8
 8008522:	d10b      	bne.n	800853c <_printf_i+0x14c>
 8008524:	6823      	ldr	r3, [r4, #0]
 8008526:	07de      	lsls	r6, r3, #31
 8008528:	d508      	bpl.n	800853c <_printf_i+0x14c>
 800852a:	6923      	ldr	r3, [r4, #16]
 800852c:	6861      	ldr	r1, [r4, #4]
 800852e:	4299      	cmp	r1, r3
 8008530:	bfde      	ittt	le
 8008532:	2330      	movle	r3, #48	; 0x30
 8008534:	f805 3c01 	strble.w	r3, [r5, #-1]
 8008538:	f105 35ff 	addle.w	r5, r5, #4294967295
 800853c:	1b52      	subs	r2, r2, r5
 800853e:	6122      	str	r2, [r4, #16]
 8008540:	f8cd a000 	str.w	sl, [sp]
 8008544:	464b      	mov	r3, r9
 8008546:	aa03      	add	r2, sp, #12
 8008548:	4621      	mov	r1, r4
 800854a:	4640      	mov	r0, r8
 800854c:	f7ff fee2 	bl	8008314 <_printf_common>
 8008550:	3001      	adds	r0, #1
 8008552:	d14c      	bne.n	80085ee <_printf_i+0x1fe>
 8008554:	f04f 30ff 	mov.w	r0, #4294967295
 8008558:	b004      	add	sp, #16
 800855a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800855e:	4835      	ldr	r0, [pc, #212]	; (8008634 <_printf_i+0x244>)
 8008560:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8008564:	6829      	ldr	r1, [r5, #0]
 8008566:	6823      	ldr	r3, [r4, #0]
 8008568:	f851 6b04 	ldr.w	r6, [r1], #4
 800856c:	6029      	str	r1, [r5, #0]
 800856e:	061d      	lsls	r5, r3, #24
 8008570:	d514      	bpl.n	800859c <_printf_i+0x1ac>
 8008572:	07df      	lsls	r7, r3, #31
 8008574:	bf44      	itt	mi
 8008576:	f043 0320 	orrmi.w	r3, r3, #32
 800857a:	6023      	strmi	r3, [r4, #0]
 800857c:	b91e      	cbnz	r6, 8008586 <_printf_i+0x196>
 800857e:	6823      	ldr	r3, [r4, #0]
 8008580:	f023 0320 	bic.w	r3, r3, #32
 8008584:	6023      	str	r3, [r4, #0]
 8008586:	2310      	movs	r3, #16
 8008588:	e7b0      	b.n	80084ec <_printf_i+0xfc>
 800858a:	6823      	ldr	r3, [r4, #0]
 800858c:	f043 0320 	orr.w	r3, r3, #32
 8008590:	6023      	str	r3, [r4, #0]
 8008592:	2378      	movs	r3, #120	; 0x78
 8008594:	4828      	ldr	r0, [pc, #160]	; (8008638 <_printf_i+0x248>)
 8008596:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800859a:	e7e3      	b.n	8008564 <_printf_i+0x174>
 800859c:	0659      	lsls	r1, r3, #25
 800859e:	bf48      	it	mi
 80085a0:	b2b6      	uxthmi	r6, r6
 80085a2:	e7e6      	b.n	8008572 <_printf_i+0x182>
 80085a4:	4615      	mov	r5, r2
 80085a6:	e7bb      	b.n	8008520 <_printf_i+0x130>
 80085a8:	682b      	ldr	r3, [r5, #0]
 80085aa:	6826      	ldr	r6, [r4, #0]
 80085ac:	6961      	ldr	r1, [r4, #20]
 80085ae:	1d18      	adds	r0, r3, #4
 80085b0:	6028      	str	r0, [r5, #0]
 80085b2:	0635      	lsls	r5, r6, #24
 80085b4:	681b      	ldr	r3, [r3, #0]
 80085b6:	d501      	bpl.n	80085bc <_printf_i+0x1cc>
 80085b8:	6019      	str	r1, [r3, #0]
 80085ba:	e002      	b.n	80085c2 <_printf_i+0x1d2>
 80085bc:	0670      	lsls	r0, r6, #25
 80085be:	d5fb      	bpl.n	80085b8 <_printf_i+0x1c8>
 80085c0:	8019      	strh	r1, [r3, #0]
 80085c2:	2300      	movs	r3, #0
 80085c4:	6123      	str	r3, [r4, #16]
 80085c6:	4615      	mov	r5, r2
 80085c8:	e7ba      	b.n	8008540 <_printf_i+0x150>
 80085ca:	682b      	ldr	r3, [r5, #0]
 80085cc:	1d1a      	adds	r2, r3, #4
 80085ce:	602a      	str	r2, [r5, #0]
 80085d0:	681d      	ldr	r5, [r3, #0]
 80085d2:	6862      	ldr	r2, [r4, #4]
 80085d4:	2100      	movs	r1, #0
 80085d6:	4628      	mov	r0, r5
 80085d8:	f7f7 fe02 	bl	80001e0 <memchr>
 80085dc:	b108      	cbz	r0, 80085e2 <_printf_i+0x1f2>
 80085de:	1b40      	subs	r0, r0, r5
 80085e0:	6060      	str	r0, [r4, #4]
 80085e2:	6863      	ldr	r3, [r4, #4]
 80085e4:	6123      	str	r3, [r4, #16]
 80085e6:	2300      	movs	r3, #0
 80085e8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80085ec:	e7a8      	b.n	8008540 <_printf_i+0x150>
 80085ee:	6923      	ldr	r3, [r4, #16]
 80085f0:	462a      	mov	r2, r5
 80085f2:	4649      	mov	r1, r9
 80085f4:	4640      	mov	r0, r8
 80085f6:	47d0      	blx	sl
 80085f8:	3001      	adds	r0, #1
 80085fa:	d0ab      	beq.n	8008554 <_printf_i+0x164>
 80085fc:	6823      	ldr	r3, [r4, #0]
 80085fe:	079b      	lsls	r3, r3, #30
 8008600:	d413      	bmi.n	800862a <_printf_i+0x23a>
 8008602:	68e0      	ldr	r0, [r4, #12]
 8008604:	9b03      	ldr	r3, [sp, #12]
 8008606:	4298      	cmp	r0, r3
 8008608:	bfb8      	it	lt
 800860a:	4618      	movlt	r0, r3
 800860c:	e7a4      	b.n	8008558 <_printf_i+0x168>
 800860e:	2301      	movs	r3, #1
 8008610:	4632      	mov	r2, r6
 8008612:	4649      	mov	r1, r9
 8008614:	4640      	mov	r0, r8
 8008616:	47d0      	blx	sl
 8008618:	3001      	adds	r0, #1
 800861a:	d09b      	beq.n	8008554 <_printf_i+0x164>
 800861c:	3501      	adds	r5, #1
 800861e:	68e3      	ldr	r3, [r4, #12]
 8008620:	9903      	ldr	r1, [sp, #12]
 8008622:	1a5b      	subs	r3, r3, r1
 8008624:	42ab      	cmp	r3, r5
 8008626:	dcf2      	bgt.n	800860e <_printf_i+0x21e>
 8008628:	e7eb      	b.n	8008602 <_printf_i+0x212>
 800862a:	2500      	movs	r5, #0
 800862c:	f104 0619 	add.w	r6, r4, #25
 8008630:	e7f5      	b.n	800861e <_printf_i+0x22e>
 8008632:	bf00      	nop
 8008634:	0800caae 	.word	0x0800caae
 8008638:	0800cabf 	.word	0x0800cabf

0800863c <_scanf_float>:
 800863c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008640:	b087      	sub	sp, #28
 8008642:	4617      	mov	r7, r2
 8008644:	9303      	str	r3, [sp, #12]
 8008646:	688b      	ldr	r3, [r1, #8]
 8008648:	1e5a      	subs	r2, r3, #1
 800864a:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800864e:	bf83      	ittte	hi
 8008650:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8008654:	195b      	addhi	r3, r3, r5
 8008656:	9302      	strhi	r3, [sp, #8]
 8008658:	2300      	movls	r3, #0
 800865a:	bf86      	itte	hi
 800865c:	f240 135d 	movwhi	r3, #349	; 0x15d
 8008660:	608b      	strhi	r3, [r1, #8]
 8008662:	9302      	strls	r3, [sp, #8]
 8008664:	680b      	ldr	r3, [r1, #0]
 8008666:	468b      	mov	fp, r1
 8008668:	2500      	movs	r5, #0
 800866a:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800866e:	f84b 3b1c 	str.w	r3, [fp], #28
 8008672:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8008676:	4680      	mov	r8, r0
 8008678:	460c      	mov	r4, r1
 800867a:	465e      	mov	r6, fp
 800867c:	46aa      	mov	sl, r5
 800867e:	46a9      	mov	r9, r5
 8008680:	9501      	str	r5, [sp, #4]
 8008682:	68a2      	ldr	r2, [r4, #8]
 8008684:	b152      	cbz	r2, 800869c <_scanf_float+0x60>
 8008686:	683b      	ldr	r3, [r7, #0]
 8008688:	781b      	ldrb	r3, [r3, #0]
 800868a:	2b4e      	cmp	r3, #78	; 0x4e
 800868c:	d864      	bhi.n	8008758 <_scanf_float+0x11c>
 800868e:	2b40      	cmp	r3, #64	; 0x40
 8008690:	d83c      	bhi.n	800870c <_scanf_float+0xd0>
 8008692:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8008696:	b2c8      	uxtb	r0, r1
 8008698:	280e      	cmp	r0, #14
 800869a:	d93a      	bls.n	8008712 <_scanf_float+0xd6>
 800869c:	f1b9 0f00 	cmp.w	r9, #0
 80086a0:	d003      	beq.n	80086aa <_scanf_float+0x6e>
 80086a2:	6823      	ldr	r3, [r4, #0]
 80086a4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80086a8:	6023      	str	r3, [r4, #0]
 80086aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80086ae:	f1ba 0f01 	cmp.w	sl, #1
 80086b2:	f200 8113 	bhi.w	80088dc <_scanf_float+0x2a0>
 80086b6:	455e      	cmp	r6, fp
 80086b8:	f200 8105 	bhi.w	80088c6 <_scanf_float+0x28a>
 80086bc:	2501      	movs	r5, #1
 80086be:	4628      	mov	r0, r5
 80086c0:	b007      	add	sp, #28
 80086c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80086c6:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 80086ca:	2a0d      	cmp	r2, #13
 80086cc:	d8e6      	bhi.n	800869c <_scanf_float+0x60>
 80086ce:	a101      	add	r1, pc, #4	; (adr r1, 80086d4 <_scanf_float+0x98>)
 80086d0:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80086d4:	08008813 	.word	0x08008813
 80086d8:	0800869d 	.word	0x0800869d
 80086dc:	0800869d 	.word	0x0800869d
 80086e0:	0800869d 	.word	0x0800869d
 80086e4:	08008873 	.word	0x08008873
 80086e8:	0800884b 	.word	0x0800884b
 80086ec:	0800869d 	.word	0x0800869d
 80086f0:	0800869d 	.word	0x0800869d
 80086f4:	08008821 	.word	0x08008821
 80086f8:	0800869d 	.word	0x0800869d
 80086fc:	0800869d 	.word	0x0800869d
 8008700:	0800869d 	.word	0x0800869d
 8008704:	0800869d 	.word	0x0800869d
 8008708:	080087d9 	.word	0x080087d9
 800870c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8008710:	e7db      	b.n	80086ca <_scanf_float+0x8e>
 8008712:	290e      	cmp	r1, #14
 8008714:	d8c2      	bhi.n	800869c <_scanf_float+0x60>
 8008716:	a001      	add	r0, pc, #4	; (adr r0, 800871c <_scanf_float+0xe0>)
 8008718:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800871c:	080087cb 	.word	0x080087cb
 8008720:	0800869d 	.word	0x0800869d
 8008724:	080087cb 	.word	0x080087cb
 8008728:	0800885f 	.word	0x0800885f
 800872c:	0800869d 	.word	0x0800869d
 8008730:	08008779 	.word	0x08008779
 8008734:	080087b5 	.word	0x080087b5
 8008738:	080087b5 	.word	0x080087b5
 800873c:	080087b5 	.word	0x080087b5
 8008740:	080087b5 	.word	0x080087b5
 8008744:	080087b5 	.word	0x080087b5
 8008748:	080087b5 	.word	0x080087b5
 800874c:	080087b5 	.word	0x080087b5
 8008750:	080087b5 	.word	0x080087b5
 8008754:	080087b5 	.word	0x080087b5
 8008758:	2b6e      	cmp	r3, #110	; 0x6e
 800875a:	d809      	bhi.n	8008770 <_scanf_float+0x134>
 800875c:	2b60      	cmp	r3, #96	; 0x60
 800875e:	d8b2      	bhi.n	80086c6 <_scanf_float+0x8a>
 8008760:	2b54      	cmp	r3, #84	; 0x54
 8008762:	d077      	beq.n	8008854 <_scanf_float+0x218>
 8008764:	2b59      	cmp	r3, #89	; 0x59
 8008766:	d199      	bne.n	800869c <_scanf_float+0x60>
 8008768:	2d07      	cmp	r5, #7
 800876a:	d197      	bne.n	800869c <_scanf_float+0x60>
 800876c:	2508      	movs	r5, #8
 800876e:	e029      	b.n	80087c4 <_scanf_float+0x188>
 8008770:	2b74      	cmp	r3, #116	; 0x74
 8008772:	d06f      	beq.n	8008854 <_scanf_float+0x218>
 8008774:	2b79      	cmp	r3, #121	; 0x79
 8008776:	e7f6      	b.n	8008766 <_scanf_float+0x12a>
 8008778:	6821      	ldr	r1, [r4, #0]
 800877a:	05c8      	lsls	r0, r1, #23
 800877c:	d51a      	bpl.n	80087b4 <_scanf_float+0x178>
 800877e:	9b02      	ldr	r3, [sp, #8]
 8008780:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8008784:	6021      	str	r1, [r4, #0]
 8008786:	f109 0901 	add.w	r9, r9, #1
 800878a:	b11b      	cbz	r3, 8008794 <_scanf_float+0x158>
 800878c:	3b01      	subs	r3, #1
 800878e:	3201      	adds	r2, #1
 8008790:	9302      	str	r3, [sp, #8]
 8008792:	60a2      	str	r2, [r4, #8]
 8008794:	68a3      	ldr	r3, [r4, #8]
 8008796:	3b01      	subs	r3, #1
 8008798:	60a3      	str	r3, [r4, #8]
 800879a:	6923      	ldr	r3, [r4, #16]
 800879c:	3301      	adds	r3, #1
 800879e:	6123      	str	r3, [r4, #16]
 80087a0:	687b      	ldr	r3, [r7, #4]
 80087a2:	3b01      	subs	r3, #1
 80087a4:	2b00      	cmp	r3, #0
 80087a6:	607b      	str	r3, [r7, #4]
 80087a8:	f340 8084 	ble.w	80088b4 <_scanf_float+0x278>
 80087ac:	683b      	ldr	r3, [r7, #0]
 80087ae:	3301      	adds	r3, #1
 80087b0:	603b      	str	r3, [r7, #0]
 80087b2:	e766      	b.n	8008682 <_scanf_float+0x46>
 80087b4:	eb1a 0f05 	cmn.w	sl, r5
 80087b8:	f47f af70 	bne.w	800869c <_scanf_float+0x60>
 80087bc:	6822      	ldr	r2, [r4, #0]
 80087be:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 80087c2:	6022      	str	r2, [r4, #0]
 80087c4:	f806 3b01 	strb.w	r3, [r6], #1
 80087c8:	e7e4      	b.n	8008794 <_scanf_float+0x158>
 80087ca:	6822      	ldr	r2, [r4, #0]
 80087cc:	0610      	lsls	r0, r2, #24
 80087ce:	f57f af65 	bpl.w	800869c <_scanf_float+0x60>
 80087d2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80087d6:	e7f4      	b.n	80087c2 <_scanf_float+0x186>
 80087d8:	f1ba 0f00 	cmp.w	sl, #0
 80087dc:	d10e      	bne.n	80087fc <_scanf_float+0x1c0>
 80087de:	f1b9 0f00 	cmp.w	r9, #0
 80087e2:	d10e      	bne.n	8008802 <_scanf_float+0x1c6>
 80087e4:	6822      	ldr	r2, [r4, #0]
 80087e6:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80087ea:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80087ee:	d108      	bne.n	8008802 <_scanf_float+0x1c6>
 80087f0:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80087f4:	6022      	str	r2, [r4, #0]
 80087f6:	f04f 0a01 	mov.w	sl, #1
 80087fa:	e7e3      	b.n	80087c4 <_scanf_float+0x188>
 80087fc:	f1ba 0f02 	cmp.w	sl, #2
 8008800:	d055      	beq.n	80088ae <_scanf_float+0x272>
 8008802:	2d01      	cmp	r5, #1
 8008804:	d002      	beq.n	800880c <_scanf_float+0x1d0>
 8008806:	2d04      	cmp	r5, #4
 8008808:	f47f af48 	bne.w	800869c <_scanf_float+0x60>
 800880c:	3501      	adds	r5, #1
 800880e:	b2ed      	uxtb	r5, r5
 8008810:	e7d8      	b.n	80087c4 <_scanf_float+0x188>
 8008812:	f1ba 0f01 	cmp.w	sl, #1
 8008816:	f47f af41 	bne.w	800869c <_scanf_float+0x60>
 800881a:	f04f 0a02 	mov.w	sl, #2
 800881e:	e7d1      	b.n	80087c4 <_scanf_float+0x188>
 8008820:	b97d      	cbnz	r5, 8008842 <_scanf_float+0x206>
 8008822:	f1b9 0f00 	cmp.w	r9, #0
 8008826:	f47f af3c 	bne.w	80086a2 <_scanf_float+0x66>
 800882a:	6822      	ldr	r2, [r4, #0]
 800882c:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8008830:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8008834:	f47f af39 	bne.w	80086aa <_scanf_float+0x6e>
 8008838:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800883c:	6022      	str	r2, [r4, #0]
 800883e:	2501      	movs	r5, #1
 8008840:	e7c0      	b.n	80087c4 <_scanf_float+0x188>
 8008842:	2d03      	cmp	r5, #3
 8008844:	d0e2      	beq.n	800880c <_scanf_float+0x1d0>
 8008846:	2d05      	cmp	r5, #5
 8008848:	e7de      	b.n	8008808 <_scanf_float+0x1cc>
 800884a:	2d02      	cmp	r5, #2
 800884c:	f47f af26 	bne.w	800869c <_scanf_float+0x60>
 8008850:	2503      	movs	r5, #3
 8008852:	e7b7      	b.n	80087c4 <_scanf_float+0x188>
 8008854:	2d06      	cmp	r5, #6
 8008856:	f47f af21 	bne.w	800869c <_scanf_float+0x60>
 800885a:	2507      	movs	r5, #7
 800885c:	e7b2      	b.n	80087c4 <_scanf_float+0x188>
 800885e:	6822      	ldr	r2, [r4, #0]
 8008860:	0591      	lsls	r1, r2, #22
 8008862:	f57f af1b 	bpl.w	800869c <_scanf_float+0x60>
 8008866:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800886a:	6022      	str	r2, [r4, #0]
 800886c:	f8cd 9004 	str.w	r9, [sp, #4]
 8008870:	e7a8      	b.n	80087c4 <_scanf_float+0x188>
 8008872:	6822      	ldr	r2, [r4, #0]
 8008874:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8008878:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 800887c:	d006      	beq.n	800888c <_scanf_float+0x250>
 800887e:	0550      	lsls	r0, r2, #21
 8008880:	f57f af0c 	bpl.w	800869c <_scanf_float+0x60>
 8008884:	f1b9 0f00 	cmp.w	r9, #0
 8008888:	f43f af0f 	beq.w	80086aa <_scanf_float+0x6e>
 800888c:	0591      	lsls	r1, r2, #22
 800888e:	bf58      	it	pl
 8008890:	9901      	ldrpl	r1, [sp, #4]
 8008892:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8008896:	bf58      	it	pl
 8008898:	eba9 0101 	subpl.w	r1, r9, r1
 800889c:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 80088a0:	bf58      	it	pl
 80088a2:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 80088a6:	6022      	str	r2, [r4, #0]
 80088a8:	f04f 0900 	mov.w	r9, #0
 80088ac:	e78a      	b.n	80087c4 <_scanf_float+0x188>
 80088ae:	f04f 0a03 	mov.w	sl, #3
 80088b2:	e787      	b.n	80087c4 <_scanf_float+0x188>
 80088b4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80088b8:	4639      	mov	r1, r7
 80088ba:	4640      	mov	r0, r8
 80088bc:	4798      	blx	r3
 80088be:	2800      	cmp	r0, #0
 80088c0:	f43f aedf 	beq.w	8008682 <_scanf_float+0x46>
 80088c4:	e6ea      	b.n	800869c <_scanf_float+0x60>
 80088c6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80088ca:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80088ce:	463a      	mov	r2, r7
 80088d0:	4640      	mov	r0, r8
 80088d2:	4798      	blx	r3
 80088d4:	6923      	ldr	r3, [r4, #16]
 80088d6:	3b01      	subs	r3, #1
 80088d8:	6123      	str	r3, [r4, #16]
 80088da:	e6ec      	b.n	80086b6 <_scanf_float+0x7a>
 80088dc:	1e6b      	subs	r3, r5, #1
 80088de:	2b06      	cmp	r3, #6
 80088e0:	d825      	bhi.n	800892e <_scanf_float+0x2f2>
 80088e2:	2d02      	cmp	r5, #2
 80088e4:	d836      	bhi.n	8008954 <_scanf_float+0x318>
 80088e6:	455e      	cmp	r6, fp
 80088e8:	f67f aee8 	bls.w	80086bc <_scanf_float+0x80>
 80088ec:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80088f0:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80088f4:	463a      	mov	r2, r7
 80088f6:	4640      	mov	r0, r8
 80088f8:	4798      	blx	r3
 80088fa:	6923      	ldr	r3, [r4, #16]
 80088fc:	3b01      	subs	r3, #1
 80088fe:	6123      	str	r3, [r4, #16]
 8008900:	e7f1      	b.n	80088e6 <_scanf_float+0x2aa>
 8008902:	9802      	ldr	r0, [sp, #8]
 8008904:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8008908:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800890c:	9002      	str	r0, [sp, #8]
 800890e:	463a      	mov	r2, r7
 8008910:	4640      	mov	r0, r8
 8008912:	4798      	blx	r3
 8008914:	6923      	ldr	r3, [r4, #16]
 8008916:	3b01      	subs	r3, #1
 8008918:	6123      	str	r3, [r4, #16]
 800891a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800891e:	fa5f fa8a 	uxtb.w	sl, sl
 8008922:	f1ba 0f02 	cmp.w	sl, #2
 8008926:	d1ec      	bne.n	8008902 <_scanf_float+0x2c6>
 8008928:	3d03      	subs	r5, #3
 800892a:	b2ed      	uxtb	r5, r5
 800892c:	1b76      	subs	r6, r6, r5
 800892e:	6823      	ldr	r3, [r4, #0]
 8008930:	05da      	lsls	r2, r3, #23
 8008932:	d52f      	bpl.n	8008994 <_scanf_float+0x358>
 8008934:	055b      	lsls	r3, r3, #21
 8008936:	d510      	bpl.n	800895a <_scanf_float+0x31e>
 8008938:	455e      	cmp	r6, fp
 800893a:	f67f aebf 	bls.w	80086bc <_scanf_float+0x80>
 800893e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8008942:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8008946:	463a      	mov	r2, r7
 8008948:	4640      	mov	r0, r8
 800894a:	4798      	blx	r3
 800894c:	6923      	ldr	r3, [r4, #16]
 800894e:	3b01      	subs	r3, #1
 8008950:	6123      	str	r3, [r4, #16]
 8008952:	e7f1      	b.n	8008938 <_scanf_float+0x2fc>
 8008954:	46aa      	mov	sl, r5
 8008956:	9602      	str	r6, [sp, #8]
 8008958:	e7df      	b.n	800891a <_scanf_float+0x2de>
 800895a:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800895e:	6923      	ldr	r3, [r4, #16]
 8008960:	2965      	cmp	r1, #101	; 0x65
 8008962:	f103 33ff 	add.w	r3, r3, #4294967295
 8008966:	f106 35ff 	add.w	r5, r6, #4294967295
 800896a:	6123      	str	r3, [r4, #16]
 800896c:	d00c      	beq.n	8008988 <_scanf_float+0x34c>
 800896e:	2945      	cmp	r1, #69	; 0x45
 8008970:	d00a      	beq.n	8008988 <_scanf_float+0x34c>
 8008972:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8008976:	463a      	mov	r2, r7
 8008978:	4640      	mov	r0, r8
 800897a:	4798      	blx	r3
 800897c:	6923      	ldr	r3, [r4, #16]
 800897e:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8008982:	3b01      	subs	r3, #1
 8008984:	1eb5      	subs	r5, r6, #2
 8008986:	6123      	str	r3, [r4, #16]
 8008988:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800898c:	463a      	mov	r2, r7
 800898e:	4640      	mov	r0, r8
 8008990:	4798      	blx	r3
 8008992:	462e      	mov	r6, r5
 8008994:	6825      	ldr	r5, [r4, #0]
 8008996:	f015 0510 	ands.w	r5, r5, #16
 800899a:	d159      	bne.n	8008a50 <_scanf_float+0x414>
 800899c:	7035      	strb	r5, [r6, #0]
 800899e:	6823      	ldr	r3, [r4, #0]
 80089a0:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80089a4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80089a8:	d11b      	bne.n	80089e2 <_scanf_float+0x3a6>
 80089aa:	9b01      	ldr	r3, [sp, #4]
 80089ac:	454b      	cmp	r3, r9
 80089ae:	eba3 0209 	sub.w	r2, r3, r9
 80089b2:	d123      	bne.n	80089fc <_scanf_float+0x3c0>
 80089b4:	2200      	movs	r2, #0
 80089b6:	4659      	mov	r1, fp
 80089b8:	4640      	mov	r0, r8
 80089ba:	f000 fe97 	bl	80096ec <_strtod_r>
 80089be:	6822      	ldr	r2, [r4, #0]
 80089c0:	9b03      	ldr	r3, [sp, #12]
 80089c2:	f012 0f02 	tst.w	r2, #2
 80089c6:	ec57 6b10 	vmov	r6, r7, d0
 80089ca:	681b      	ldr	r3, [r3, #0]
 80089cc:	d021      	beq.n	8008a12 <_scanf_float+0x3d6>
 80089ce:	9903      	ldr	r1, [sp, #12]
 80089d0:	1d1a      	adds	r2, r3, #4
 80089d2:	600a      	str	r2, [r1, #0]
 80089d4:	681b      	ldr	r3, [r3, #0]
 80089d6:	e9c3 6700 	strd	r6, r7, [r3]
 80089da:	68e3      	ldr	r3, [r4, #12]
 80089dc:	3301      	adds	r3, #1
 80089de:	60e3      	str	r3, [r4, #12]
 80089e0:	e66d      	b.n	80086be <_scanf_float+0x82>
 80089e2:	9b04      	ldr	r3, [sp, #16]
 80089e4:	2b00      	cmp	r3, #0
 80089e6:	d0e5      	beq.n	80089b4 <_scanf_float+0x378>
 80089e8:	9905      	ldr	r1, [sp, #20]
 80089ea:	230a      	movs	r3, #10
 80089ec:	462a      	mov	r2, r5
 80089ee:	3101      	adds	r1, #1
 80089f0:	4640      	mov	r0, r8
 80089f2:	f000 ff03 	bl	80097fc <_strtol_r>
 80089f6:	9b04      	ldr	r3, [sp, #16]
 80089f8:	9e05      	ldr	r6, [sp, #20]
 80089fa:	1ac2      	subs	r2, r0, r3
 80089fc:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8008a00:	429e      	cmp	r6, r3
 8008a02:	bf28      	it	cs
 8008a04:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8008a08:	4912      	ldr	r1, [pc, #72]	; (8008a54 <_scanf_float+0x418>)
 8008a0a:	4630      	mov	r0, r6
 8008a0c:	f000 f82c 	bl	8008a68 <siprintf>
 8008a10:	e7d0      	b.n	80089b4 <_scanf_float+0x378>
 8008a12:	9903      	ldr	r1, [sp, #12]
 8008a14:	f012 0f04 	tst.w	r2, #4
 8008a18:	f103 0204 	add.w	r2, r3, #4
 8008a1c:	600a      	str	r2, [r1, #0]
 8008a1e:	d1d9      	bne.n	80089d4 <_scanf_float+0x398>
 8008a20:	f8d3 8000 	ldr.w	r8, [r3]
 8008a24:	ee10 2a10 	vmov	r2, s0
 8008a28:	ee10 0a10 	vmov	r0, s0
 8008a2c:	463b      	mov	r3, r7
 8008a2e:	4639      	mov	r1, r7
 8008a30:	f7f8 f87c 	bl	8000b2c <__aeabi_dcmpun>
 8008a34:	b128      	cbz	r0, 8008a42 <_scanf_float+0x406>
 8008a36:	4808      	ldr	r0, [pc, #32]	; (8008a58 <_scanf_float+0x41c>)
 8008a38:	f000 f810 	bl	8008a5c <nanf>
 8008a3c:	ed88 0a00 	vstr	s0, [r8]
 8008a40:	e7cb      	b.n	80089da <_scanf_float+0x39e>
 8008a42:	4630      	mov	r0, r6
 8008a44:	4639      	mov	r1, r7
 8008a46:	f7f8 f8cf 	bl	8000be8 <__aeabi_d2f>
 8008a4a:	f8c8 0000 	str.w	r0, [r8]
 8008a4e:	e7c4      	b.n	80089da <_scanf_float+0x39e>
 8008a50:	2500      	movs	r5, #0
 8008a52:	e634      	b.n	80086be <_scanf_float+0x82>
 8008a54:	0800cad0 	.word	0x0800cad0
 8008a58:	0800ced8 	.word	0x0800ced8

08008a5c <nanf>:
 8008a5c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8008a64 <nanf+0x8>
 8008a60:	4770      	bx	lr
 8008a62:	bf00      	nop
 8008a64:	7fc00000 	.word	0x7fc00000

08008a68 <siprintf>:
 8008a68:	b40e      	push	{r1, r2, r3}
 8008a6a:	b500      	push	{lr}
 8008a6c:	b09c      	sub	sp, #112	; 0x70
 8008a6e:	ab1d      	add	r3, sp, #116	; 0x74
 8008a70:	9002      	str	r0, [sp, #8]
 8008a72:	9006      	str	r0, [sp, #24]
 8008a74:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8008a78:	4809      	ldr	r0, [pc, #36]	; (8008aa0 <siprintf+0x38>)
 8008a7a:	9107      	str	r1, [sp, #28]
 8008a7c:	9104      	str	r1, [sp, #16]
 8008a7e:	4909      	ldr	r1, [pc, #36]	; (8008aa4 <siprintf+0x3c>)
 8008a80:	f853 2b04 	ldr.w	r2, [r3], #4
 8008a84:	9105      	str	r1, [sp, #20]
 8008a86:	6800      	ldr	r0, [r0, #0]
 8008a88:	9301      	str	r3, [sp, #4]
 8008a8a:	a902      	add	r1, sp, #8
 8008a8c:	f002 fee2 	bl	800b854 <_svfiprintf_r>
 8008a90:	9b02      	ldr	r3, [sp, #8]
 8008a92:	2200      	movs	r2, #0
 8008a94:	701a      	strb	r2, [r3, #0]
 8008a96:	b01c      	add	sp, #112	; 0x70
 8008a98:	f85d eb04 	ldr.w	lr, [sp], #4
 8008a9c:	b003      	add	sp, #12
 8008a9e:	4770      	bx	lr
 8008aa0:	20000018 	.word	0x20000018
 8008aa4:	ffff0208 	.word	0xffff0208

08008aa8 <sulp>:
 8008aa8:	b570      	push	{r4, r5, r6, lr}
 8008aaa:	4604      	mov	r4, r0
 8008aac:	460d      	mov	r5, r1
 8008aae:	ec45 4b10 	vmov	d0, r4, r5
 8008ab2:	4616      	mov	r6, r2
 8008ab4:	f002 fc2c 	bl	800b310 <__ulp>
 8008ab8:	ec51 0b10 	vmov	r0, r1, d0
 8008abc:	b17e      	cbz	r6, 8008ade <sulp+0x36>
 8008abe:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8008ac2:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8008ac6:	2b00      	cmp	r3, #0
 8008ac8:	dd09      	ble.n	8008ade <sulp+0x36>
 8008aca:	051b      	lsls	r3, r3, #20
 8008acc:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8008ad0:	2400      	movs	r4, #0
 8008ad2:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8008ad6:	4622      	mov	r2, r4
 8008ad8:	462b      	mov	r3, r5
 8008ada:	f7f7 fd8d 	bl	80005f8 <__aeabi_dmul>
 8008ade:	bd70      	pop	{r4, r5, r6, pc}

08008ae0 <_strtod_l>:
 8008ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ae4:	ed2d 8b02 	vpush	{d8}
 8008ae8:	b09d      	sub	sp, #116	; 0x74
 8008aea:	461f      	mov	r7, r3
 8008aec:	2300      	movs	r3, #0
 8008aee:	9318      	str	r3, [sp, #96]	; 0x60
 8008af0:	4ba2      	ldr	r3, [pc, #648]	; (8008d7c <_strtod_l+0x29c>)
 8008af2:	9213      	str	r2, [sp, #76]	; 0x4c
 8008af4:	681b      	ldr	r3, [r3, #0]
 8008af6:	9305      	str	r3, [sp, #20]
 8008af8:	4604      	mov	r4, r0
 8008afa:	4618      	mov	r0, r3
 8008afc:	4688      	mov	r8, r1
 8008afe:	f7f7 fb67 	bl	80001d0 <strlen>
 8008b02:	f04f 0a00 	mov.w	sl, #0
 8008b06:	4605      	mov	r5, r0
 8008b08:	f04f 0b00 	mov.w	fp, #0
 8008b0c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8008b10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008b12:	781a      	ldrb	r2, [r3, #0]
 8008b14:	2a2b      	cmp	r2, #43	; 0x2b
 8008b16:	d04e      	beq.n	8008bb6 <_strtod_l+0xd6>
 8008b18:	d83b      	bhi.n	8008b92 <_strtod_l+0xb2>
 8008b1a:	2a0d      	cmp	r2, #13
 8008b1c:	d834      	bhi.n	8008b88 <_strtod_l+0xa8>
 8008b1e:	2a08      	cmp	r2, #8
 8008b20:	d834      	bhi.n	8008b8c <_strtod_l+0xac>
 8008b22:	2a00      	cmp	r2, #0
 8008b24:	d03e      	beq.n	8008ba4 <_strtod_l+0xc4>
 8008b26:	2300      	movs	r3, #0
 8008b28:	930a      	str	r3, [sp, #40]	; 0x28
 8008b2a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8008b2c:	7833      	ldrb	r3, [r6, #0]
 8008b2e:	2b30      	cmp	r3, #48	; 0x30
 8008b30:	f040 80b0 	bne.w	8008c94 <_strtod_l+0x1b4>
 8008b34:	7873      	ldrb	r3, [r6, #1]
 8008b36:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8008b3a:	2b58      	cmp	r3, #88	; 0x58
 8008b3c:	d168      	bne.n	8008c10 <_strtod_l+0x130>
 8008b3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008b40:	9301      	str	r3, [sp, #4]
 8008b42:	ab18      	add	r3, sp, #96	; 0x60
 8008b44:	9702      	str	r7, [sp, #8]
 8008b46:	9300      	str	r3, [sp, #0]
 8008b48:	4a8d      	ldr	r2, [pc, #564]	; (8008d80 <_strtod_l+0x2a0>)
 8008b4a:	ab19      	add	r3, sp, #100	; 0x64
 8008b4c:	a917      	add	r1, sp, #92	; 0x5c
 8008b4e:	4620      	mov	r0, r4
 8008b50:	f001 fd38 	bl	800a5c4 <__gethex>
 8008b54:	f010 0707 	ands.w	r7, r0, #7
 8008b58:	4605      	mov	r5, r0
 8008b5a:	d005      	beq.n	8008b68 <_strtod_l+0x88>
 8008b5c:	2f06      	cmp	r7, #6
 8008b5e:	d12c      	bne.n	8008bba <_strtod_l+0xda>
 8008b60:	3601      	adds	r6, #1
 8008b62:	2300      	movs	r3, #0
 8008b64:	9617      	str	r6, [sp, #92]	; 0x5c
 8008b66:	930a      	str	r3, [sp, #40]	; 0x28
 8008b68:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008b6a:	2b00      	cmp	r3, #0
 8008b6c:	f040 8590 	bne.w	8009690 <_strtod_l+0xbb0>
 8008b70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008b72:	b1eb      	cbz	r3, 8008bb0 <_strtod_l+0xd0>
 8008b74:	4652      	mov	r2, sl
 8008b76:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8008b7a:	ec43 2b10 	vmov	d0, r2, r3
 8008b7e:	b01d      	add	sp, #116	; 0x74
 8008b80:	ecbd 8b02 	vpop	{d8}
 8008b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b88:	2a20      	cmp	r2, #32
 8008b8a:	d1cc      	bne.n	8008b26 <_strtod_l+0x46>
 8008b8c:	3301      	adds	r3, #1
 8008b8e:	9317      	str	r3, [sp, #92]	; 0x5c
 8008b90:	e7be      	b.n	8008b10 <_strtod_l+0x30>
 8008b92:	2a2d      	cmp	r2, #45	; 0x2d
 8008b94:	d1c7      	bne.n	8008b26 <_strtod_l+0x46>
 8008b96:	2201      	movs	r2, #1
 8008b98:	920a      	str	r2, [sp, #40]	; 0x28
 8008b9a:	1c5a      	adds	r2, r3, #1
 8008b9c:	9217      	str	r2, [sp, #92]	; 0x5c
 8008b9e:	785b      	ldrb	r3, [r3, #1]
 8008ba0:	2b00      	cmp	r3, #0
 8008ba2:	d1c2      	bne.n	8008b2a <_strtod_l+0x4a>
 8008ba4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008ba6:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8008baa:	2b00      	cmp	r3, #0
 8008bac:	f040 856e 	bne.w	800968c <_strtod_l+0xbac>
 8008bb0:	4652      	mov	r2, sl
 8008bb2:	465b      	mov	r3, fp
 8008bb4:	e7e1      	b.n	8008b7a <_strtod_l+0x9a>
 8008bb6:	2200      	movs	r2, #0
 8008bb8:	e7ee      	b.n	8008b98 <_strtod_l+0xb8>
 8008bba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008bbc:	b13a      	cbz	r2, 8008bce <_strtod_l+0xee>
 8008bbe:	2135      	movs	r1, #53	; 0x35
 8008bc0:	a81a      	add	r0, sp, #104	; 0x68
 8008bc2:	f002 fcb0 	bl	800b526 <__copybits>
 8008bc6:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008bc8:	4620      	mov	r0, r4
 8008bca:	f002 f86f 	bl	800acac <_Bfree>
 8008bce:	3f01      	subs	r7, #1
 8008bd0:	2f04      	cmp	r7, #4
 8008bd2:	d806      	bhi.n	8008be2 <_strtod_l+0x102>
 8008bd4:	e8df f007 	tbb	[pc, r7]
 8008bd8:	1714030a 	.word	0x1714030a
 8008bdc:	0a          	.byte	0x0a
 8008bdd:	00          	.byte	0x00
 8008bde:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 8008be2:	0728      	lsls	r0, r5, #28
 8008be4:	d5c0      	bpl.n	8008b68 <_strtod_l+0x88>
 8008be6:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 8008bea:	e7bd      	b.n	8008b68 <_strtod_l+0x88>
 8008bec:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 8008bf0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8008bf2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8008bf6:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8008bfa:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8008bfe:	e7f0      	b.n	8008be2 <_strtod_l+0x102>
 8008c00:	f8df b180 	ldr.w	fp, [pc, #384]	; 8008d84 <_strtod_l+0x2a4>
 8008c04:	e7ed      	b.n	8008be2 <_strtod_l+0x102>
 8008c06:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8008c0a:	f04f 3aff 	mov.w	sl, #4294967295
 8008c0e:	e7e8      	b.n	8008be2 <_strtod_l+0x102>
 8008c10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008c12:	1c5a      	adds	r2, r3, #1
 8008c14:	9217      	str	r2, [sp, #92]	; 0x5c
 8008c16:	785b      	ldrb	r3, [r3, #1]
 8008c18:	2b30      	cmp	r3, #48	; 0x30
 8008c1a:	d0f9      	beq.n	8008c10 <_strtod_l+0x130>
 8008c1c:	2b00      	cmp	r3, #0
 8008c1e:	d0a3      	beq.n	8008b68 <_strtod_l+0x88>
 8008c20:	2301      	movs	r3, #1
 8008c22:	f04f 0900 	mov.w	r9, #0
 8008c26:	9304      	str	r3, [sp, #16]
 8008c28:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008c2a:	9308      	str	r3, [sp, #32]
 8008c2c:	f8cd 901c 	str.w	r9, [sp, #28]
 8008c30:	464f      	mov	r7, r9
 8008c32:	220a      	movs	r2, #10
 8008c34:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8008c36:	7806      	ldrb	r6, [r0, #0]
 8008c38:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8008c3c:	b2d9      	uxtb	r1, r3
 8008c3e:	2909      	cmp	r1, #9
 8008c40:	d92a      	bls.n	8008c98 <_strtod_l+0x1b8>
 8008c42:	9905      	ldr	r1, [sp, #20]
 8008c44:	462a      	mov	r2, r5
 8008c46:	f002 ff1f 	bl	800ba88 <strncmp>
 8008c4a:	b398      	cbz	r0, 8008cb4 <_strtod_l+0x1d4>
 8008c4c:	2000      	movs	r0, #0
 8008c4e:	4632      	mov	r2, r6
 8008c50:	463d      	mov	r5, r7
 8008c52:	9005      	str	r0, [sp, #20]
 8008c54:	4603      	mov	r3, r0
 8008c56:	2a65      	cmp	r2, #101	; 0x65
 8008c58:	d001      	beq.n	8008c5e <_strtod_l+0x17e>
 8008c5a:	2a45      	cmp	r2, #69	; 0x45
 8008c5c:	d118      	bne.n	8008c90 <_strtod_l+0x1b0>
 8008c5e:	b91d      	cbnz	r5, 8008c68 <_strtod_l+0x188>
 8008c60:	9a04      	ldr	r2, [sp, #16]
 8008c62:	4302      	orrs	r2, r0
 8008c64:	d09e      	beq.n	8008ba4 <_strtod_l+0xc4>
 8008c66:	2500      	movs	r5, #0
 8008c68:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 8008c6c:	f108 0201 	add.w	r2, r8, #1
 8008c70:	9217      	str	r2, [sp, #92]	; 0x5c
 8008c72:	f898 2001 	ldrb.w	r2, [r8, #1]
 8008c76:	2a2b      	cmp	r2, #43	; 0x2b
 8008c78:	d075      	beq.n	8008d66 <_strtod_l+0x286>
 8008c7a:	2a2d      	cmp	r2, #45	; 0x2d
 8008c7c:	d07b      	beq.n	8008d76 <_strtod_l+0x296>
 8008c7e:	f04f 0c00 	mov.w	ip, #0
 8008c82:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8008c86:	2909      	cmp	r1, #9
 8008c88:	f240 8082 	bls.w	8008d90 <_strtod_l+0x2b0>
 8008c8c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8008c90:	2600      	movs	r6, #0
 8008c92:	e09d      	b.n	8008dd0 <_strtod_l+0x2f0>
 8008c94:	2300      	movs	r3, #0
 8008c96:	e7c4      	b.n	8008c22 <_strtod_l+0x142>
 8008c98:	2f08      	cmp	r7, #8
 8008c9a:	bfd8      	it	le
 8008c9c:	9907      	ldrle	r1, [sp, #28]
 8008c9e:	f100 0001 	add.w	r0, r0, #1
 8008ca2:	bfda      	itte	le
 8008ca4:	fb02 3301 	mlale	r3, r2, r1, r3
 8008ca8:	9307      	strle	r3, [sp, #28]
 8008caa:	fb02 3909 	mlagt	r9, r2, r9, r3
 8008cae:	3701      	adds	r7, #1
 8008cb0:	9017      	str	r0, [sp, #92]	; 0x5c
 8008cb2:	e7bf      	b.n	8008c34 <_strtod_l+0x154>
 8008cb4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008cb6:	195a      	adds	r2, r3, r5
 8008cb8:	9217      	str	r2, [sp, #92]	; 0x5c
 8008cba:	5d5a      	ldrb	r2, [r3, r5]
 8008cbc:	2f00      	cmp	r7, #0
 8008cbe:	d037      	beq.n	8008d30 <_strtod_l+0x250>
 8008cc0:	9005      	str	r0, [sp, #20]
 8008cc2:	463d      	mov	r5, r7
 8008cc4:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8008cc8:	2b09      	cmp	r3, #9
 8008cca:	d912      	bls.n	8008cf2 <_strtod_l+0x212>
 8008ccc:	2301      	movs	r3, #1
 8008cce:	e7c2      	b.n	8008c56 <_strtod_l+0x176>
 8008cd0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008cd2:	1c5a      	adds	r2, r3, #1
 8008cd4:	9217      	str	r2, [sp, #92]	; 0x5c
 8008cd6:	785a      	ldrb	r2, [r3, #1]
 8008cd8:	3001      	adds	r0, #1
 8008cda:	2a30      	cmp	r2, #48	; 0x30
 8008cdc:	d0f8      	beq.n	8008cd0 <_strtod_l+0x1f0>
 8008cde:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8008ce2:	2b08      	cmp	r3, #8
 8008ce4:	f200 84d9 	bhi.w	800969a <_strtod_l+0xbba>
 8008ce8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008cea:	9005      	str	r0, [sp, #20]
 8008cec:	2000      	movs	r0, #0
 8008cee:	9308      	str	r3, [sp, #32]
 8008cf0:	4605      	mov	r5, r0
 8008cf2:	3a30      	subs	r2, #48	; 0x30
 8008cf4:	f100 0301 	add.w	r3, r0, #1
 8008cf8:	d014      	beq.n	8008d24 <_strtod_l+0x244>
 8008cfa:	9905      	ldr	r1, [sp, #20]
 8008cfc:	4419      	add	r1, r3
 8008cfe:	9105      	str	r1, [sp, #20]
 8008d00:	462b      	mov	r3, r5
 8008d02:	eb00 0e05 	add.w	lr, r0, r5
 8008d06:	210a      	movs	r1, #10
 8008d08:	4573      	cmp	r3, lr
 8008d0a:	d113      	bne.n	8008d34 <_strtod_l+0x254>
 8008d0c:	182b      	adds	r3, r5, r0
 8008d0e:	2b08      	cmp	r3, #8
 8008d10:	f105 0501 	add.w	r5, r5, #1
 8008d14:	4405      	add	r5, r0
 8008d16:	dc1c      	bgt.n	8008d52 <_strtod_l+0x272>
 8008d18:	9907      	ldr	r1, [sp, #28]
 8008d1a:	230a      	movs	r3, #10
 8008d1c:	fb03 2301 	mla	r3, r3, r1, r2
 8008d20:	9307      	str	r3, [sp, #28]
 8008d22:	2300      	movs	r3, #0
 8008d24:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8008d26:	1c51      	adds	r1, r2, #1
 8008d28:	9117      	str	r1, [sp, #92]	; 0x5c
 8008d2a:	7852      	ldrb	r2, [r2, #1]
 8008d2c:	4618      	mov	r0, r3
 8008d2e:	e7c9      	b.n	8008cc4 <_strtod_l+0x1e4>
 8008d30:	4638      	mov	r0, r7
 8008d32:	e7d2      	b.n	8008cda <_strtod_l+0x1fa>
 8008d34:	2b08      	cmp	r3, #8
 8008d36:	dc04      	bgt.n	8008d42 <_strtod_l+0x262>
 8008d38:	9e07      	ldr	r6, [sp, #28]
 8008d3a:	434e      	muls	r6, r1
 8008d3c:	9607      	str	r6, [sp, #28]
 8008d3e:	3301      	adds	r3, #1
 8008d40:	e7e2      	b.n	8008d08 <_strtod_l+0x228>
 8008d42:	f103 0c01 	add.w	ip, r3, #1
 8008d46:	f1bc 0f10 	cmp.w	ip, #16
 8008d4a:	bfd8      	it	le
 8008d4c:	fb01 f909 	mulle.w	r9, r1, r9
 8008d50:	e7f5      	b.n	8008d3e <_strtod_l+0x25e>
 8008d52:	2d10      	cmp	r5, #16
 8008d54:	bfdc      	itt	le
 8008d56:	230a      	movle	r3, #10
 8008d58:	fb03 2909 	mlale	r9, r3, r9, r2
 8008d5c:	e7e1      	b.n	8008d22 <_strtod_l+0x242>
 8008d5e:	2300      	movs	r3, #0
 8008d60:	9305      	str	r3, [sp, #20]
 8008d62:	2301      	movs	r3, #1
 8008d64:	e77c      	b.n	8008c60 <_strtod_l+0x180>
 8008d66:	f04f 0c00 	mov.w	ip, #0
 8008d6a:	f108 0202 	add.w	r2, r8, #2
 8008d6e:	9217      	str	r2, [sp, #92]	; 0x5c
 8008d70:	f898 2002 	ldrb.w	r2, [r8, #2]
 8008d74:	e785      	b.n	8008c82 <_strtod_l+0x1a2>
 8008d76:	f04f 0c01 	mov.w	ip, #1
 8008d7a:	e7f6      	b.n	8008d6a <_strtod_l+0x28a>
 8008d7c:	0800cd20 	.word	0x0800cd20
 8008d80:	0800cad8 	.word	0x0800cad8
 8008d84:	7ff00000 	.word	0x7ff00000
 8008d88:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8008d8a:	1c51      	adds	r1, r2, #1
 8008d8c:	9117      	str	r1, [sp, #92]	; 0x5c
 8008d8e:	7852      	ldrb	r2, [r2, #1]
 8008d90:	2a30      	cmp	r2, #48	; 0x30
 8008d92:	d0f9      	beq.n	8008d88 <_strtod_l+0x2a8>
 8008d94:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8008d98:	2908      	cmp	r1, #8
 8008d9a:	f63f af79 	bhi.w	8008c90 <_strtod_l+0x1b0>
 8008d9e:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8008da2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8008da4:	9206      	str	r2, [sp, #24]
 8008da6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8008da8:	1c51      	adds	r1, r2, #1
 8008daa:	9117      	str	r1, [sp, #92]	; 0x5c
 8008dac:	7852      	ldrb	r2, [r2, #1]
 8008dae:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 8008db2:	2e09      	cmp	r6, #9
 8008db4:	d937      	bls.n	8008e26 <_strtod_l+0x346>
 8008db6:	9e06      	ldr	r6, [sp, #24]
 8008db8:	1b89      	subs	r1, r1, r6
 8008dba:	2908      	cmp	r1, #8
 8008dbc:	f644 661f 	movw	r6, #19999	; 0x4e1f
 8008dc0:	dc02      	bgt.n	8008dc8 <_strtod_l+0x2e8>
 8008dc2:	4576      	cmp	r6, lr
 8008dc4:	bfa8      	it	ge
 8008dc6:	4676      	movge	r6, lr
 8008dc8:	f1bc 0f00 	cmp.w	ip, #0
 8008dcc:	d000      	beq.n	8008dd0 <_strtod_l+0x2f0>
 8008dce:	4276      	negs	r6, r6
 8008dd0:	2d00      	cmp	r5, #0
 8008dd2:	d14d      	bne.n	8008e70 <_strtod_l+0x390>
 8008dd4:	9904      	ldr	r1, [sp, #16]
 8008dd6:	4301      	orrs	r1, r0
 8008dd8:	f47f aec6 	bne.w	8008b68 <_strtod_l+0x88>
 8008ddc:	2b00      	cmp	r3, #0
 8008dde:	f47f aee1 	bne.w	8008ba4 <_strtod_l+0xc4>
 8008de2:	2a69      	cmp	r2, #105	; 0x69
 8008de4:	d027      	beq.n	8008e36 <_strtod_l+0x356>
 8008de6:	dc24      	bgt.n	8008e32 <_strtod_l+0x352>
 8008de8:	2a49      	cmp	r2, #73	; 0x49
 8008dea:	d024      	beq.n	8008e36 <_strtod_l+0x356>
 8008dec:	2a4e      	cmp	r2, #78	; 0x4e
 8008dee:	f47f aed9 	bne.w	8008ba4 <_strtod_l+0xc4>
 8008df2:	499f      	ldr	r1, [pc, #636]	; (8009070 <_strtod_l+0x590>)
 8008df4:	a817      	add	r0, sp, #92	; 0x5c
 8008df6:	f001 fe3d 	bl	800aa74 <__match>
 8008dfa:	2800      	cmp	r0, #0
 8008dfc:	f43f aed2 	beq.w	8008ba4 <_strtod_l+0xc4>
 8008e00:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008e02:	781b      	ldrb	r3, [r3, #0]
 8008e04:	2b28      	cmp	r3, #40	; 0x28
 8008e06:	d12d      	bne.n	8008e64 <_strtod_l+0x384>
 8008e08:	499a      	ldr	r1, [pc, #616]	; (8009074 <_strtod_l+0x594>)
 8008e0a:	aa1a      	add	r2, sp, #104	; 0x68
 8008e0c:	a817      	add	r0, sp, #92	; 0x5c
 8008e0e:	f001 fe45 	bl	800aa9c <__hexnan>
 8008e12:	2805      	cmp	r0, #5
 8008e14:	d126      	bne.n	8008e64 <_strtod_l+0x384>
 8008e16:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008e18:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 8008e1c:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8008e20:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8008e24:	e6a0      	b.n	8008b68 <_strtod_l+0x88>
 8008e26:	210a      	movs	r1, #10
 8008e28:	fb01 2e0e 	mla	lr, r1, lr, r2
 8008e2c:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8008e30:	e7b9      	b.n	8008da6 <_strtod_l+0x2c6>
 8008e32:	2a6e      	cmp	r2, #110	; 0x6e
 8008e34:	e7db      	b.n	8008dee <_strtod_l+0x30e>
 8008e36:	4990      	ldr	r1, [pc, #576]	; (8009078 <_strtod_l+0x598>)
 8008e38:	a817      	add	r0, sp, #92	; 0x5c
 8008e3a:	f001 fe1b 	bl	800aa74 <__match>
 8008e3e:	2800      	cmp	r0, #0
 8008e40:	f43f aeb0 	beq.w	8008ba4 <_strtod_l+0xc4>
 8008e44:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008e46:	498d      	ldr	r1, [pc, #564]	; (800907c <_strtod_l+0x59c>)
 8008e48:	3b01      	subs	r3, #1
 8008e4a:	a817      	add	r0, sp, #92	; 0x5c
 8008e4c:	9317      	str	r3, [sp, #92]	; 0x5c
 8008e4e:	f001 fe11 	bl	800aa74 <__match>
 8008e52:	b910      	cbnz	r0, 8008e5a <_strtod_l+0x37a>
 8008e54:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008e56:	3301      	adds	r3, #1
 8008e58:	9317      	str	r3, [sp, #92]	; 0x5c
 8008e5a:	f8df b230 	ldr.w	fp, [pc, #560]	; 800908c <_strtod_l+0x5ac>
 8008e5e:	f04f 0a00 	mov.w	sl, #0
 8008e62:	e681      	b.n	8008b68 <_strtod_l+0x88>
 8008e64:	4886      	ldr	r0, [pc, #536]	; (8009080 <_strtod_l+0x5a0>)
 8008e66:	f002 fdf7 	bl	800ba58 <nan>
 8008e6a:	ec5b ab10 	vmov	sl, fp, d0
 8008e6e:	e67b      	b.n	8008b68 <_strtod_l+0x88>
 8008e70:	9b05      	ldr	r3, [sp, #20]
 8008e72:	9807      	ldr	r0, [sp, #28]
 8008e74:	1af3      	subs	r3, r6, r3
 8008e76:	2f00      	cmp	r7, #0
 8008e78:	bf08      	it	eq
 8008e7a:	462f      	moveq	r7, r5
 8008e7c:	2d10      	cmp	r5, #16
 8008e7e:	9306      	str	r3, [sp, #24]
 8008e80:	46a8      	mov	r8, r5
 8008e82:	bfa8      	it	ge
 8008e84:	f04f 0810 	movge.w	r8, #16
 8008e88:	f7f7 fb3c 	bl	8000504 <__aeabi_ui2d>
 8008e8c:	2d09      	cmp	r5, #9
 8008e8e:	4682      	mov	sl, r0
 8008e90:	468b      	mov	fp, r1
 8008e92:	dd13      	ble.n	8008ebc <_strtod_l+0x3dc>
 8008e94:	4b7b      	ldr	r3, [pc, #492]	; (8009084 <_strtod_l+0x5a4>)
 8008e96:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8008e9a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8008e9e:	f7f7 fbab 	bl	80005f8 <__aeabi_dmul>
 8008ea2:	4682      	mov	sl, r0
 8008ea4:	4648      	mov	r0, r9
 8008ea6:	468b      	mov	fp, r1
 8008ea8:	f7f7 fb2c 	bl	8000504 <__aeabi_ui2d>
 8008eac:	4602      	mov	r2, r0
 8008eae:	460b      	mov	r3, r1
 8008eb0:	4650      	mov	r0, sl
 8008eb2:	4659      	mov	r1, fp
 8008eb4:	f7f7 f9ea 	bl	800028c <__adddf3>
 8008eb8:	4682      	mov	sl, r0
 8008eba:	468b      	mov	fp, r1
 8008ebc:	2d0f      	cmp	r5, #15
 8008ebe:	dc38      	bgt.n	8008f32 <_strtod_l+0x452>
 8008ec0:	9b06      	ldr	r3, [sp, #24]
 8008ec2:	2b00      	cmp	r3, #0
 8008ec4:	f43f ae50 	beq.w	8008b68 <_strtod_l+0x88>
 8008ec8:	dd24      	ble.n	8008f14 <_strtod_l+0x434>
 8008eca:	2b16      	cmp	r3, #22
 8008ecc:	dc0b      	bgt.n	8008ee6 <_strtod_l+0x406>
 8008ece:	496d      	ldr	r1, [pc, #436]	; (8009084 <_strtod_l+0x5a4>)
 8008ed0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8008ed4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008ed8:	4652      	mov	r2, sl
 8008eda:	465b      	mov	r3, fp
 8008edc:	f7f7 fb8c 	bl	80005f8 <__aeabi_dmul>
 8008ee0:	4682      	mov	sl, r0
 8008ee2:	468b      	mov	fp, r1
 8008ee4:	e640      	b.n	8008b68 <_strtod_l+0x88>
 8008ee6:	9a06      	ldr	r2, [sp, #24]
 8008ee8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8008eec:	4293      	cmp	r3, r2
 8008eee:	db20      	blt.n	8008f32 <_strtod_l+0x452>
 8008ef0:	4c64      	ldr	r4, [pc, #400]	; (8009084 <_strtod_l+0x5a4>)
 8008ef2:	f1c5 050f 	rsb	r5, r5, #15
 8008ef6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8008efa:	4652      	mov	r2, sl
 8008efc:	465b      	mov	r3, fp
 8008efe:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008f02:	f7f7 fb79 	bl	80005f8 <__aeabi_dmul>
 8008f06:	9b06      	ldr	r3, [sp, #24]
 8008f08:	1b5d      	subs	r5, r3, r5
 8008f0a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8008f0e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8008f12:	e7e3      	b.n	8008edc <_strtod_l+0x3fc>
 8008f14:	9b06      	ldr	r3, [sp, #24]
 8008f16:	3316      	adds	r3, #22
 8008f18:	db0b      	blt.n	8008f32 <_strtod_l+0x452>
 8008f1a:	9b05      	ldr	r3, [sp, #20]
 8008f1c:	1b9e      	subs	r6, r3, r6
 8008f1e:	4b59      	ldr	r3, [pc, #356]	; (8009084 <_strtod_l+0x5a4>)
 8008f20:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 8008f24:	e9d6 2300 	ldrd	r2, r3, [r6]
 8008f28:	4650      	mov	r0, sl
 8008f2a:	4659      	mov	r1, fp
 8008f2c:	f7f7 fc8e 	bl	800084c <__aeabi_ddiv>
 8008f30:	e7d6      	b.n	8008ee0 <_strtod_l+0x400>
 8008f32:	9b06      	ldr	r3, [sp, #24]
 8008f34:	eba5 0808 	sub.w	r8, r5, r8
 8008f38:	4498      	add	r8, r3
 8008f3a:	f1b8 0f00 	cmp.w	r8, #0
 8008f3e:	dd74      	ble.n	800902a <_strtod_l+0x54a>
 8008f40:	f018 030f 	ands.w	r3, r8, #15
 8008f44:	d00a      	beq.n	8008f5c <_strtod_l+0x47c>
 8008f46:	494f      	ldr	r1, [pc, #316]	; (8009084 <_strtod_l+0x5a4>)
 8008f48:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8008f4c:	4652      	mov	r2, sl
 8008f4e:	465b      	mov	r3, fp
 8008f50:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008f54:	f7f7 fb50 	bl	80005f8 <__aeabi_dmul>
 8008f58:	4682      	mov	sl, r0
 8008f5a:	468b      	mov	fp, r1
 8008f5c:	f038 080f 	bics.w	r8, r8, #15
 8008f60:	d04f      	beq.n	8009002 <_strtod_l+0x522>
 8008f62:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8008f66:	dd22      	ble.n	8008fae <_strtod_l+0x4ce>
 8008f68:	2500      	movs	r5, #0
 8008f6a:	462e      	mov	r6, r5
 8008f6c:	9507      	str	r5, [sp, #28]
 8008f6e:	9505      	str	r5, [sp, #20]
 8008f70:	2322      	movs	r3, #34	; 0x22
 8008f72:	f8df b118 	ldr.w	fp, [pc, #280]	; 800908c <_strtod_l+0x5ac>
 8008f76:	6023      	str	r3, [r4, #0]
 8008f78:	f04f 0a00 	mov.w	sl, #0
 8008f7c:	9b07      	ldr	r3, [sp, #28]
 8008f7e:	2b00      	cmp	r3, #0
 8008f80:	f43f adf2 	beq.w	8008b68 <_strtod_l+0x88>
 8008f84:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008f86:	4620      	mov	r0, r4
 8008f88:	f001 fe90 	bl	800acac <_Bfree>
 8008f8c:	9905      	ldr	r1, [sp, #20]
 8008f8e:	4620      	mov	r0, r4
 8008f90:	f001 fe8c 	bl	800acac <_Bfree>
 8008f94:	4631      	mov	r1, r6
 8008f96:	4620      	mov	r0, r4
 8008f98:	f001 fe88 	bl	800acac <_Bfree>
 8008f9c:	9907      	ldr	r1, [sp, #28]
 8008f9e:	4620      	mov	r0, r4
 8008fa0:	f001 fe84 	bl	800acac <_Bfree>
 8008fa4:	4629      	mov	r1, r5
 8008fa6:	4620      	mov	r0, r4
 8008fa8:	f001 fe80 	bl	800acac <_Bfree>
 8008fac:	e5dc      	b.n	8008b68 <_strtod_l+0x88>
 8008fae:	4b36      	ldr	r3, [pc, #216]	; (8009088 <_strtod_l+0x5a8>)
 8008fb0:	9304      	str	r3, [sp, #16]
 8008fb2:	2300      	movs	r3, #0
 8008fb4:	ea4f 1828 	mov.w	r8, r8, asr #4
 8008fb8:	4650      	mov	r0, sl
 8008fba:	4659      	mov	r1, fp
 8008fbc:	4699      	mov	r9, r3
 8008fbe:	f1b8 0f01 	cmp.w	r8, #1
 8008fc2:	dc21      	bgt.n	8009008 <_strtod_l+0x528>
 8008fc4:	b10b      	cbz	r3, 8008fca <_strtod_l+0x4ea>
 8008fc6:	4682      	mov	sl, r0
 8008fc8:	468b      	mov	fp, r1
 8008fca:	4b2f      	ldr	r3, [pc, #188]	; (8009088 <_strtod_l+0x5a8>)
 8008fcc:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8008fd0:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8008fd4:	4652      	mov	r2, sl
 8008fd6:	465b      	mov	r3, fp
 8008fd8:	e9d9 0100 	ldrd	r0, r1, [r9]
 8008fdc:	f7f7 fb0c 	bl	80005f8 <__aeabi_dmul>
 8008fe0:	4b2a      	ldr	r3, [pc, #168]	; (800908c <_strtod_l+0x5ac>)
 8008fe2:	460a      	mov	r2, r1
 8008fe4:	400b      	ands	r3, r1
 8008fe6:	492a      	ldr	r1, [pc, #168]	; (8009090 <_strtod_l+0x5b0>)
 8008fe8:	428b      	cmp	r3, r1
 8008fea:	4682      	mov	sl, r0
 8008fec:	d8bc      	bhi.n	8008f68 <_strtod_l+0x488>
 8008fee:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8008ff2:	428b      	cmp	r3, r1
 8008ff4:	bf86      	itte	hi
 8008ff6:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 8009094 <_strtod_l+0x5b4>
 8008ffa:	f04f 3aff 	movhi.w	sl, #4294967295
 8008ffe:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8009002:	2300      	movs	r3, #0
 8009004:	9304      	str	r3, [sp, #16]
 8009006:	e084      	b.n	8009112 <_strtod_l+0x632>
 8009008:	f018 0f01 	tst.w	r8, #1
 800900c:	d005      	beq.n	800901a <_strtod_l+0x53a>
 800900e:	9b04      	ldr	r3, [sp, #16]
 8009010:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009014:	f7f7 faf0 	bl	80005f8 <__aeabi_dmul>
 8009018:	2301      	movs	r3, #1
 800901a:	9a04      	ldr	r2, [sp, #16]
 800901c:	3208      	adds	r2, #8
 800901e:	f109 0901 	add.w	r9, r9, #1
 8009022:	ea4f 0868 	mov.w	r8, r8, asr #1
 8009026:	9204      	str	r2, [sp, #16]
 8009028:	e7c9      	b.n	8008fbe <_strtod_l+0x4de>
 800902a:	d0ea      	beq.n	8009002 <_strtod_l+0x522>
 800902c:	f1c8 0800 	rsb	r8, r8, #0
 8009030:	f018 020f 	ands.w	r2, r8, #15
 8009034:	d00a      	beq.n	800904c <_strtod_l+0x56c>
 8009036:	4b13      	ldr	r3, [pc, #76]	; (8009084 <_strtod_l+0x5a4>)
 8009038:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800903c:	4650      	mov	r0, sl
 800903e:	4659      	mov	r1, fp
 8009040:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009044:	f7f7 fc02 	bl	800084c <__aeabi_ddiv>
 8009048:	4682      	mov	sl, r0
 800904a:	468b      	mov	fp, r1
 800904c:	ea5f 1828 	movs.w	r8, r8, asr #4
 8009050:	d0d7      	beq.n	8009002 <_strtod_l+0x522>
 8009052:	f1b8 0f1f 	cmp.w	r8, #31
 8009056:	dd1f      	ble.n	8009098 <_strtod_l+0x5b8>
 8009058:	2500      	movs	r5, #0
 800905a:	462e      	mov	r6, r5
 800905c:	9507      	str	r5, [sp, #28]
 800905e:	9505      	str	r5, [sp, #20]
 8009060:	2322      	movs	r3, #34	; 0x22
 8009062:	f04f 0a00 	mov.w	sl, #0
 8009066:	f04f 0b00 	mov.w	fp, #0
 800906a:	6023      	str	r3, [r4, #0]
 800906c:	e786      	b.n	8008f7c <_strtod_l+0x49c>
 800906e:	bf00      	nop
 8009070:	0800caa9 	.word	0x0800caa9
 8009074:	0800caec 	.word	0x0800caec
 8009078:	0800caa1 	.word	0x0800caa1
 800907c:	0800cc2c 	.word	0x0800cc2c
 8009080:	0800ced8 	.word	0x0800ced8
 8009084:	0800cdb8 	.word	0x0800cdb8
 8009088:	0800cd90 	.word	0x0800cd90
 800908c:	7ff00000 	.word	0x7ff00000
 8009090:	7ca00000 	.word	0x7ca00000
 8009094:	7fefffff 	.word	0x7fefffff
 8009098:	f018 0310 	ands.w	r3, r8, #16
 800909c:	bf18      	it	ne
 800909e:	236a      	movne	r3, #106	; 0x6a
 80090a0:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 8009450 <_strtod_l+0x970>
 80090a4:	9304      	str	r3, [sp, #16]
 80090a6:	4650      	mov	r0, sl
 80090a8:	4659      	mov	r1, fp
 80090aa:	2300      	movs	r3, #0
 80090ac:	f018 0f01 	tst.w	r8, #1
 80090b0:	d004      	beq.n	80090bc <_strtod_l+0x5dc>
 80090b2:	e9d9 2300 	ldrd	r2, r3, [r9]
 80090b6:	f7f7 fa9f 	bl	80005f8 <__aeabi_dmul>
 80090ba:	2301      	movs	r3, #1
 80090bc:	ea5f 0868 	movs.w	r8, r8, asr #1
 80090c0:	f109 0908 	add.w	r9, r9, #8
 80090c4:	d1f2      	bne.n	80090ac <_strtod_l+0x5cc>
 80090c6:	b10b      	cbz	r3, 80090cc <_strtod_l+0x5ec>
 80090c8:	4682      	mov	sl, r0
 80090ca:	468b      	mov	fp, r1
 80090cc:	9b04      	ldr	r3, [sp, #16]
 80090ce:	b1c3      	cbz	r3, 8009102 <_strtod_l+0x622>
 80090d0:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80090d4:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 80090d8:	2b00      	cmp	r3, #0
 80090da:	4659      	mov	r1, fp
 80090dc:	dd11      	ble.n	8009102 <_strtod_l+0x622>
 80090de:	2b1f      	cmp	r3, #31
 80090e0:	f340 8124 	ble.w	800932c <_strtod_l+0x84c>
 80090e4:	2b34      	cmp	r3, #52	; 0x34
 80090e6:	bfde      	ittt	le
 80090e8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 80090ec:	f04f 33ff 	movle.w	r3, #4294967295
 80090f0:	fa03 f202 	lslle.w	r2, r3, r2
 80090f4:	f04f 0a00 	mov.w	sl, #0
 80090f8:	bfcc      	ite	gt
 80090fa:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 80090fe:	ea02 0b01 	andle.w	fp, r2, r1
 8009102:	2200      	movs	r2, #0
 8009104:	2300      	movs	r3, #0
 8009106:	4650      	mov	r0, sl
 8009108:	4659      	mov	r1, fp
 800910a:	f7f7 fcdd 	bl	8000ac8 <__aeabi_dcmpeq>
 800910e:	2800      	cmp	r0, #0
 8009110:	d1a2      	bne.n	8009058 <_strtod_l+0x578>
 8009112:	9b07      	ldr	r3, [sp, #28]
 8009114:	9300      	str	r3, [sp, #0]
 8009116:	9908      	ldr	r1, [sp, #32]
 8009118:	462b      	mov	r3, r5
 800911a:	463a      	mov	r2, r7
 800911c:	4620      	mov	r0, r4
 800911e:	f001 fe2d 	bl	800ad7c <__s2b>
 8009122:	9007      	str	r0, [sp, #28]
 8009124:	2800      	cmp	r0, #0
 8009126:	f43f af1f 	beq.w	8008f68 <_strtod_l+0x488>
 800912a:	9b05      	ldr	r3, [sp, #20]
 800912c:	1b9e      	subs	r6, r3, r6
 800912e:	9b06      	ldr	r3, [sp, #24]
 8009130:	2b00      	cmp	r3, #0
 8009132:	bfb4      	ite	lt
 8009134:	4633      	movlt	r3, r6
 8009136:	2300      	movge	r3, #0
 8009138:	930c      	str	r3, [sp, #48]	; 0x30
 800913a:	9b06      	ldr	r3, [sp, #24]
 800913c:	2500      	movs	r5, #0
 800913e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8009142:	9312      	str	r3, [sp, #72]	; 0x48
 8009144:	462e      	mov	r6, r5
 8009146:	9b07      	ldr	r3, [sp, #28]
 8009148:	4620      	mov	r0, r4
 800914a:	6859      	ldr	r1, [r3, #4]
 800914c:	f001 fd6e 	bl	800ac2c <_Balloc>
 8009150:	9005      	str	r0, [sp, #20]
 8009152:	2800      	cmp	r0, #0
 8009154:	f43f af0c 	beq.w	8008f70 <_strtod_l+0x490>
 8009158:	9b07      	ldr	r3, [sp, #28]
 800915a:	691a      	ldr	r2, [r3, #16]
 800915c:	3202      	adds	r2, #2
 800915e:	f103 010c 	add.w	r1, r3, #12
 8009162:	0092      	lsls	r2, r2, #2
 8009164:	300c      	adds	r0, #12
 8009166:	f001 fd53 	bl	800ac10 <memcpy>
 800916a:	ec4b ab10 	vmov	d0, sl, fp
 800916e:	aa1a      	add	r2, sp, #104	; 0x68
 8009170:	a919      	add	r1, sp, #100	; 0x64
 8009172:	4620      	mov	r0, r4
 8009174:	f002 f948 	bl	800b408 <__d2b>
 8009178:	ec4b ab18 	vmov	d8, sl, fp
 800917c:	9018      	str	r0, [sp, #96]	; 0x60
 800917e:	2800      	cmp	r0, #0
 8009180:	f43f aef6 	beq.w	8008f70 <_strtod_l+0x490>
 8009184:	2101      	movs	r1, #1
 8009186:	4620      	mov	r0, r4
 8009188:	f001 fe92 	bl	800aeb0 <__i2b>
 800918c:	4606      	mov	r6, r0
 800918e:	2800      	cmp	r0, #0
 8009190:	f43f aeee 	beq.w	8008f70 <_strtod_l+0x490>
 8009194:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8009196:	9904      	ldr	r1, [sp, #16]
 8009198:	2b00      	cmp	r3, #0
 800919a:	bfab      	itete	ge
 800919c:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 800919e:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 80091a0:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 80091a2:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 80091a6:	bfac      	ite	ge
 80091a8:	eb03 0902 	addge.w	r9, r3, r2
 80091ac:	1ad7      	sublt	r7, r2, r3
 80091ae:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80091b0:	eba3 0801 	sub.w	r8, r3, r1
 80091b4:	4490      	add	r8, r2
 80091b6:	4ba1      	ldr	r3, [pc, #644]	; (800943c <_strtod_l+0x95c>)
 80091b8:	f108 38ff 	add.w	r8, r8, #4294967295
 80091bc:	4598      	cmp	r8, r3
 80091be:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 80091c2:	f280 80c7 	bge.w	8009354 <_strtod_l+0x874>
 80091c6:	eba3 0308 	sub.w	r3, r3, r8
 80091ca:	2b1f      	cmp	r3, #31
 80091cc:	eba2 0203 	sub.w	r2, r2, r3
 80091d0:	f04f 0101 	mov.w	r1, #1
 80091d4:	f300 80b1 	bgt.w	800933a <_strtod_l+0x85a>
 80091d8:	fa01 f303 	lsl.w	r3, r1, r3
 80091dc:	930d      	str	r3, [sp, #52]	; 0x34
 80091de:	2300      	movs	r3, #0
 80091e0:	9308      	str	r3, [sp, #32]
 80091e2:	eb09 0802 	add.w	r8, r9, r2
 80091e6:	9b04      	ldr	r3, [sp, #16]
 80091e8:	45c1      	cmp	r9, r8
 80091ea:	4417      	add	r7, r2
 80091ec:	441f      	add	r7, r3
 80091ee:	464b      	mov	r3, r9
 80091f0:	bfa8      	it	ge
 80091f2:	4643      	movge	r3, r8
 80091f4:	42bb      	cmp	r3, r7
 80091f6:	bfa8      	it	ge
 80091f8:	463b      	movge	r3, r7
 80091fa:	2b00      	cmp	r3, #0
 80091fc:	bfc2      	ittt	gt
 80091fe:	eba8 0803 	subgt.w	r8, r8, r3
 8009202:	1aff      	subgt	r7, r7, r3
 8009204:	eba9 0903 	subgt.w	r9, r9, r3
 8009208:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800920a:	2b00      	cmp	r3, #0
 800920c:	dd17      	ble.n	800923e <_strtod_l+0x75e>
 800920e:	4631      	mov	r1, r6
 8009210:	461a      	mov	r2, r3
 8009212:	4620      	mov	r0, r4
 8009214:	f001 ff0c 	bl	800b030 <__pow5mult>
 8009218:	4606      	mov	r6, r0
 800921a:	2800      	cmp	r0, #0
 800921c:	f43f aea8 	beq.w	8008f70 <_strtod_l+0x490>
 8009220:	4601      	mov	r1, r0
 8009222:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8009224:	4620      	mov	r0, r4
 8009226:	f001 fe59 	bl	800aedc <__multiply>
 800922a:	900b      	str	r0, [sp, #44]	; 0x2c
 800922c:	2800      	cmp	r0, #0
 800922e:	f43f ae9f 	beq.w	8008f70 <_strtod_l+0x490>
 8009232:	9918      	ldr	r1, [sp, #96]	; 0x60
 8009234:	4620      	mov	r0, r4
 8009236:	f001 fd39 	bl	800acac <_Bfree>
 800923a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800923c:	9318      	str	r3, [sp, #96]	; 0x60
 800923e:	f1b8 0f00 	cmp.w	r8, #0
 8009242:	f300 808c 	bgt.w	800935e <_strtod_l+0x87e>
 8009246:	9b06      	ldr	r3, [sp, #24]
 8009248:	2b00      	cmp	r3, #0
 800924a:	dd08      	ble.n	800925e <_strtod_l+0x77e>
 800924c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800924e:	9905      	ldr	r1, [sp, #20]
 8009250:	4620      	mov	r0, r4
 8009252:	f001 feed 	bl	800b030 <__pow5mult>
 8009256:	9005      	str	r0, [sp, #20]
 8009258:	2800      	cmp	r0, #0
 800925a:	f43f ae89 	beq.w	8008f70 <_strtod_l+0x490>
 800925e:	2f00      	cmp	r7, #0
 8009260:	dd08      	ble.n	8009274 <_strtod_l+0x794>
 8009262:	9905      	ldr	r1, [sp, #20]
 8009264:	463a      	mov	r2, r7
 8009266:	4620      	mov	r0, r4
 8009268:	f001 ff3c 	bl	800b0e4 <__lshift>
 800926c:	9005      	str	r0, [sp, #20]
 800926e:	2800      	cmp	r0, #0
 8009270:	f43f ae7e 	beq.w	8008f70 <_strtod_l+0x490>
 8009274:	f1b9 0f00 	cmp.w	r9, #0
 8009278:	dd08      	ble.n	800928c <_strtod_l+0x7ac>
 800927a:	4631      	mov	r1, r6
 800927c:	464a      	mov	r2, r9
 800927e:	4620      	mov	r0, r4
 8009280:	f001 ff30 	bl	800b0e4 <__lshift>
 8009284:	4606      	mov	r6, r0
 8009286:	2800      	cmp	r0, #0
 8009288:	f43f ae72 	beq.w	8008f70 <_strtod_l+0x490>
 800928c:	9a05      	ldr	r2, [sp, #20]
 800928e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8009290:	4620      	mov	r0, r4
 8009292:	f001 ffb3 	bl	800b1fc <__mdiff>
 8009296:	4605      	mov	r5, r0
 8009298:	2800      	cmp	r0, #0
 800929a:	f43f ae69 	beq.w	8008f70 <_strtod_l+0x490>
 800929e:	68c3      	ldr	r3, [r0, #12]
 80092a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80092a2:	2300      	movs	r3, #0
 80092a4:	60c3      	str	r3, [r0, #12]
 80092a6:	4631      	mov	r1, r6
 80092a8:	f001 ff8c 	bl	800b1c4 <__mcmp>
 80092ac:	2800      	cmp	r0, #0
 80092ae:	da60      	bge.n	8009372 <_strtod_l+0x892>
 80092b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80092b2:	ea53 030a 	orrs.w	r3, r3, sl
 80092b6:	f040 8082 	bne.w	80093be <_strtod_l+0x8de>
 80092ba:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80092be:	2b00      	cmp	r3, #0
 80092c0:	d17d      	bne.n	80093be <_strtod_l+0x8de>
 80092c2:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80092c6:	0d1b      	lsrs	r3, r3, #20
 80092c8:	051b      	lsls	r3, r3, #20
 80092ca:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80092ce:	d976      	bls.n	80093be <_strtod_l+0x8de>
 80092d0:	696b      	ldr	r3, [r5, #20]
 80092d2:	b913      	cbnz	r3, 80092da <_strtod_l+0x7fa>
 80092d4:	692b      	ldr	r3, [r5, #16]
 80092d6:	2b01      	cmp	r3, #1
 80092d8:	dd71      	ble.n	80093be <_strtod_l+0x8de>
 80092da:	4629      	mov	r1, r5
 80092dc:	2201      	movs	r2, #1
 80092de:	4620      	mov	r0, r4
 80092e0:	f001 ff00 	bl	800b0e4 <__lshift>
 80092e4:	4631      	mov	r1, r6
 80092e6:	4605      	mov	r5, r0
 80092e8:	f001 ff6c 	bl	800b1c4 <__mcmp>
 80092ec:	2800      	cmp	r0, #0
 80092ee:	dd66      	ble.n	80093be <_strtod_l+0x8de>
 80092f0:	9904      	ldr	r1, [sp, #16]
 80092f2:	4a53      	ldr	r2, [pc, #332]	; (8009440 <_strtod_l+0x960>)
 80092f4:	465b      	mov	r3, fp
 80092f6:	2900      	cmp	r1, #0
 80092f8:	f000 8081 	beq.w	80093fe <_strtod_l+0x91e>
 80092fc:	ea02 010b 	and.w	r1, r2, fp
 8009300:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8009304:	dc7b      	bgt.n	80093fe <_strtod_l+0x91e>
 8009306:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800930a:	f77f aea9 	ble.w	8009060 <_strtod_l+0x580>
 800930e:	4b4d      	ldr	r3, [pc, #308]	; (8009444 <_strtod_l+0x964>)
 8009310:	4650      	mov	r0, sl
 8009312:	4659      	mov	r1, fp
 8009314:	2200      	movs	r2, #0
 8009316:	f7f7 f96f 	bl	80005f8 <__aeabi_dmul>
 800931a:	460b      	mov	r3, r1
 800931c:	4303      	orrs	r3, r0
 800931e:	bf08      	it	eq
 8009320:	2322      	moveq	r3, #34	; 0x22
 8009322:	4682      	mov	sl, r0
 8009324:	468b      	mov	fp, r1
 8009326:	bf08      	it	eq
 8009328:	6023      	streq	r3, [r4, #0]
 800932a:	e62b      	b.n	8008f84 <_strtod_l+0x4a4>
 800932c:	f04f 32ff 	mov.w	r2, #4294967295
 8009330:	fa02 f303 	lsl.w	r3, r2, r3
 8009334:	ea03 0a0a 	and.w	sl, r3, sl
 8009338:	e6e3      	b.n	8009102 <_strtod_l+0x622>
 800933a:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 800933e:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8009342:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8009346:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 800934a:	fa01 f308 	lsl.w	r3, r1, r8
 800934e:	9308      	str	r3, [sp, #32]
 8009350:	910d      	str	r1, [sp, #52]	; 0x34
 8009352:	e746      	b.n	80091e2 <_strtod_l+0x702>
 8009354:	2300      	movs	r3, #0
 8009356:	9308      	str	r3, [sp, #32]
 8009358:	2301      	movs	r3, #1
 800935a:	930d      	str	r3, [sp, #52]	; 0x34
 800935c:	e741      	b.n	80091e2 <_strtod_l+0x702>
 800935e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8009360:	4642      	mov	r2, r8
 8009362:	4620      	mov	r0, r4
 8009364:	f001 febe 	bl	800b0e4 <__lshift>
 8009368:	9018      	str	r0, [sp, #96]	; 0x60
 800936a:	2800      	cmp	r0, #0
 800936c:	f47f af6b 	bne.w	8009246 <_strtod_l+0x766>
 8009370:	e5fe      	b.n	8008f70 <_strtod_l+0x490>
 8009372:	465f      	mov	r7, fp
 8009374:	d16e      	bne.n	8009454 <_strtod_l+0x974>
 8009376:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009378:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800937c:	b342      	cbz	r2, 80093d0 <_strtod_l+0x8f0>
 800937e:	4a32      	ldr	r2, [pc, #200]	; (8009448 <_strtod_l+0x968>)
 8009380:	4293      	cmp	r3, r2
 8009382:	d128      	bne.n	80093d6 <_strtod_l+0x8f6>
 8009384:	9b04      	ldr	r3, [sp, #16]
 8009386:	4651      	mov	r1, sl
 8009388:	b1eb      	cbz	r3, 80093c6 <_strtod_l+0x8e6>
 800938a:	4b2d      	ldr	r3, [pc, #180]	; (8009440 <_strtod_l+0x960>)
 800938c:	403b      	ands	r3, r7
 800938e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8009392:	f04f 32ff 	mov.w	r2, #4294967295
 8009396:	d819      	bhi.n	80093cc <_strtod_l+0x8ec>
 8009398:	0d1b      	lsrs	r3, r3, #20
 800939a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800939e:	fa02 f303 	lsl.w	r3, r2, r3
 80093a2:	4299      	cmp	r1, r3
 80093a4:	d117      	bne.n	80093d6 <_strtod_l+0x8f6>
 80093a6:	4b29      	ldr	r3, [pc, #164]	; (800944c <_strtod_l+0x96c>)
 80093a8:	429f      	cmp	r7, r3
 80093aa:	d102      	bne.n	80093b2 <_strtod_l+0x8d2>
 80093ac:	3101      	adds	r1, #1
 80093ae:	f43f addf 	beq.w	8008f70 <_strtod_l+0x490>
 80093b2:	4b23      	ldr	r3, [pc, #140]	; (8009440 <_strtod_l+0x960>)
 80093b4:	403b      	ands	r3, r7
 80093b6:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 80093ba:	f04f 0a00 	mov.w	sl, #0
 80093be:	9b04      	ldr	r3, [sp, #16]
 80093c0:	2b00      	cmp	r3, #0
 80093c2:	d1a4      	bne.n	800930e <_strtod_l+0x82e>
 80093c4:	e5de      	b.n	8008f84 <_strtod_l+0x4a4>
 80093c6:	f04f 33ff 	mov.w	r3, #4294967295
 80093ca:	e7ea      	b.n	80093a2 <_strtod_l+0x8c2>
 80093cc:	4613      	mov	r3, r2
 80093ce:	e7e8      	b.n	80093a2 <_strtod_l+0x8c2>
 80093d0:	ea53 030a 	orrs.w	r3, r3, sl
 80093d4:	d08c      	beq.n	80092f0 <_strtod_l+0x810>
 80093d6:	9b08      	ldr	r3, [sp, #32]
 80093d8:	b1db      	cbz	r3, 8009412 <_strtod_l+0x932>
 80093da:	423b      	tst	r3, r7
 80093dc:	d0ef      	beq.n	80093be <_strtod_l+0x8de>
 80093de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80093e0:	9a04      	ldr	r2, [sp, #16]
 80093e2:	4650      	mov	r0, sl
 80093e4:	4659      	mov	r1, fp
 80093e6:	b1c3      	cbz	r3, 800941a <_strtod_l+0x93a>
 80093e8:	f7ff fb5e 	bl	8008aa8 <sulp>
 80093ec:	4602      	mov	r2, r0
 80093ee:	460b      	mov	r3, r1
 80093f0:	ec51 0b18 	vmov	r0, r1, d8
 80093f4:	f7f6 ff4a 	bl	800028c <__adddf3>
 80093f8:	4682      	mov	sl, r0
 80093fa:	468b      	mov	fp, r1
 80093fc:	e7df      	b.n	80093be <_strtod_l+0x8de>
 80093fe:	4013      	ands	r3, r2
 8009400:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8009404:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8009408:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800940c:	f04f 3aff 	mov.w	sl, #4294967295
 8009410:	e7d5      	b.n	80093be <_strtod_l+0x8de>
 8009412:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009414:	ea13 0f0a 	tst.w	r3, sl
 8009418:	e7e0      	b.n	80093dc <_strtod_l+0x8fc>
 800941a:	f7ff fb45 	bl	8008aa8 <sulp>
 800941e:	4602      	mov	r2, r0
 8009420:	460b      	mov	r3, r1
 8009422:	ec51 0b18 	vmov	r0, r1, d8
 8009426:	f7f6 ff2f 	bl	8000288 <__aeabi_dsub>
 800942a:	2200      	movs	r2, #0
 800942c:	2300      	movs	r3, #0
 800942e:	4682      	mov	sl, r0
 8009430:	468b      	mov	fp, r1
 8009432:	f7f7 fb49 	bl	8000ac8 <__aeabi_dcmpeq>
 8009436:	2800      	cmp	r0, #0
 8009438:	d0c1      	beq.n	80093be <_strtod_l+0x8de>
 800943a:	e611      	b.n	8009060 <_strtod_l+0x580>
 800943c:	fffffc02 	.word	0xfffffc02
 8009440:	7ff00000 	.word	0x7ff00000
 8009444:	39500000 	.word	0x39500000
 8009448:	000fffff 	.word	0x000fffff
 800944c:	7fefffff 	.word	0x7fefffff
 8009450:	0800cb00 	.word	0x0800cb00
 8009454:	4631      	mov	r1, r6
 8009456:	4628      	mov	r0, r5
 8009458:	f002 f832 	bl	800b4c0 <__ratio>
 800945c:	ec59 8b10 	vmov	r8, r9, d0
 8009460:	ee10 0a10 	vmov	r0, s0
 8009464:	2200      	movs	r2, #0
 8009466:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800946a:	4649      	mov	r1, r9
 800946c:	f7f7 fb40 	bl	8000af0 <__aeabi_dcmple>
 8009470:	2800      	cmp	r0, #0
 8009472:	d07a      	beq.n	800956a <_strtod_l+0xa8a>
 8009474:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009476:	2b00      	cmp	r3, #0
 8009478:	d04a      	beq.n	8009510 <_strtod_l+0xa30>
 800947a:	4b95      	ldr	r3, [pc, #596]	; (80096d0 <_strtod_l+0xbf0>)
 800947c:	2200      	movs	r2, #0
 800947e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8009482:	f8df 924c 	ldr.w	r9, [pc, #588]	; 80096d0 <_strtod_l+0xbf0>
 8009486:	f04f 0800 	mov.w	r8, #0
 800948a:	4b92      	ldr	r3, [pc, #584]	; (80096d4 <_strtod_l+0xbf4>)
 800948c:	403b      	ands	r3, r7
 800948e:	930d      	str	r3, [sp, #52]	; 0x34
 8009490:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8009492:	4b91      	ldr	r3, [pc, #580]	; (80096d8 <_strtod_l+0xbf8>)
 8009494:	429a      	cmp	r2, r3
 8009496:	f040 80b0 	bne.w	80095fa <_strtod_l+0xb1a>
 800949a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800949e:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 80094a2:	ec4b ab10 	vmov	d0, sl, fp
 80094a6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80094aa:	f001 ff31 	bl	800b310 <__ulp>
 80094ae:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80094b2:	ec53 2b10 	vmov	r2, r3, d0
 80094b6:	f7f7 f89f 	bl	80005f8 <__aeabi_dmul>
 80094ba:	4652      	mov	r2, sl
 80094bc:	465b      	mov	r3, fp
 80094be:	f7f6 fee5 	bl	800028c <__adddf3>
 80094c2:	460b      	mov	r3, r1
 80094c4:	4983      	ldr	r1, [pc, #524]	; (80096d4 <_strtod_l+0xbf4>)
 80094c6:	4a85      	ldr	r2, [pc, #532]	; (80096dc <_strtod_l+0xbfc>)
 80094c8:	4019      	ands	r1, r3
 80094ca:	4291      	cmp	r1, r2
 80094cc:	4682      	mov	sl, r0
 80094ce:	d960      	bls.n	8009592 <_strtod_l+0xab2>
 80094d0:	ee18 3a90 	vmov	r3, s17
 80094d4:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 80094d8:	4293      	cmp	r3, r2
 80094da:	d104      	bne.n	80094e6 <_strtod_l+0xa06>
 80094dc:	ee18 3a10 	vmov	r3, s16
 80094e0:	3301      	adds	r3, #1
 80094e2:	f43f ad45 	beq.w	8008f70 <_strtod_l+0x490>
 80094e6:	f8df b200 	ldr.w	fp, [pc, #512]	; 80096e8 <_strtod_l+0xc08>
 80094ea:	f04f 3aff 	mov.w	sl, #4294967295
 80094ee:	9918      	ldr	r1, [sp, #96]	; 0x60
 80094f0:	4620      	mov	r0, r4
 80094f2:	f001 fbdb 	bl	800acac <_Bfree>
 80094f6:	9905      	ldr	r1, [sp, #20]
 80094f8:	4620      	mov	r0, r4
 80094fa:	f001 fbd7 	bl	800acac <_Bfree>
 80094fe:	4631      	mov	r1, r6
 8009500:	4620      	mov	r0, r4
 8009502:	f001 fbd3 	bl	800acac <_Bfree>
 8009506:	4629      	mov	r1, r5
 8009508:	4620      	mov	r0, r4
 800950a:	f001 fbcf 	bl	800acac <_Bfree>
 800950e:	e61a      	b.n	8009146 <_strtod_l+0x666>
 8009510:	f1ba 0f00 	cmp.w	sl, #0
 8009514:	d11b      	bne.n	800954e <_strtod_l+0xa6e>
 8009516:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800951a:	b9f3      	cbnz	r3, 800955a <_strtod_l+0xa7a>
 800951c:	4b6c      	ldr	r3, [pc, #432]	; (80096d0 <_strtod_l+0xbf0>)
 800951e:	2200      	movs	r2, #0
 8009520:	4640      	mov	r0, r8
 8009522:	4649      	mov	r1, r9
 8009524:	f7f7 fada 	bl	8000adc <__aeabi_dcmplt>
 8009528:	b9d0      	cbnz	r0, 8009560 <_strtod_l+0xa80>
 800952a:	4640      	mov	r0, r8
 800952c:	4649      	mov	r1, r9
 800952e:	4b6c      	ldr	r3, [pc, #432]	; (80096e0 <_strtod_l+0xc00>)
 8009530:	2200      	movs	r2, #0
 8009532:	f7f7 f861 	bl	80005f8 <__aeabi_dmul>
 8009536:	4680      	mov	r8, r0
 8009538:	4689      	mov	r9, r1
 800953a:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800953e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 8009542:	9315      	str	r3, [sp, #84]	; 0x54
 8009544:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8009548:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800954c:	e79d      	b.n	800948a <_strtod_l+0x9aa>
 800954e:	f1ba 0f01 	cmp.w	sl, #1
 8009552:	d102      	bne.n	800955a <_strtod_l+0xa7a>
 8009554:	2f00      	cmp	r7, #0
 8009556:	f43f ad83 	beq.w	8009060 <_strtod_l+0x580>
 800955a:	4b62      	ldr	r3, [pc, #392]	; (80096e4 <_strtod_l+0xc04>)
 800955c:	2200      	movs	r2, #0
 800955e:	e78e      	b.n	800947e <_strtod_l+0x99e>
 8009560:	f8df 917c 	ldr.w	r9, [pc, #380]	; 80096e0 <_strtod_l+0xc00>
 8009564:	f04f 0800 	mov.w	r8, #0
 8009568:	e7e7      	b.n	800953a <_strtod_l+0xa5a>
 800956a:	4b5d      	ldr	r3, [pc, #372]	; (80096e0 <_strtod_l+0xc00>)
 800956c:	4640      	mov	r0, r8
 800956e:	4649      	mov	r1, r9
 8009570:	2200      	movs	r2, #0
 8009572:	f7f7 f841 	bl	80005f8 <__aeabi_dmul>
 8009576:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009578:	4680      	mov	r8, r0
 800957a:	4689      	mov	r9, r1
 800957c:	b933      	cbnz	r3, 800958c <_strtod_l+0xaac>
 800957e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8009582:	900e      	str	r0, [sp, #56]	; 0x38
 8009584:	930f      	str	r3, [sp, #60]	; 0x3c
 8009586:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800958a:	e7dd      	b.n	8009548 <_strtod_l+0xa68>
 800958c:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 8009590:	e7f9      	b.n	8009586 <_strtod_l+0xaa6>
 8009592:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8009596:	9b04      	ldr	r3, [sp, #16]
 8009598:	2b00      	cmp	r3, #0
 800959a:	d1a8      	bne.n	80094ee <_strtod_l+0xa0e>
 800959c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80095a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80095a2:	0d1b      	lsrs	r3, r3, #20
 80095a4:	051b      	lsls	r3, r3, #20
 80095a6:	429a      	cmp	r2, r3
 80095a8:	d1a1      	bne.n	80094ee <_strtod_l+0xa0e>
 80095aa:	4640      	mov	r0, r8
 80095ac:	4649      	mov	r1, r9
 80095ae:	f7f7 fb6b 	bl	8000c88 <__aeabi_d2lz>
 80095b2:	f7f6 fff3 	bl	800059c <__aeabi_l2d>
 80095b6:	4602      	mov	r2, r0
 80095b8:	460b      	mov	r3, r1
 80095ba:	4640      	mov	r0, r8
 80095bc:	4649      	mov	r1, r9
 80095be:	f7f6 fe63 	bl	8000288 <__aeabi_dsub>
 80095c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80095c4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80095c8:	ea43 030a 	orr.w	r3, r3, sl
 80095cc:	4313      	orrs	r3, r2
 80095ce:	4680      	mov	r8, r0
 80095d0:	4689      	mov	r9, r1
 80095d2:	d055      	beq.n	8009680 <_strtod_l+0xba0>
 80095d4:	a336      	add	r3, pc, #216	; (adr r3, 80096b0 <_strtod_l+0xbd0>)
 80095d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80095da:	f7f7 fa7f 	bl	8000adc <__aeabi_dcmplt>
 80095de:	2800      	cmp	r0, #0
 80095e0:	f47f acd0 	bne.w	8008f84 <_strtod_l+0x4a4>
 80095e4:	a334      	add	r3, pc, #208	; (adr r3, 80096b8 <_strtod_l+0xbd8>)
 80095e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80095ea:	4640      	mov	r0, r8
 80095ec:	4649      	mov	r1, r9
 80095ee:	f7f7 fa93 	bl	8000b18 <__aeabi_dcmpgt>
 80095f2:	2800      	cmp	r0, #0
 80095f4:	f43f af7b 	beq.w	80094ee <_strtod_l+0xa0e>
 80095f8:	e4c4      	b.n	8008f84 <_strtod_l+0x4a4>
 80095fa:	9b04      	ldr	r3, [sp, #16]
 80095fc:	b333      	cbz	r3, 800964c <_strtod_l+0xb6c>
 80095fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009600:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8009604:	d822      	bhi.n	800964c <_strtod_l+0xb6c>
 8009606:	a32e      	add	r3, pc, #184	; (adr r3, 80096c0 <_strtod_l+0xbe0>)
 8009608:	e9d3 2300 	ldrd	r2, r3, [r3]
 800960c:	4640      	mov	r0, r8
 800960e:	4649      	mov	r1, r9
 8009610:	f7f7 fa6e 	bl	8000af0 <__aeabi_dcmple>
 8009614:	b1a0      	cbz	r0, 8009640 <_strtod_l+0xb60>
 8009616:	4649      	mov	r1, r9
 8009618:	4640      	mov	r0, r8
 800961a:	f7f7 fac5 	bl	8000ba8 <__aeabi_d2uiz>
 800961e:	2801      	cmp	r0, #1
 8009620:	bf38      	it	cc
 8009622:	2001      	movcc	r0, #1
 8009624:	f7f6 ff6e 	bl	8000504 <__aeabi_ui2d>
 8009628:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800962a:	4680      	mov	r8, r0
 800962c:	4689      	mov	r9, r1
 800962e:	bb23      	cbnz	r3, 800967a <_strtod_l+0xb9a>
 8009630:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8009634:	9010      	str	r0, [sp, #64]	; 0x40
 8009636:	9311      	str	r3, [sp, #68]	; 0x44
 8009638:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800963c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8009640:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009642:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8009644:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8009648:	1a9b      	subs	r3, r3, r2
 800964a:	9309      	str	r3, [sp, #36]	; 0x24
 800964c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8009650:	eeb0 0a48 	vmov.f32	s0, s16
 8009654:	eef0 0a68 	vmov.f32	s1, s17
 8009658:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800965c:	f001 fe58 	bl	800b310 <__ulp>
 8009660:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8009664:	ec53 2b10 	vmov	r2, r3, d0
 8009668:	f7f6 ffc6 	bl	80005f8 <__aeabi_dmul>
 800966c:	ec53 2b18 	vmov	r2, r3, d8
 8009670:	f7f6 fe0c 	bl	800028c <__adddf3>
 8009674:	4682      	mov	sl, r0
 8009676:	468b      	mov	fp, r1
 8009678:	e78d      	b.n	8009596 <_strtod_l+0xab6>
 800967a:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 800967e:	e7db      	b.n	8009638 <_strtod_l+0xb58>
 8009680:	a311      	add	r3, pc, #68	; (adr r3, 80096c8 <_strtod_l+0xbe8>)
 8009682:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009686:	f7f7 fa29 	bl	8000adc <__aeabi_dcmplt>
 800968a:	e7b2      	b.n	80095f2 <_strtod_l+0xb12>
 800968c:	2300      	movs	r3, #0
 800968e:	930a      	str	r3, [sp, #40]	; 0x28
 8009690:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8009692:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8009694:	6013      	str	r3, [r2, #0]
 8009696:	f7ff ba6b 	b.w	8008b70 <_strtod_l+0x90>
 800969a:	2a65      	cmp	r2, #101	; 0x65
 800969c:	f43f ab5f 	beq.w	8008d5e <_strtod_l+0x27e>
 80096a0:	2a45      	cmp	r2, #69	; 0x45
 80096a2:	f43f ab5c 	beq.w	8008d5e <_strtod_l+0x27e>
 80096a6:	2301      	movs	r3, #1
 80096a8:	f7ff bb94 	b.w	8008dd4 <_strtod_l+0x2f4>
 80096ac:	f3af 8000 	nop.w
 80096b0:	94a03595 	.word	0x94a03595
 80096b4:	3fdfffff 	.word	0x3fdfffff
 80096b8:	35afe535 	.word	0x35afe535
 80096bc:	3fe00000 	.word	0x3fe00000
 80096c0:	ffc00000 	.word	0xffc00000
 80096c4:	41dfffff 	.word	0x41dfffff
 80096c8:	94a03595 	.word	0x94a03595
 80096cc:	3fcfffff 	.word	0x3fcfffff
 80096d0:	3ff00000 	.word	0x3ff00000
 80096d4:	7ff00000 	.word	0x7ff00000
 80096d8:	7fe00000 	.word	0x7fe00000
 80096dc:	7c9fffff 	.word	0x7c9fffff
 80096e0:	3fe00000 	.word	0x3fe00000
 80096e4:	bff00000 	.word	0xbff00000
 80096e8:	7fefffff 	.word	0x7fefffff

080096ec <_strtod_r>:
 80096ec:	4b01      	ldr	r3, [pc, #4]	; (80096f4 <_strtod_r+0x8>)
 80096ee:	f7ff b9f7 	b.w	8008ae0 <_strtod_l>
 80096f2:	bf00      	nop
 80096f4:	20000080 	.word	0x20000080

080096f8 <_strtol_l.constprop.0>:
 80096f8:	2b01      	cmp	r3, #1
 80096fa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80096fe:	d001      	beq.n	8009704 <_strtol_l.constprop.0+0xc>
 8009700:	2b24      	cmp	r3, #36	; 0x24
 8009702:	d906      	bls.n	8009712 <_strtol_l.constprop.0+0x1a>
 8009704:	f7fe fafe 	bl	8007d04 <__errno>
 8009708:	2316      	movs	r3, #22
 800970a:	6003      	str	r3, [r0, #0]
 800970c:	2000      	movs	r0, #0
 800970e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009712:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 80097f8 <_strtol_l.constprop.0+0x100>
 8009716:	460d      	mov	r5, r1
 8009718:	462e      	mov	r6, r5
 800971a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800971e:	f814 700c 	ldrb.w	r7, [r4, ip]
 8009722:	f017 0708 	ands.w	r7, r7, #8
 8009726:	d1f7      	bne.n	8009718 <_strtol_l.constprop.0+0x20>
 8009728:	2c2d      	cmp	r4, #45	; 0x2d
 800972a:	d132      	bne.n	8009792 <_strtol_l.constprop.0+0x9a>
 800972c:	782c      	ldrb	r4, [r5, #0]
 800972e:	2701      	movs	r7, #1
 8009730:	1cb5      	adds	r5, r6, #2
 8009732:	2b00      	cmp	r3, #0
 8009734:	d05b      	beq.n	80097ee <_strtol_l.constprop.0+0xf6>
 8009736:	2b10      	cmp	r3, #16
 8009738:	d109      	bne.n	800974e <_strtol_l.constprop.0+0x56>
 800973a:	2c30      	cmp	r4, #48	; 0x30
 800973c:	d107      	bne.n	800974e <_strtol_l.constprop.0+0x56>
 800973e:	782c      	ldrb	r4, [r5, #0]
 8009740:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8009744:	2c58      	cmp	r4, #88	; 0x58
 8009746:	d14d      	bne.n	80097e4 <_strtol_l.constprop.0+0xec>
 8009748:	786c      	ldrb	r4, [r5, #1]
 800974a:	2310      	movs	r3, #16
 800974c:	3502      	adds	r5, #2
 800974e:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8009752:	f108 38ff 	add.w	r8, r8, #4294967295
 8009756:	f04f 0c00 	mov.w	ip, #0
 800975a:	fbb8 f9f3 	udiv	r9, r8, r3
 800975e:	4666      	mov	r6, ip
 8009760:	fb03 8a19 	mls	sl, r3, r9, r8
 8009764:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 8009768:	f1be 0f09 	cmp.w	lr, #9
 800976c:	d816      	bhi.n	800979c <_strtol_l.constprop.0+0xa4>
 800976e:	4674      	mov	r4, lr
 8009770:	42a3      	cmp	r3, r4
 8009772:	dd24      	ble.n	80097be <_strtol_l.constprop.0+0xc6>
 8009774:	f1bc 0f00 	cmp.w	ip, #0
 8009778:	db1e      	blt.n	80097b8 <_strtol_l.constprop.0+0xc0>
 800977a:	45b1      	cmp	r9, r6
 800977c:	d31c      	bcc.n	80097b8 <_strtol_l.constprop.0+0xc0>
 800977e:	d101      	bne.n	8009784 <_strtol_l.constprop.0+0x8c>
 8009780:	45a2      	cmp	sl, r4
 8009782:	db19      	blt.n	80097b8 <_strtol_l.constprop.0+0xc0>
 8009784:	fb06 4603 	mla	r6, r6, r3, r4
 8009788:	f04f 0c01 	mov.w	ip, #1
 800978c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8009790:	e7e8      	b.n	8009764 <_strtol_l.constprop.0+0x6c>
 8009792:	2c2b      	cmp	r4, #43	; 0x2b
 8009794:	bf04      	itt	eq
 8009796:	782c      	ldrbeq	r4, [r5, #0]
 8009798:	1cb5      	addeq	r5, r6, #2
 800979a:	e7ca      	b.n	8009732 <_strtol_l.constprop.0+0x3a>
 800979c:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 80097a0:	f1be 0f19 	cmp.w	lr, #25
 80097a4:	d801      	bhi.n	80097aa <_strtol_l.constprop.0+0xb2>
 80097a6:	3c37      	subs	r4, #55	; 0x37
 80097a8:	e7e2      	b.n	8009770 <_strtol_l.constprop.0+0x78>
 80097aa:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 80097ae:	f1be 0f19 	cmp.w	lr, #25
 80097b2:	d804      	bhi.n	80097be <_strtol_l.constprop.0+0xc6>
 80097b4:	3c57      	subs	r4, #87	; 0x57
 80097b6:	e7db      	b.n	8009770 <_strtol_l.constprop.0+0x78>
 80097b8:	f04f 3cff 	mov.w	ip, #4294967295
 80097bc:	e7e6      	b.n	800978c <_strtol_l.constprop.0+0x94>
 80097be:	f1bc 0f00 	cmp.w	ip, #0
 80097c2:	da05      	bge.n	80097d0 <_strtol_l.constprop.0+0xd8>
 80097c4:	2322      	movs	r3, #34	; 0x22
 80097c6:	6003      	str	r3, [r0, #0]
 80097c8:	4646      	mov	r6, r8
 80097ca:	b942      	cbnz	r2, 80097de <_strtol_l.constprop.0+0xe6>
 80097cc:	4630      	mov	r0, r6
 80097ce:	e79e      	b.n	800970e <_strtol_l.constprop.0+0x16>
 80097d0:	b107      	cbz	r7, 80097d4 <_strtol_l.constprop.0+0xdc>
 80097d2:	4276      	negs	r6, r6
 80097d4:	2a00      	cmp	r2, #0
 80097d6:	d0f9      	beq.n	80097cc <_strtol_l.constprop.0+0xd4>
 80097d8:	f1bc 0f00 	cmp.w	ip, #0
 80097dc:	d000      	beq.n	80097e0 <_strtol_l.constprop.0+0xe8>
 80097de:	1e69      	subs	r1, r5, #1
 80097e0:	6011      	str	r1, [r2, #0]
 80097e2:	e7f3      	b.n	80097cc <_strtol_l.constprop.0+0xd4>
 80097e4:	2430      	movs	r4, #48	; 0x30
 80097e6:	2b00      	cmp	r3, #0
 80097e8:	d1b1      	bne.n	800974e <_strtol_l.constprop.0+0x56>
 80097ea:	2308      	movs	r3, #8
 80097ec:	e7af      	b.n	800974e <_strtol_l.constprop.0+0x56>
 80097ee:	2c30      	cmp	r4, #48	; 0x30
 80097f0:	d0a5      	beq.n	800973e <_strtol_l.constprop.0+0x46>
 80097f2:	230a      	movs	r3, #10
 80097f4:	e7ab      	b.n	800974e <_strtol_l.constprop.0+0x56>
 80097f6:	bf00      	nop
 80097f8:	0800cb29 	.word	0x0800cb29

080097fc <_strtol_r>:
 80097fc:	f7ff bf7c 	b.w	80096f8 <_strtol_l.constprop.0>

08009800 <quorem>:
 8009800:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009804:	6903      	ldr	r3, [r0, #16]
 8009806:	690c      	ldr	r4, [r1, #16]
 8009808:	42a3      	cmp	r3, r4
 800980a:	4607      	mov	r7, r0
 800980c:	f2c0 8081 	blt.w	8009912 <quorem+0x112>
 8009810:	3c01      	subs	r4, #1
 8009812:	f101 0814 	add.w	r8, r1, #20
 8009816:	f100 0514 	add.w	r5, r0, #20
 800981a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800981e:	9301      	str	r3, [sp, #4]
 8009820:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8009824:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8009828:	3301      	adds	r3, #1
 800982a:	429a      	cmp	r2, r3
 800982c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8009830:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8009834:	fbb2 f6f3 	udiv	r6, r2, r3
 8009838:	d331      	bcc.n	800989e <quorem+0x9e>
 800983a:	f04f 0e00 	mov.w	lr, #0
 800983e:	4640      	mov	r0, r8
 8009840:	46ac      	mov	ip, r5
 8009842:	46f2      	mov	sl, lr
 8009844:	f850 2b04 	ldr.w	r2, [r0], #4
 8009848:	b293      	uxth	r3, r2
 800984a:	fb06 e303 	mla	r3, r6, r3, lr
 800984e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8009852:	b29b      	uxth	r3, r3
 8009854:	ebaa 0303 	sub.w	r3, sl, r3
 8009858:	f8dc a000 	ldr.w	sl, [ip]
 800985c:	0c12      	lsrs	r2, r2, #16
 800985e:	fa13 f38a 	uxtah	r3, r3, sl
 8009862:	fb06 e202 	mla	r2, r6, r2, lr
 8009866:	9300      	str	r3, [sp, #0]
 8009868:	9b00      	ldr	r3, [sp, #0]
 800986a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800986e:	b292      	uxth	r2, r2
 8009870:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8009874:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8009878:	f8bd 3000 	ldrh.w	r3, [sp]
 800987c:	4581      	cmp	r9, r0
 800987e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8009882:	f84c 3b04 	str.w	r3, [ip], #4
 8009886:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800988a:	d2db      	bcs.n	8009844 <quorem+0x44>
 800988c:	f855 300b 	ldr.w	r3, [r5, fp]
 8009890:	b92b      	cbnz	r3, 800989e <quorem+0x9e>
 8009892:	9b01      	ldr	r3, [sp, #4]
 8009894:	3b04      	subs	r3, #4
 8009896:	429d      	cmp	r5, r3
 8009898:	461a      	mov	r2, r3
 800989a:	d32e      	bcc.n	80098fa <quorem+0xfa>
 800989c:	613c      	str	r4, [r7, #16]
 800989e:	4638      	mov	r0, r7
 80098a0:	f001 fc90 	bl	800b1c4 <__mcmp>
 80098a4:	2800      	cmp	r0, #0
 80098a6:	db24      	blt.n	80098f2 <quorem+0xf2>
 80098a8:	3601      	adds	r6, #1
 80098aa:	4628      	mov	r0, r5
 80098ac:	f04f 0c00 	mov.w	ip, #0
 80098b0:	f858 2b04 	ldr.w	r2, [r8], #4
 80098b4:	f8d0 e000 	ldr.w	lr, [r0]
 80098b8:	b293      	uxth	r3, r2
 80098ba:	ebac 0303 	sub.w	r3, ip, r3
 80098be:	0c12      	lsrs	r2, r2, #16
 80098c0:	fa13 f38e 	uxtah	r3, r3, lr
 80098c4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80098c8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80098cc:	b29b      	uxth	r3, r3
 80098ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80098d2:	45c1      	cmp	r9, r8
 80098d4:	f840 3b04 	str.w	r3, [r0], #4
 80098d8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80098dc:	d2e8      	bcs.n	80098b0 <quorem+0xb0>
 80098de:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80098e2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80098e6:	b922      	cbnz	r2, 80098f2 <quorem+0xf2>
 80098e8:	3b04      	subs	r3, #4
 80098ea:	429d      	cmp	r5, r3
 80098ec:	461a      	mov	r2, r3
 80098ee:	d30a      	bcc.n	8009906 <quorem+0x106>
 80098f0:	613c      	str	r4, [r7, #16]
 80098f2:	4630      	mov	r0, r6
 80098f4:	b003      	add	sp, #12
 80098f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80098fa:	6812      	ldr	r2, [r2, #0]
 80098fc:	3b04      	subs	r3, #4
 80098fe:	2a00      	cmp	r2, #0
 8009900:	d1cc      	bne.n	800989c <quorem+0x9c>
 8009902:	3c01      	subs	r4, #1
 8009904:	e7c7      	b.n	8009896 <quorem+0x96>
 8009906:	6812      	ldr	r2, [r2, #0]
 8009908:	3b04      	subs	r3, #4
 800990a:	2a00      	cmp	r2, #0
 800990c:	d1f0      	bne.n	80098f0 <quorem+0xf0>
 800990e:	3c01      	subs	r4, #1
 8009910:	e7eb      	b.n	80098ea <quorem+0xea>
 8009912:	2000      	movs	r0, #0
 8009914:	e7ee      	b.n	80098f4 <quorem+0xf4>
	...

08009918 <_dtoa_r>:
 8009918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800991c:	ed2d 8b04 	vpush	{d8-d9}
 8009920:	ec57 6b10 	vmov	r6, r7, d0
 8009924:	b093      	sub	sp, #76	; 0x4c
 8009926:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8009928:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800992c:	9106      	str	r1, [sp, #24]
 800992e:	ee10 aa10 	vmov	sl, s0
 8009932:	4604      	mov	r4, r0
 8009934:	9209      	str	r2, [sp, #36]	; 0x24
 8009936:	930c      	str	r3, [sp, #48]	; 0x30
 8009938:	46bb      	mov	fp, r7
 800993a:	b975      	cbnz	r5, 800995a <_dtoa_r+0x42>
 800993c:	2010      	movs	r0, #16
 800993e:	f001 f94d 	bl	800abdc <malloc>
 8009942:	4602      	mov	r2, r0
 8009944:	6260      	str	r0, [r4, #36]	; 0x24
 8009946:	b920      	cbnz	r0, 8009952 <_dtoa_r+0x3a>
 8009948:	4ba7      	ldr	r3, [pc, #668]	; (8009be8 <_dtoa_r+0x2d0>)
 800994a:	21ea      	movs	r1, #234	; 0xea
 800994c:	48a7      	ldr	r0, [pc, #668]	; (8009bec <_dtoa_r+0x2d4>)
 800994e:	f002 f8bd 	bl	800bacc <__assert_func>
 8009952:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8009956:	6005      	str	r5, [r0, #0]
 8009958:	60c5      	str	r5, [r0, #12]
 800995a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800995c:	6819      	ldr	r1, [r3, #0]
 800995e:	b151      	cbz	r1, 8009976 <_dtoa_r+0x5e>
 8009960:	685a      	ldr	r2, [r3, #4]
 8009962:	604a      	str	r2, [r1, #4]
 8009964:	2301      	movs	r3, #1
 8009966:	4093      	lsls	r3, r2
 8009968:	608b      	str	r3, [r1, #8]
 800996a:	4620      	mov	r0, r4
 800996c:	f001 f99e 	bl	800acac <_Bfree>
 8009970:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009972:	2200      	movs	r2, #0
 8009974:	601a      	str	r2, [r3, #0]
 8009976:	1e3b      	subs	r3, r7, #0
 8009978:	bfaa      	itet	ge
 800997a:	2300      	movge	r3, #0
 800997c:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8009980:	f8c8 3000 	strge.w	r3, [r8]
 8009984:	4b9a      	ldr	r3, [pc, #616]	; (8009bf0 <_dtoa_r+0x2d8>)
 8009986:	bfbc      	itt	lt
 8009988:	2201      	movlt	r2, #1
 800998a:	f8c8 2000 	strlt.w	r2, [r8]
 800998e:	ea33 030b 	bics.w	r3, r3, fp
 8009992:	d11b      	bne.n	80099cc <_dtoa_r+0xb4>
 8009994:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009996:	f242 730f 	movw	r3, #9999	; 0x270f
 800999a:	6013      	str	r3, [r2, #0]
 800999c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80099a0:	4333      	orrs	r3, r6
 80099a2:	f000 8592 	beq.w	800a4ca <_dtoa_r+0xbb2>
 80099a6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80099a8:	b963      	cbnz	r3, 80099c4 <_dtoa_r+0xac>
 80099aa:	4b92      	ldr	r3, [pc, #584]	; (8009bf4 <_dtoa_r+0x2dc>)
 80099ac:	e022      	b.n	80099f4 <_dtoa_r+0xdc>
 80099ae:	4b92      	ldr	r3, [pc, #584]	; (8009bf8 <_dtoa_r+0x2e0>)
 80099b0:	9301      	str	r3, [sp, #4]
 80099b2:	3308      	adds	r3, #8
 80099b4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80099b6:	6013      	str	r3, [r2, #0]
 80099b8:	9801      	ldr	r0, [sp, #4]
 80099ba:	b013      	add	sp, #76	; 0x4c
 80099bc:	ecbd 8b04 	vpop	{d8-d9}
 80099c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80099c4:	4b8b      	ldr	r3, [pc, #556]	; (8009bf4 <_dtoa_r+0x2dc>)
 80099c6:	9301      	str	r3, [sp, #4]
 80099c8:	3303      	adds	r3, #3
 80099ca:	e7f3      	b.n	80099b4 <_dtoa_r+0x9c>
 80099cc:	2200      	movs	r2, #0
 80099ce:	2300      	movs	r3, #0
 80099d0:	4650      	mov	r0, sl
 80099d2:	4659      	mov	r1, fp
 80099d4:	f7f7 f878 	bl	8000ac8 <__aeabi_dcmpeq>
 80099d8:	ec4b ab19 	vmov	d9, sl, fp
 80099dc:	4680      	mov	r8, r0
 80099de:	b158      	cbz	r0, 80099f8 <_dtoa_r+0xe0>
 80099e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80099e2:	2301      	movs	r3, #1
 80099e4:	6013      	str	r3, [r2, #0]
 80099e6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80099e8:	2b00      	cmp	r3, #0
 80099ea:	f000 856b 	beq.w	800a4c4 <_dtoa_r+0xbac>
 80099ee:	4883      	ldr	r0, [pc, #524]	; (8009bfc <_dtoa_r+0x2e4>)
 80099f0:	6018      	str	r0, [r3, #0]
 80099f2:	1e43      	subs	r3, r0, #1
 80099f4:	9301      	str	r3, [sp, #4]
 80099f6:	e7df      	b.n	80099b8 <_dtoa_r+0xa0>
 80099f8:	ec4b ab10 	vmov	d0, sl, fp
 80099fc:	aa10      	add	r2, sp, #64	; 0x40
 80099fe:	a911      	add	r1, sp, #68	; 0x44
 8009a00:	4620      	mov	r0, r4
 8009a02:	f001 fd01 	bl	800b408 <__d2b>
 8009a06:	f3cb 550a 	ubfx	r5, fp, #20, #11
 8009a0a:	ee08 0a10 	vmov	s16, r0
 8009a0e:	2d00      	cmp	r5, #0
 8009a10:	f000 8084 	beq.w	8009b1c <_dtoa_r+0x204>
 8009a14:	ee19 3a90 	vmov	r3, s19
 8009a18:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8009a1c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8009a20:	4656      	mov	r6, sl
 8009a22:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8009a26:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8009a2a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8009a2e:	4b74      	ldr	r3, [pc, #464]	; (8009c00 <_dtoa_r+0x2e8>)
 8009a30:	2200      	movs	r2, #0
 8009a32:	4630      	mov	r0, r6
 8009a34:	4639      	mov	r1, r7
 8009a36:	f7f6 fc27 	bl	8000288 <__aeabi_dsub>
 8009a3a:	a365      	add	r3, pc, #404	; (adr r3, 8009bd0 <_dtoa_r+0x2b8>)
 8009a3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a40:	f7f6 fdda 	bl	80005f8 <__aeabi_dmul>
 8009a44:	a364      	add	r3, pc, #400	; (adr r3, 8009bd8 <_dtoa_r+0x2c0>)
 8009a46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a4a:	f7f6 fc1f 	bl	800028c <__adddf3>
 8009a4e:	4606      	mov	r6, r0
 8009a50:	4628      	mov	r0, r5
 8009a52:	460f      	mov	r7, r1
 8009a54:	f7f6 fd66 	bl	8000524 <__aeabi_i2d>
 8009a58:	a361      	add	r3, pc, #388	; (adr r3, 8009be0 <_dtoa_r+0x2c8>)
 8009a5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a5e:	f7f6 fdcb 	bl	80005f8 <__aeabi_dmul>
 8009a62:	4602      	mov	r2, r0
 8009a64:	460b      	mov	r3, r1
 8009a66:	4630      	mov	r0, r6
 8009a68:	4639      	mov	r1, r7
 8009a6a:	f7f6 fc0f 	bl	800028c <__adddf3>
 8009a6e:	4606      	mov	r6, r0
 8009a70:	460f      	mov	r7, r1
 8009a72:	f7f7 f871 	bl	8000b58 <__aeabi_d2iz>
 8009a76:	2200      	movs	r2, #0
 8009a78:	9000      	str	r0, [sp, #0]
 8009a7a:	2300      	movs	r3, #0
 8009a7c:	4630      	mov	r0, r6
 8009a7e:	4639      	mov	r1, r7
 8009a80:	f7f7 f82c 	bl	8000adc <__aeabi_dcmplt>
 8009a84:	b150      	cbz	r0, 8009a9c <_dtoa_r+0x184>
 8009a86:	9800      	ldr	r0, [sp, #0]
 8009a88:	f7f6 fd4c 	bl	8000524 <__aeabi_i2d>
 8009a8c:	4632      	mov	r2, r6
 8009a8e:	463b      	mov	r3, r7
 8009a90:	f7f7 f81a 	bl	8000ac8 <__aeabi_dcmpeq>
 8009a94:	b910      	cbnz	r0, 8009a9c <_dtoa_r+0x184>
 8009a96:	9b00      	ldr	r3, [sp, #0]
 8009a98:	3b01      	subs	r3, #1
 8009a9a:	9300      	str	r3, [sp, #0]
 8009a9c:	9b00      	ldr	r3, [sp, #0]
 8009a9e:	2b16      	cmp	r3, #22
 8009aa0:	d85a      	bhi.n	8009b58 <_dtoa_r+0x240>
 8009aa2:	9a00      	ldr	r2, [sp, #0]
 8009aa4:	4b57      	ldr	r3, [pc, #348]	; (8009c04 <_dtoa_r+0x2ec>)
 8009aa6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8009aaa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009aae:	ec51 0b19 	vmov	r0, r1, d9
 8009ab2:	f7f7 f813 	bl	8000adc <__aeabi_dcmplt>
 8009ab6:	2800      	cmp	r0, #0
 8009ab8:	d050      	beq.n	8009b5c <_dtoa_r+0x244>
 8009aba:	9b00      	ldr	r3, [sp, #0]
 8009abc:	3b01      	subs	r3, #1
 8009abe:	9300      	str	r3, [sp, #0]
 8009ac0:	2300      	movs	r3, #0
 8009ac2:	930b      	str	r3, [sp, #44]	; 0x2c
 8009ac4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009ac6:	1b5d      	subs	r5, r3, r5
 8009ac8:	1e6b      	subs	r3, r5, #1
 8009aca:	9305      	str	r3, [sp, #20]
 8009acc:	bf45      	ittet	mi
 8009ace:	f1c5 0301 	rsbmi	r3, r5, #1
 8009ad2:	9304      	strmi	r3, [sp, #16]
 8009ad4:	2300      	movpl	r3, #0
 8009ad6:	2300      	movmi	r3, #0
 8009ad8:	bf4c      	ite	mi
 8009ada:	9305      	strmi	r3, [sp, #20]
 8009adc:	9304      	strpl	r3, [sp, #16]
 8009ade:	9b00      	ldr	r3, [sp, #0]
 8009ae0:	2b00      	cmp	r3, #0
 8009ae2:	db3d      	blt.n	8009b60 <_dtoa_r+0x248>
 8009ae4:	9b05      	ldr	r3, [sp, #20]
 8009ae6:	9a00      	ldr	r2, [sp, #0]
 8009ae8:	920a      	str	r2, [sp, #40]	; 0x28
 8009aea:	4413      	add	r3, r2
 8009aec:	9305      	str	r3, [sp, #20]
 8009aee:	2300      	movs	r3, #0
 8009af0:	9307      	str	r3, [sp, #28]
 8009af2:	9b06      	ldr	r3, [sp, #24]
 8009af4:	2b09      	cmp	r3, #9
 8009af6:	f200 8089 	bhi.w	8009c0c <_dtoa_r+0x2f4>
 8009afa:	2b05      	cmp	r3, #5
 8009afc:	bfc4      	itt	gt
 8009afe:	3b04      	subgt	r3, #4
 8009b00:	9306      	strgt	r3, [sp, #24]
 8009b02:	9b06      	ldr	r3, [sp, #24]
 8009b04:	f1a3 0302 	sub.w	r3, r3, #2
 8009b08:	bfcc      	ite	gt
 8009b0a:	2500      	movgt	r5, #0
 8009b0c:	2501      	movle	r5, #1
 8009b0e:	2b03      	cmp	r3, #3
 8009b10:	f200 8087 	bhi.w	8009c22 <_dtoa_r+0x30a>
 8009b14:	e8df f003 	tbb	[pc, r3]
 8009b18:	59383a2d 	.word	0x59383a2d
 8009b1c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8009b20:	441d      	add	r5, r3
 8009b22:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8009b26:	2b20      	cmp	r3, #32
 8009b28:	bfc1      	itttt	gt
 8009b2a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8009b2e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8009b32:	fa0b f303 	lslgt.w	r3, fp, r3
 8009b36:	fa26 f000 	lsrgt.w	r0, r6, r0
 8009b3a:	bfda      	itte	le
 8009b3c:	f1c3 0320 	rsble	r3, r3, #32
 8009b40:	fa06 f003 	lslle.w	r0, r6, r3
 8009b44:	4318      	orrgt	r0, r3
 8009b46:	f7f6 fcdd 	bl	8000504 <__aeabi_ui2d>
 8009b4a:	2301      	movs	r3, #1
 8009b4c:	4606      	mov	r6, r0
 8009b4e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8009b52:	3d01      	subs	r5, #1
 8009b54:	930e      	str	r3, [sp, #56]	; 0x38
 8009b56:	e76a      	b.n	8009a2e <_dtoa_r+0x116>
 8009b58:	2301      	movs	r3, #1
 8009b5a:	e7b2      	b.n	8009ac2 <_dtoa_r+0x1aa>
 8009b5c:	900b      	str	r0, [sp, #44]	; 0x2c
 8009b5e:	e7b1      	b.n	8009ac4 <_dtoa_r+0x1ac>
 8009b60:	9b04      	ldr	r3, [sp, #16]
 8009b62:	9a00      	ldr	r2, [sp, #0]
 8009b64:	1a9b      	subs	r3, r3, r2
 8009b66:	9304      	str	r3, [sp, #16]
 8009b68:	4253      	negs	r3, r2
 8009b6a:	9307      	str	r3, [sp, #28]
 8009b6c:	2300      	movs	r3, #0
 8009b6e:	930a      	str	r3, [sp, #40]	; 0x28
 8009b70:	e7bf      	b.n	8009af2 <_dtoa_r+0x1da>
 8009b72:	2300      	movs	r3, #0
 8009b74:	9308      	str	r3, [sp, #32]
 8009b76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009b78:	2b00      	cmp	r3, #0
 8009b7a:	dc55      	bgt.n	8009c28 <_dtoa_r+0x310>
 8009b7c:	2301      	movs	r3, #1
 8009b7e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8009b82:	461a      	mov	r2, r3
 8009b84:	9209      	str	r2, [sp, #36]	; 0x24
 8009b86:	e00c      	b.n	8009ba2 <_dtoa_r+0x28a>
 8009b88:	2301      	movs	r3, #1
 8009b8a:	e7f3      	b.n	8009b74 <_dtoa_r+0x25c>
 8009b8c:	2300      	movs	r3, #0
 8009b8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009b90:	9308      	str	r3, [sp, #32]
 8009b92:	9b00      	ldr	r3, [sp, #0]
 8009b94:	4413      	add	r3, r2
 8009b96:	9302      	str	r3, [sp, #8]
 8009b98:	3301      	adds	r3, #1
 8009b9a:	2b01      	cmp	r3, #1
 8009b9c:	9303      	str	r3, [sp, #12]
 8009b9e:	bfb8      	it	lt
 8009ba0:	2301      	movlt	r3, #1
 8009ba2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8009ba4:	2200      	movs	r2, #0
 8009ba6:	6042      	str	r2, [r0, #4]
 8009ba8:	2204      	movs	r2, #4
 8009baa:	f102 0614 	add.w	r6, r2, #20
 8009bae:	429e      	cmp	r6, r3
 8009bb0:	6841      	ldr	r1, [r0, #4]
 8009bb2:	d93d      	bls.n	8009c30 <_dtoa_r+0x318>
 8009bb4:	4620      	mov	r0, r4
 8009bb6:	f001 f839 	bl	800ac2c <_Balloc>
 8009bba:	9001      	str	r0, [sp, #4]
 8009bbc:	2800      	cmp	r0, #0
 8009bbe:	d13b      	bne.n	8009c38 <_dtoa_r+0x320>
 8009bc0:	4b11      	ldr	r3, [pc, #68]	; (8009c08 <_dtoa_r+0x2f0>)
 8009bc2:	4602      	mov	r2, r0
 8009bc4:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8009bc8:	e6c0      	b.n	800994c <_dtoa_r+0x34>
 8009bca:	2301      	movs	r3, #1
 8009bcc:	e7df      	b.n	8009b8e <_dtoa_r+0x276>
 8009bce:	bf00      	nop
 8009bd0:	636f4361 	.word	0x636f4361
 8009bd4:	3fd287a7 	.word	0x3fd287a7
 8009bd8:	8b60c8b3 	.word	0x8b60c8b3
 8009bdc:	3fc68a28 	.word	0x3fc68a28
 8009be0:	509f79fb 	.word	0x509f79fb
 8009be4:	3fd34413 	.word	0x3fd34413
 8009be8:	0800cc36 	.word	0x0800cc36
 8009bec:	0800cc4d 	.word	0x0800cc4d
 8009bf0:	7ff00000 	.word	0x7ff00000
 8009bf4:	0800cc32 	.word	0x0800cc32
 8009bf8:	0800cc29 	.word	0x0800cc29
 8009bfc:	0800caad 	.word	0x0800caad
 8009c00:	3ff80000 	.word	0x3ff80000
 8009c04:	0800cdb8 	.word	0x0800cdb8
 8009c08:	0800cca8 	.word	0x0800cca8
 8009c0c:	2501      	movs	r5, #1
 8009c0e:	2300      	movs	r3, #0
 8009c10:	9306      	str	r3, [sp, #24]
 8009c12:	9508      	str	r5, [sp, #32]
 8009c14:	f04f 33ff 	mov.w	r3, #4294967295
 8009c18:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8009c1c:	2200      	movs	r2, #0
 8009c1e:	2312      	movs	r3, #18
 8009c20:	e7b0      	b.n	8009b84 <_dtoa_r+0x26c>
 8009c22:	2301      	movs	r3, #1
 8009c24:	9308      	str	r3, [sp, #32]
 8009c26:	e7f5      	b.n	8009c14 <_dtoa_r+0x2fc>
 8009c28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009c2a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8009c2e:	e7b8      	b.n	8009ba2 <_dtoa_r+0x28a>
 8009c30:	3101      	adds	r1, #1
 8009c32:	6041      	str	r1, [r0, #4]
 8009c34:	0052      	lsls	r2, r2, #1
 8009c36:	e7b8      	b.n	8009baa <_dtoa_r+0x292>
 8009c38:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009c3a:	9a01      	ldr	r2, [sp, #4]
 8009c3c:	601a      	str	r2, [r3, #0]
 8009c3e:	9b03      	ldr	r3, [sp, #12]
 8009c40:	2b0e      	cmp	r3, #14
 8009c42:	f200 809d 	bhi.w	8009d80 <_dtoa_r+0x468>
 8009c46:	2d00      	cmp	r5, #0
 8009c48:	f000 809a 	beq.w	8009d80 <_dtoa_r+0x468>
 8009c4c:	9b00      	ldr	r3, [sp, #0]
 8009c4e:	2b00      	cmp	r3, #0
 8009c50:	dd32      	ble.n	8009cb8 <_dtoa_r+0x3a0>
 8009c52:	4ab7      	ldr	r2, [pc, #732]	; (8009f30 <_dtoa_r+0x618>)
 8009c54:	f003 030f 	and.w	r3, r3, #15
 8009c58:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009c5c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8009c60:	9b00      	ldr	r3, [sp, #0]
 8009c62:	05d8      	lsls	r0, r3, #23
 8009c64:	ea4f 1723 	mov.w	r7, r3, asr #4
 8009c68:	d516      	bpl.n	8009c98 <_dtoa_r+0x380>
 8009c6a:	4bb2      	ldr	r3, [pc, #712]	; (8009f34 <_dtoa_r+0x61c>)
 8009c6c:	ec51 0b19 	vmov	r0, r1, d9
 8009c70:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8009c74:	f7f6 fdea 	bl	800084c <__aeabi_ddiv>
 8009c78:	f007 070f 	and.w	r7, r7, #15
 8009c7c:	4682      	mov	sl, r0
 8009c7e:	468b      	mov	fp, r1
 8009c80:	2503      	movs	r5, #3
 8009c82:	4eac      	ldr	r6, [pc, #688]	; (8009f34 <_dtoa_r+0x61c>)
 8009c84:	b957      	cbnz	r7, 8009c9c <_dtoa_r+0x384>
 8009c86:	4642      	mov	r2, r8
 8009c88:	464b      	mov	r3, r9
 8009c8a:	4650      	mov	r0, sl
 8009c8c:	4659      	mov	r1, fp
 8009c8e:	f7f6 fddd 	bl	800084c <__aeabi_ddiv>
 8009c92:	4682      	mov	sl, r0
 8009c94:	468b      	mov	fp, r1
 8009c96:	e028      	b.n	8009cea <_dtoa_r+0x3d2>
 8009c98:	2502      	movs	r5, #2
 8009c9a:	e7f2      	b.n	8009c82 <_dtoa_r+0x36a>
 8009c9c:	07f9      	lsls	r1, r7, #31
 8009c9e:	d508      	bpl.n	8009cb2 <_dtoa_r+0x39a>
 8009ca0:	4640      	mov	r0, r8
 8009ca2:	4649      	mov	r1, r9
 8009ca4:	e9d6 2300 	ldrd	r2, r3, [r6]
 8009ca8:	f7f6 fca6 	bl	80005f8 <__aeabi_dmul>
 8009cac:	3501      	adds	r5, #1
 8009cae:	4680      	mov	r8, r0
 8009cb0:	4689      	mov	r9, r1
 8009cb2:	107f      	asrs	r7, r7, #1
 8009cb4:	3608      	adds	r6, #8
 8009cb6:	e7e5      	b.n	8009c84 <_dtoa_r+0x36c>
 8009cb8:	f000 809b 	beq.w	8009df2 <_dtoa_r+0x4da>
 8009cbc:	9b00      	ldr	r3, [sp, #0]
 8009cbe:	4f9d      	ldr	r7, [pc, #628]	; (8009f34 <_dtoa_r+0x61c>)
 8009cc0:	425e      	negs	r6, r3
 8009cc2:	4b9b      	ldr	r3, [pc, #620]	; (8009f30 <_dtoa_r+0x618>)
 8009cc4:	f006 020f 	and.w	r2, r6, #15
 8009cc8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8009ccc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009cd0:	ec51 0b19 	vmov	r0, r1, d9
 8009cd4:	f7f6 fc90 	bl	80005f8 <__aeabi_dmul>
 8009cd8:	1136      	asrs	r6, r6, #4
 8009cda:	4682      	mov	sl, r0
 8009cdc:	468b      	mov	fp, r1
 8009cde:	2300      	movs	r3, #0
 8009ce0:	2502      	movs	r5, #2
 8009ce2:	2e00      	cmp	r6, #0
 8009ce4:	d17a      	bne.n	8009ddc <_dtoa_r+0x4c4>
 8009ce6:	2b00      	cmp	r3, #0
 8009ce8:	d1d3      	bne.n	8009c92 <_dtoa_r+0x37a>
 8009cea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009cec:	2b00      	cmp	r3, #0
 8009cee:	f000 8082 	beq.w	8009df6 <_dtoa_r+0x4de>
 8009cf2:	4b91      	ldr	r3, [pc, #580]	; (8009f38 <_dtoa_r+0x620>)
 8009cf4:	2200      	movs	r2, #0
 8009cf6:	4650      	mov	r0, sl
 8009cf8:	4659      	mov	r1, fp
 8009cfa:	f7f6 feef 	bl	8000adc <__aeabi_dcmplt>
 8009cfe:	2800      	cmp	r0, #0
 8009d00:	d079      	beq.n	8009df6 <_dtoa_r+0x4de>
 8009d02:	9b03      	ldr	r3, [sp, #12]
 8009d04:	2b00      	cmp	r3, #0
 8009d06:	d076      	beq.n	8009df6 <_dtoa_r+0x4de>
 8009d08:	9b02      	ldr	r3, [sp, #8]
 8009d0a:	2b00      	cmp	r3, #0
 8009d0c:	dd36      	ble.n	8009d7c <_dtoa_r+0x464>
 8009d0e:	9b00      	ldr	r3, [sp, #0]
 8009d10:	4650      	mov	r0, sl
 8009d12:	4659      	mov	r1, fp
 8009d14:	1e5f      	subs	r7, r3, #1
 8009d16:	2200      	movs	r2, #0
 8009d18:	4b88      	ldr	r3, [pc, #544]	; (8009f3c <_dtoa_r+0x624>)
 8009d1a:	f7f6 fc6d 	bl	80005f8 <__aeabi_dmul>
 8009d1e:	9e02      	ldr	r6, [sp, #8]
 8009d20:	4682      	mov	sl, r0
 8009d22:	468b      	mov	fp, r1
 8009d24:	3501      	adds	r5, #1
 8009d26:	4628      	mov	r0, r5
 8009d28:	f7f6 fbfc 	bl	8000524 <__aeabi_i2d>
 8009d2c:	4652      	mov	r2, sl
 8009d2e:	465b      	mov	r3, fp
 8009d30:	f7f6 fc62 	bl	80005f8 <__aeabi_dmul>
 8009d34:	4b82      	ldr	r3, [pc, #520]	; (8009f40 <_dtoa_r+0x628>)
 8009d36:	2200      	movs	r2, #0
 8009d38:	f7f6 faa8 	bl	800028c <__adddf3>
 8009d3c:	46d0      	mov	r8, sl
 8009d3e:	46d9      	mov	r9, fp
 8009d40:	4682      	mov	sl, r0
 8009d42:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 8009d46:	2e00      	cmp	r6, #0
 8009d48:	d158      	bne.n	8009dfc <_dtoa_r+0x4e4>
 8009d4a:	4b7e      	ldr	r3, [pc, #504]	; (8009f44 <_dtoa_r+0x62c>)
 8009d4c:	2200      	movs	r2, #0
 8009d4e:	4640      	mov	r0, r8
 8009d50:	4649      	mov	r1, r9
 8009d52:	f7f6 fa99 	bl	8000288 <__aeabi_dsub>
 8009d56:	4652      	mov	r2, sl
 8009d58:	465b      	mov	r3, fp
 8009d5a:	4680      	mov	r8, r0
 8009d5c:	4689      	mov	r9, r1
 8009d5e:	f7f6 fedb 	bl	8000b18 <__aeabi_dcmpgt>
 8009d62:	2800      	cmp	r0, #0
 8009d64:	f040 8295 	bne.w	800a292 <_dtoa_r+0x97a>
 8009d68:	4652      	mov	r2, sl
 8009d6a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8009d6e:	4640      	mov	r0, r8
 8009d70:	4649      	mov	r1, r9
 8009d72:	f7f6 feb3 	bl	8000adc <__aeabi_dcmplt>
 8009d76:	2800      	cmp	r0, #0
 8009d78:	f040 8289 	bne.w	800a28e <_dtoa_r+0x976>
 8009d7c:	ec5b ab19 	vmov	sl, fp, d9
 8009d80:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009d82:	2b00      	cmp	r3, #0
 8009d84:	f2c0 8148 	blt.w	800a018 <_dtoa_r+0x700>
 8009d88:	9a00      	ldr	r2, [sp, #0]
 8009d8a:	2a0e      	cmp	r2, #14
 8009d8c:	f300 8144 	bgt.w	800a018 <_dtoa_r+0x700>
 8009d90:	4b67      	ldr	r3, [pc, #412]	; (8009f30 <_dtoa_r+0x618>)
 8009d92:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8009d96:	e9d3 8900 	ldrd	r8, r9, [r3]
 8009d9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009d9c:	2b00      	cmp	r3, #0
 8009d9e:	f280 80d5 	bge.w	8009f4c <_dtoa_r+0x634>
 8009da2:	9b03      	ldr	r3, [sp, #12]
 8009da4:	2b00      	cmp	r3, #0
 8009da6:	f300 80d1 	bgt.w	8009f4c <_dtoa_r+0x634>
 8009daa:	f040 826f 	bne.w	800a28c <_dtoa_r+0x974>
 8009dae:	4b65      	ldr	r3, [pc, #404]	; (8009f44 <_dtoa_r+0x62c>)
 8009db0:	2200      	movs	r2, #0
 8009db2:	4640      	mov	r0, r8
 8009db4:	4649      	mov	r1, r9
 8009db6:	f7f6 fc1f 	bl	80005f8 <__aeabi_dmul>
 8009dba:	4652      	mov	r2, sl
 8009dbc:	465b      	mov	r3, fp
 8009dbe:	f7f6 fea1 	bl	8000b04 <__aeabi_dcmpge>
 8009dc2:	9e03      	ldr	r6, [sp, #12]
 8009dc4:	4637      	mov	r7, r6
 8009dc6:	2800      	cmp	r0, #0
 8009dc8:	f040 8245 	bne.w	800a256 <_dtoa_r+0x93e>
 8009dcc:	9d01      	ldr	r5, [sp, #4]
 8009dce:	2331      	movs	r3, #49	; 0x31
 8009dd0:	f805 3b01 	strb.w	r3, [r5], #1
 8009dd4:	9b00      	ldr	r3, [sp, #0]
 8009dd6:	3301      	adds	r3, #1
 8009dd8:	9300      	str	r3, [sp, #0]
 8009dda:	e240      	b.n	800a25e <_dtoa_r+0x946>
 8009ddc:	07f2      	lsls	r2, r6, #31
 8009dde:	d505      	bpl.n	8009dec <_dtoa_r+0x4d4>
 8009de0:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009de4:	f7f6 fc08 	bl	80005f8 <__aeabi_dmul>
 8009de8:	3501      	adds	r5, #1
 8009dea:	2301      	movs	r3, #1
 8009dec:	1076      	asrs	r6, r6, #1
 8009dee:	3708      	adds	r7, #8
 8009df0:	e777      	b.n	8009ce2 <_dtoa_r+0x3ca>
 8009df2:	2502      	movs	r5, #2
 8009df4:	e779      	b.n	8009cea <_dtoa_r+0x3d2>
 8009df6:	9f00      	ldr	r7, [sp, #0]
 8009df8:	9e03      	ldr	r6, [sp, #12]
 8009dfa:	e794      	b.n	8009d26 <_dtoa_r+0x40e>
 8009dfc:	9901      	ldr	r1, [sp, #4]
 8009dfe:	4b4c      	ldr	r3, [pc, #304]	; (8009f30 <_dtoa_r+0x618>)
 8009e00:	4431      	add	r1, r6
 8009e02:	910d      	str	r1, [sp, #52]	; 0x34
 8009e04:	9908      	ldr	r1, [sp, #32]
 8009e06:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8009e0a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8009e0e:	2900      	cmp	r1, #0
 8009e10:	d043      	beq.n	8009e9a <_dtoa_r+0x582>
 8009e12:	494d      	ldr	r1, [pc, #308]	; (8009f48 <_dtoa_r+0x630>)
 8009e14:	2000      	movs	r0, #0
 8009e16:	f7f6 fd19 	bl	800084c <__aeabi_ddiv>
 8009e1a:	4652      	mov	r2, sl
 8009e1c:	465b      	mov	r3, fp
 8009e1e:	f7f6 fa33 	bl	8000288 <__aeabi_dsub>
 8009e22:	9d01      	ldr	r5, [sp, #4]
 8009e24:	4682      	mov	sl, r0
 8009e26:	468b      	mov	fp, r1
 8009e28:	4649      	mov	r1, r9
 8009e2a:	4640      	mov	r0, r8
 8009e2c:	f7f6 fe94 	bl	8000b58 <__aeabi_d2iz>
 8009e30:	4606      	mov	r6, r0
 8009e32:	f7f6 fb77 	bl	8000524 <__aeabi_i2d>
 8009e36:	4602      	mov	r2, r0
 8009e38:	460b      	mov	r3, r1
 8009e3a:	4640      	mov	r0, r8
 8009e3c:	4649      	mov	r1, r9
 8009e3e:	f7f6 fa23 	bl	8000288 <__aeabi_dsub>
 8009e42:	3630      	adds	r6, #48	; 0x30
 8009e44:	f805 6b01 	strb.w	r6, [r5], #1
 8009e48:	4652      	mov	r2, sl
 8009e4a:	465b      	mov	r3, fp
 8009e4c:	4680      	mov	r8, r0
 8009e4e:	4689      	mov	r9, r1
 8009e50:	f7f6 fe44 	bl	8000adc <__aeabi_dcmplt>
 8009e54:	2800      	cmp	r0, #0
 8009e56:	d163      	bne.n	8009f20 <_dtoa_r+0x608>
 8009e58:	4642      	mov	r2, r8
 8009e5a:	464b      	mov	r3, r9
 8009e5c:	4936      	ldr	r1, [pc, #216]	; (8009f38 <_dtoa_r+0x620>)
 8009e5e:	2000      	movs	r0, #0
 8009e60:	f7f6 fa12 	bl	8000288 <__aeabi_dsub>
 8009e64:	4652      	mov	r2, sl
 8009e66:	465b      	mov	r3, fp
 8009e68:	f7f6 fe38 	bl	8000adc <__aeabi_dcmplt>
 8009e6c:	2800      	cmp	r0, #0
 8009e6e:	f040 80b5 	bne.w	8009fdc <_dtoa_r+0x6c4>
 8009e72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009e74:	429d      	cmp	r5, r3
 8009e76:	d081      	beq.n	8009d7c <_dtoa_r+0x464>
 8009e78:	4b30      	ldr	r3, [pc, #192]	; (8009f3c <_dtoa_r+0x624>)
 8009e7a:	2200      	movs	r2, #0
 8009e7c:	4650      	mov	r0, sl
 8009e7e:	4659      	mov	r1, fp
 8009e80:	f7f6 fbba 	bl	80005f8 <__aeabi_dmul>
 8009e84:	4b2d      	ldr	r3, [pc, #180]	; (8009f3c <_dtoa_r+0x624>)
 8009e86:	4682      	mov	sl, r0
 8009e88:	468b      	mov	fp, r1
 8009e8a:	4640      	mov	r0, r8
 8009e8c:	4649      	mov	r1, r9
 8009e8e:	2200      	movs	r2, #0
 8009e90:	f7f6 fbb2 	bl	80005f8 <__aeabi_dmul>
 8009e94:	4680      	mov	r8, r0
 8009e96:	4689      	mov	r9, r1
 8009e98:	e7c6      	b.n	8009e28 <_dtoa_r+0x510>
 8009e9a:	4650      	mov	r0, sl
 8009e9c:	4659      	mov	r1, fp
 8009e9e:	f7f6 fbab 	bl	80005f8 <__aeabi_dmul>
 8009ea2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009ea4:	9d01      	ldr	r5, [sp, #4]
 8009ea6:	930f      	str	r3, [sp, #60]	; 0x3c
 8009ea8:	4682      	mov	sl, r0
 8009eaa:	468b      	mov	fp, r1
 8009eac:	4649      	mov	r1, r9
 8009eae:	4640      	mov	r0, r8
 8009eb0:	f7f6 fe52 	bl	8000b58 <__aeabi_d2iz>
 8009eb4:	4606      	mov	r6, r0
 8009eb6:	f7f6 fb35 	bl	8000524 <__aeabi_i2d>
 8009eba:	3630      	adds	r6, #48	; 0x30
 8009ebc:	4602      	mov	r2, r0
 8009ebe:	460b      	mov	r3, r1
 8009ec0:	4640      	mov	r0, r8
 8009ec2:	4649      	mov	r1, r9
 8009ec4:	f7f6 f9e0 	bl	8000288 <__aeabi_dsub>
 8009ec8:	f805 6b01 	strb.w	r6, [r5], #1
 8009ecc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009ece:	429d      	cmp	r5, r3
 8009ed0:	4680      	mov	r8, r0
 8009ed2:	4689      	mov	r9, r1
 8009ed4:	f04f 0200 	mov.w	r2, #0
 8009ed8:	d124      	bne.n	8009f24 <_dtoa_r+0x60c>
 8009eda:	4b1b      	ldr	r3, [pc, #108]	; (8009f48 <_dtoa_r+0x630>)
 8009edc:	4650      	mov	r0, sl
 8009ede:	4659      	mov	r1, fp
 8009ee0:	f7f6 f9d4 	bl	800028c <__adddf3>
 8009ee4:	4602      	mov	r2, r0
 8009ee6:	460b      	mov	r3, r1
 8009ee8:	4640      	mov	r0, r8
 8009eea:	4649      	mov	r1, r9
 8009eec:	f7f6 fe14 	bl	8000b18 <__aeabi_dcmpgt>
 8009ef0:	2800      	cmp	r0, #0
 8009ef2:	d173      	bne.n	8009fdc <_dtoa_r+0x6c4>
 8009ef4:	4652      	mov	r2, sl
 8009ef6:	465b      	mov	r3, fp
 8009ef8:	4913      	ldr	r1, [pc, #76]	; (8009f48 <_dtoa_r+0x630>)
 8009efa:	2000      	movs	r0, #0
 8009efc:	f7f6 f9c4 	bl	8000288 <__aeabi_dsub>
 8009f00:	4602      	mov	r2, r0
 8009f02:	460b      	mov	r3, r1
 8009f04:	4640      	mov	r0, r8
 8009f06:	4649      	mov	r1, r9
 8009f08:	f7f6 fde8 	bl	8000adc <__aeabi_dcmplt>
 8009f0c:	2800      	cmp	r0, #0
 8009f0e:	f43f af35 	beq.w	8009d7c <_dtoa_r+0x464>
 8009f12:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8009f14:	1e6b      	subs	r3, r5, #1
 8009f16:	930f      	str	r3, [sp, #60]	; 0x3c
 8009f18:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8009f1c:	2b30      	cmp	r3, #48	; 0x30
 8009f1e:	d0f8      	beq.n	8009f12 <_dtoa_r+0x5fa>
 8009f20:	9700      	str	r7, [sp, #0]
 8009f22:	e049      	b.n	8009fb8 <_dtoa_r+0x6a0>
 8009f24:	4b05      	ldr	r3, [pc, #20]	; (8009f3c <_dtoa_r+0x624>)
 8009f26:	f7f6 fb67 	bl	80005f8 <__aeabi_dmul>
 8009f2a:	4680      	mov	r8, r0
 8009f2c:	4689      	mov	r9, r1
 8009f2e:	e7bd      	b.n	8009eac <_dtoa_r+0x594>
 8009f30:	0800cdb8 	.word	0x0800cdb8
 8009f34:	0800cd90 	.word	0x0800cd90
 8009f38:	3ff00000 	.word	0x3ff00000
 8009f3c:	40240000 	.word	0x40240000
 8009f40:	401c0000 	.word	0x401c0000
 8009f44:	40140000 	.word	0x40140000
 8009f48:	3fe00000 	.word	0x3fe00000
 8009f4c:	9d01      	ldr	r5, [sp, #4]
 8009f4e:	4656      	mov	r6, sl
 8009f50:	465f      	mov	r7, fp
 8009f52:	4642      	mov	r2, r8
 8009f54:	464b      	mov	r3, r9
 8009f56:	4630      	mov	r0, r6
 8009f58:	4639      	mov	r1, r7
 8009f5a:	f7f6 fc77 	bl	800084c <__aeabi_ddiv>
 8009f5e:	f7f6 fdfb 	bl	8000b58 <__aeabi_d2iz>
 8009f62:	4682      	mov	sl, r0
 8009f64:	f7f6 fade 	bl	8000524 <__aeabi_i2d>
 8009f68:	4642      	mov	r2, r8
 8009f6a:	464b      	mov	r3, r9
 8009f6c:	f7f6 fb44 	bl	80005f8 <__aeabi_dmul>
 8009f70:	4602      	mov	r2, r0
 8009f72:	460b      	mov	r3, r1
 8009f74:	4630      	mov	r0, r6
 8009f76:	4639      	mov	r1, r7
 8009f78:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 8009f7c:	f7f6 f984 	bl	8000288 <__aeabi_dsub>
 8009f80:	f805 6b01 	strb.w	r6, [r5], #1
 8009f84:	9e01      	ldr	r6, [sp, #4]
 8009f86:	9f03      	ldr	r7, [sp, #12]
 8009f88:	1bae      	subs	r6, r5, r6
 8009f8a:	42b7      	cmp	r7, r6
 8009f8c:	4602      	mov	r2, r0
 8009f8e:	460b      	mov	r3, r1
 8009f90:	d135      	bne.n	8009ffe <_dtoa_r+0x6e6>
 8009f92:	f7f6 f97b 	bl	800028c <__adddf3>
 8009f96:	4642      	mov	r2, r8
 8009f98:	464b      	mov	r3, r9
 8009f9a:	4606      	mov	r6, r0
 8009f9c:	460f      	mov	r7, r1
 8009f9e:	f7f6 fdbb 	bl	8000b18 <__aeabi_dcmpgt>
 8009fa2:	b9d0      	cbnz	r0, 8009fda <_dtoa_r+0x6c2>
 8009fa4:	4642      	mov	r2, r8
 8009fa6:	464b      	mov	r3, r9
 8009fa8:	4630      	mov	r0, r6
 8009faa:	4639      	mov	r1, r7
 8009fac:	f7f6 fd8c 	bl	8000ac8 <__aeabi_dcmpeq>
 8009fb0:	b110      	cbz	r0, 8009fb8 <_dtoa_r+0x6a0>
 8009fb2:	f01a 0f01 	tst.w	sl, #1
 8009fb6:	d110      	bne.n	8009fda <_dtoa_r+0x6c2>
 8009fb8:	4620      	mov	r0, r4
 8009fba:	ee18 1a10 	vmov	r1, s16
 8009fbe:	f000 fe75 	bl	800acac <_Bfree>
 8009fc2:	2300      	movs	r3, #0
 8009fc4:	9800      	ldr	r0, [sp, #0]
 8009fc6:	702b      	strb	r3, [r5, #0]
 8009fc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009fca:	3001      	adds	r0, #1
 8009fcc:	6018      	str	r0, [r3, #0]
 8009fce:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8009fd0:	2b00      	cmp	r3, #0
 8009fd2:	f43f acf1 	beq.w	80099b8 <_dtoa_r+0xa0>
 8009fd6:	601d      	str	r5, [r3, #0]
 8009fd8:	e4ee      	b.n	80099b8 <_dtoa_r+0xa0>
 8009fda:	9f00      	ldr	r7, [sp, #0]
 8009fdc:	462b      	mov	r3, r5
 8009fde:	461d      	mov	r5, r3
 8009fe0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8009fe4:	2a39      	cmp	r2, #57	; 0x39
 8009fe6:	d106      	bne.n	8009ff6 <_dtoa_r+0x6de>
 8009fe8:	9a01      	ldr	r2, [sp, #4]
 8009fea:	429a      	cmp	r2, r3
 8009fec:	d1f7      	bne.n	8009fde <_dtoa_r+0x6c6>
 8009fee:	9901      	ldr	r1, [sp, #4]
 8009ff0:	2230      	movs	r2, #48	; 0x30
 8009ff2:	3701      	adds	r7, #1
 8009ff4:	700a      	strb	r2, [r1, #0]
 8009ff6:	781a      	ldrb	r2, [r3, #0]
 8009ff8:	3201      	adds	r2, #1
 8009ffa:	701a      	strb	r2, [r3, #0]
 8009ffc:	e790      	b.n	8009f20 <_dtoa_r+0x608>
 8009ffe:	4ba6      	ldr	r3, [pc, #664]	; (800a298 <_dtoa_r+0x980>)
 800a000:	2200      	movs	r2, #0
 800a002:	f7f6 faf9 	bl	80005f8 <__aeabi_dmul>
 800a006:	2200      	movs	r2, #0
 800a008:	2300      	movs	r3, #0
 800a00a:	4606      	mov	r6, r0
 800a00c:	460f      	mov	r7, r1
 800a00e:	f7f6 fd5b 	bl	8000ac8 <__aeabi_dcmpeq>
 800a012:	2800      	cmp	r0, #0
 800a014:	d09d      	beq.n	8009f52 <_dtoa_r+0x63a>
 800a016:	e7cf      	b.n	8009fb8 <_dtoa_r+0x6a0>
 800a018:	9a08      	ldr	r2, [sp, #32]
 800a01a:	2a00      	cmp	r2, #0
 800a01c:	f000 80d7 	beq.w	800a1ce <_dtoa_r+0x8b6>
 800a020:	9a06      	ldr	r2, [sp, #24]
 800a022:	2a01      	cmp	r2, #1
 800a024:	f300 80ba 	bgt.w	800a19c <_dtoa_r+0x884>
 800a028:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800a02a:	2a00      	cmp	r2, #0
 800a02c:	f000 80b2 	beq.w	800a194 <_dtoa_r+0x87c>
 800a030:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800a034:	9e07      	ldr	r6, [sp, #28]
 800a036:	9d04      	ldr	r5, [sp, #16]
 800a038:	9a04      	ldr	r2, [sp, #16]
 800a03a:	441a      	add	r2, r3
 800a03c:	9204      	str	r2, [sp, #16]
 800a03e:	9a05      	ldr	r2, [sp, #20]
 800a040:	2101      	movs	r1, #1
 800a042:	441a      	add	r2, r3
 800a044:	4620      	mov	r0, r4
 800a046:	9205      	str	r2, [sp, #20]
 800a048:	f000 ff32 	bl	800aeb0 <__i2b>
 800a04c:	4607      	mov	r7, r0
 800a04e:	2d00      	cmp	r5, #0
 800a050:	dd0c      	ble.n	800a06c <_dtoa_r+0x754>
 800a052:	9b05      	ldr	r3, [sp, #20]
 800a054:	2b00      	cmp	r3, #0
 800a056:	dd09      	ble.n	800a06c <_dtoa_r+0x754>
 800a058:	42ab      	cmp	r3, r5
 800a05a:	9a04      	ldr	r2, [sp, #16]
 800a05c:	bfa8      	it	ge
 800a05e:	462b      	movge	r3, r5
 800a060:	1ad2      	subs	r2, r2, r3
 800a062:	9204      	str	r2, [sp, #16]
 800a064:	9a05      	ldr	r2, [sp, #20]
 800a066:	1aed      	subs	r5, r5, r3
 800a068:	1ad3      	subs	r3, r2, r3
 800a06a:	9305      	str	r3, [sp, #20]
 800a06c:	9b07      	ldr	r3, [sp, #28]
 800a06e:	b31b      	cbz	r3, 800a0b8 <_dtoa_r+0x7a0>
 800a070:	9b08      	ldr	r3, [sp, #32]
 800a072:	2b00      	cmp	r3, #0
 800a074:	f000 80af 	beq.w	800a1d6 <_dtoa_r+0x8be>
 800a078:	2e00      	cmp	r6, #0
 800a07a:	dd13      	ble.n	800a0a4 <_dtoa_r+0x78c>
 800a07c:	4639      	mov	r1, r7
 800a07e:	4632      	mov	r2, r6
 800a080:	4620      	mov	r0, r4
 800a082:	f000 ffd5 	bl	800b030 <__pow5mult>
 800a086:	ee18 2a10 	vmov	r2, s16
 800a08a:	4601      	mov	r1, r0
 800a08c:	4607      	mov	r7, r0
 800a08e:	4620      	mov	r0, r4
 800a090:	f000 ff24 	bl	800aedc <__multiply>
 800a094:	ee18 1a10 	vmov	r1, s16
 800a098:	4680      	mov	r8, r0
 800a09a:	4620      	mov	r0, r4
 800a09c:	f000 fe06 	bl	800acac <_Bfree>
 800a0a0:	ee08 8a10 	vmov	s16, r8
 800a0a4:	9b07      	ldr	r3, [sp, #28]
 800a0a6:	1b9a      	subs	r2, r3, r6
 800a0a8:	d006      	beq.n	800a0b8 <_dtoa_r+0x7a0>
 800a0aa:	ee18 1a10 	vmov	r1, s16
 800a0ae:	4620      	mov	r0, r4
 800a0b0:	f000 ffbe 	bl	800b030 <__pow5mult>
 800a0b4:	ee08 0a10 	vmov	s16, r0
 800a0b8:	2101      	movs	r1, #1
 800a0ba:	4620      	mov	r0, r4
 800a0bc:	f000 fef8 	bl	800aeb0 <__i2b>
 800a0c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a0c2:	2b00      	cmp	r3, #0
 800a0c4:	4606      	mov	r6, r0
 800a0c6:	f340 8088 	ble.w	800a1da <_dtoa_r+0x8c2>
 800a0ca:	461a      	mov	r2, r3
 800a0cc:	4601      	mov	r1, r0
 800a0ce:	4620      	mov	r0, r4
 800a0d0:	f000 ffae 	bl	800b030 <__pow5mult>
 800a0d4:	9b06      	ldr	r3, [sp, #24]
 800a0d6:	2b01      	cmp	r3, #1
 800a0d8:	4606      	mov	r6, r0
 800a0da:	f340 8081 	ble.w	800a1e0 <_dtoa_r+0x8c8>
 800a0de:	f04f 0800 	mov.w	r8, #0
 800a0e2:	6933      	ldr	r3, [r6, #16]
 800a0e4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800a0e8:	6918      	ldr	r0, [r3, #16]
 800a0ea:	f000 fe91 	bl	800ae10 <__hi0bits>
 800a0ee:	f1c0 0020 	rsb	r0, r0, #32
 800a0f2:	9b05      	ldr	r3, [sp, #20]
 800a0f4:	4418      	add	r0, r3
 800a0f6:	f010 001f 	ands.w	r0, r0, #31
 800a0fa:	f000 8092 	beq.w	800a222 <_dtoa_r+0x90a>
 800a0fe:	f1c0 0320 	rsb	r3, r0, #32
 800a102:	2b04      	cmp	r3, #4
 800a104:	f340 808a 	ble.w	800a21c <_dtoa_r+0x904>
 800a108:	f1c0 001c 	rsb	r0, r0, #28
 800a10c:	9b04      	ldr	r3, [sp, #16]
 800a10e:	4403      	add	r3, r0
 800a110:	9304      	str	r3, [sp, #16]
 800a112:	9b05      	ldr	r3, [sp, #20]
 800a114:	4403      	add	r3, r0
 800a116:	4405      	add	r5, r0
 800a118:	9305      	str	r3, [sp, #20]
 800a11a:	9b04      	ldr	r3, [sp, #16]
 800a11c:	2b00      	cmp	r3, #0
 800a11e:	dd07      	ble.n	800a130 <_dtoa_r+0x818>
 800a120:	ee18 1a10 	vmov	r1, s16
 800a124:	461a      	mov	r2, r3
 800a126:	4620      	mov	r0, r4
 800a128:	f000 ffdc 	bl	800b0e4 <__lshift>
 800a12c:	ee08 0a10 	vmov	s16, r0
 800a130:	9b05      	ldr	r3, [sp, #20]
 800a132:	2b00      	cmp	r3, #0
 800a134:	dd05      	ble.n	800a142 <_dtoa_r+0x82a>
 800a136:	4631      	mov	r1, r6
 800a138:	461a      	mov	r2, r3
 800a13a:	4620      	mov	r0, r4
 800a13c:	f000 ffd2 	bl	800b0e4 <__lshift>
 800a140:	4606      	mov	r6, r0
 800a142:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a144:	2b00      	cmp	r3, #0
 800a146:	d06e      	beq.n	800a226 <_dtoa_r+0x90e>
 800a148:	ee18 0a10 	vmov	r0, s16
 800a14c:	4631      	mov	r1, r6
 800a14e:	f001 f839 	bl	800b1c4 <__mcmp>
 800a152:	2800      	cmp	r0, #0
 800a154:	da67      	bge.n	800a226 <_dtoa_r+0x90e>
 800a156:	9b00      	ldr	r3, [sp, #0]
 800a158:	3b01      	subs	r3, #1
 800a15a:	ee18 1a10 	vmov	r1, s16
 800a15e:	9300      	str	r3, [sp, #0]
 800a160:	220a      	movs	r2, #10
 800a162:	2300      	movs	r3, #0
 800a164:	4620      	mov	r0, r4
 800a166:	f000 fdc3 	bl	800acf0 <__multadd>
 800a16a:	9b08      	ldr	r3, [sp, #32]
 800a16c:	ee08 0a10 	vmov	s16, r0
 800a170:	2b00      	cmp	r3, #0
 800a172:	f000 81b1 	beq.w	800a4d8 <_dtoa_r+0xbc0>
 800a176:	2300      	movs	r3, #0
 800a178:	4639      	mov	r1, r7
 800a17a:	220a      	movs	r2, #10
 800a17c:	4620      	mov	r0, r4
 800a17e:	f000 fdb7 	bl	800acf0 <__multadd>
 800a182:	9b02      	ldr	r3, [sp, #8]
 800a184:	2b00      	cmp	r3, #0
 800a186:	4607      	mov	r7, r0
 800a188:	f300 808e 	bgt.w	800a2a8 <_dtoa_r+0x990>
 800a18c:	9b06      	ldr	r3, [sp, #24]
 800a18e:	2b02      	cmp	r3, #2
 800a190:	dc51      	bgt.n	800a236 <_dtoa_r+0x91e>
 800a192:	e089      	b.n	800a2a8 <_dtoa_r+0x990>
 800a194:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a196:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800a19a:	e74b      	b.n	800a034 <_dtoa_r+0x71c>
 800a19c:	9b03      	ldr	r3, [sp, #12]
 800a19e:	1e5e      	subs	r6, r3, #1
 800a1a0:	9b07      	ldr	r3, [sp, #28]
 800a1a2:	42b3      	cmp	r3, r6
 800a1a4:	bfbf      	itttt	lt
 800a1a6:	9b07      	ldrlt	r3, [sp, #28]
 800a1a8:	9607      	strlt	r6, [sp, #28]
 800a1aa:	1af2      	sublt	r2, r6, r3
 800a1ac:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800a1ae:	bfb6      	itet	lt
 800a1b0:	189b      	addlt	r3, r3, r2
 800a1b2:	1b9e      	subge	r6, r3, r6
 800a1b4:	930a      	strlt	r3, [sp, #40]	; 0x28
 800a1b6:	9b03      	ldr	r3, [sp, #12]
 800a1b8:	bfb8      	it	lt
 800a1ba:	2600      	movlt	r6, #0
 800a1bc:	2b00      	cmp	r3, #0
 800a1be:	bfb7      	itett	lt
 800a1c0:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800a1c4:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800a1c8:	1a9d      	sublt	r5, r3, r2
 800a1ca:	2300      	movlt	r3, #0
 800a1cc:	e734      	b.n	800a038 <_dtoa_r+0x720>
 800a1ce:	9e07      	ldr	r6, [sp, #28]
 800a1d0:	9d04      	ldr	r5, [sp, #16]
 800a1d2:	9f08      	ldr	r7, [sp, #32]
 800a1d4:	e73b      	b.n	800a04e <_dtoa_r+0x736>
 800a1d6:	9a07      	ldr	r2, [sp, #28]
 800a1d8:	e767      	b.n	800a0aa <_dtoa_r+0x792>
 800a1da:	9b06      	ldr	r3, [sp, #24]
 800a1dc:	2b01      	cmp	r3, #1
 800a1de:	dc18      	bgt.n	800a212 <_dtoa_r+0x8fa>
 800a1e0:	f1ba 0f00 	cmp.w	sl, #0
 800a1e4:	d115      	bne.n	800a212 <_dtoa_r+0x8fa>
 800a1e6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800a1ea:	b993      	cbnz	r3, 800a212 <_dtoa_r+0x8fa>
 800a1ec:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800a1f0:	0d1b      	lsrs	r3, r3, #20
 800a1f2:	051b      	lsls	r3, r3, #20
 800a1f4:	b183      	cbz	r3, 800a218 <_dtoa_r+0x900>
 800a1f6:	9b04      	ldr	r3, [sp, #16]
 800a1f8:	3301      	adds	r3, #1
 800a1fa:	9304      	str	r3, [sp, #16]
 800a1fc:	9b05      	ldr	r3, [sp, #20]
 800a1fe:	3301      	adds	r3, #1
 800a200:	9305      	str	r3, [sp, #20]
 800a202:	f04f 0801 	mov.w	r8, #1
 800a206:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a208:	2b00      	cmp	r3, #0
 800a20a:	f47f af6a 	bne.w	800a0e2 <_dtoa_r+0x7ca>
 800a20e:	2001      	movs	r0, #1
 800a210:	e76f      	b.n	800a0f2 <_dtoa_r+0x7da>
 800a212:	f04f 0800 	mov.w	r8, #0
 800a216:	e7f6      	b.n	800a206 <_dtoa_r+0x8ee>
 800a218:	4698      	mov	r8, r3
 800a21a:	e7f4      	b.n	800a206 <_dtoa_r+0x8ee>
 800a21c:	f43f af7d 	beq.w	800a11a <_dtoa_r+0x802>
 800a220:	4618      	mov	r0, r3
 800a222:	301c      	adds	r0, #28
 800a224:	e772      	b.n	800a10c <_dtoa_r+0x7f4>
 800a226:	9b03      	ldr	r3, [sp, #12]
 800a228:	2b00      	cmp	r3, #0
 800a22a:	dc37      	bgt.n	800a29c <_dtoa_r+0x984>
 800a22c:	9b06      	ldr	r3, [sp, #24]
 800a22e:	2b02      	cmp	r3, #2
 800a230:	dd34      	ble.n	800a29c <_dtoa_r+0x984>
 800a232:	9b03      	ldr	r3, [sp, #12]
 800a234:	9302      	str	r3, [sp, #8]
 800a236:	9b02      	ldr	r3, [sp, #8]
 800a238:	b96b      	cbnz	r3, 800a256 <_dtoa_r+0x93e>
 800a23a:	4631      	mov	r1, r6
 800a23c:	2205      	movs	r2, #5
 800a23e:	4620      	mov	r0, r4
 800a240:	f000 fd56 	bl	800acf0 <__multadd>
 800a244:	4601      	mov	r1, r0
 800a246:	4606      	mov	r6, r0
 800a248:	ee18 0a10 	vmov	r0, s16
 800a24c:	f000 ffba 	bl	800b1c4 <__mcmp>
 800a250:	2800      	cmp	r0, #0
 800a252:	f73f adbb 	bgt.w	8009dcc <_dtoa_r+0x4b4>
 800a256:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a258:	9d01      	ldr	r5, [sp, #4]
 800a25a:	43db      	mvns	r3, r3
 800a25c:	9300      	str	r3, [sp, #0]
 800a25e:	f04f 0800 	mov.w	r8, #0
 800a262:	4631      	mov	r1, r6
 800a264:	4620      	mov	r0, r4
 800a266:	f000 fd21 	bl	800acac <_Bfree>
 800a26a:	2f00      	cmp	r7, #0
 800a26c:	f43f aea4 	beq.w	8009fb8 <_dtoa_r+0x6a0>
 800a270:	f1b8 0f00 	cmp.w	r8, #0
 800a274:	d005      	beq.n	800a282 <_dtoa_r+0x96a>
 800a276:	45b8      	cmp	r8, r7
 800a278:	d003      	beq.n	800a282 <_dtoa_r+0x96a>
 800a27a:	4641      	mov	r1, r8
 800a27c:	4620      	mov	r0, r4
 800a27e:	f000 fd15 	bl	800acac <_Bfree>
 800a282:	4639      	mov	r1, r7
 800a284:	4620      	mov	r0, r4
 800a286:	f000 fd11 	bl	800acac <_Bfree>
 800a28a:	e695      	b.n	8009fb8 <_dtoa_r+0x6a0>
 800a28c:	2600      	movs	r6, #0
 800a28e:	4637      	mov	r7, r6
 800a290:	e7e1      	b.n	800a256 <_dtoa_r+0x93e>
 800a292:	9700      	str	r7, [sp, #0]
 800a294:	4637      	mov	r7, r6
 800a296:	e599      	b.n	8009dcc <_dtoa_r+0x4b4>
 800a298:	40240000 	.word	0x40240000
 800a29c:	9b08      	ldr	r3, [sp, #32]
 800a29e:	2b00      	cmp	r3, #0
 800a2a0:	f000 80ca 	beq.w	800a438 <_dtoa_r+0xb20>
 800a2a4:	9b03      	ldr	r3, [sp, #12]
 800a2a6:	9302      	str	r3, [sp, #8]
 800a2a8:	2d00      	cmp	r5, #0
 800a2aa:	dd05      	ble.n	800a2b8 <_dtoa_r+0x9a0>
 800a2ac:	4639      	mov	r1, r7
 800a2ae:	462a      	mov	r2, r5
 800a2b0:	4620      	mov	r0, r4
 800a2b2:	f000 ff17 	bl	800b0e4 <__lshift>
 800a2b6:	4607      	mov	r7, r0
 800a2b8:	f1b8 0f00 	cmp.w	r8, #0
 800a2bc:	d05b      	beq.n	800a376 <_dtoa_r+0xa5e>
 800a2be:	6879      	ldr	r1, [r7, #4]
 800a2c0:	4620      	mov	r0, r4
 800a2c2:	f000 fcb3 	bl	800ac2c <_Balloc>
 800a2c6:	4605      	mov	r5, r0
 800a2c8:	b928      	cbnz	r0, 800a2d6 <_dtoa_r+0x9be>
 800a2ca:	4b87      	ldr	r3, [pc, #540]	; (800a4e8 <_dtoa_r+0xbd0>)
 800a2cc:	4602      	mov	r2, r0
 800a2ce:	f240 21ea 	movw	r1, #746	; 0x2ea
 800a2d2:	f7ff bb3b 	b.w	800994c <_dtoa_r+0x34>
 800a2d6:	693a      	ldr	r2, [r7, #16]
 800a2d8:	3202      	adds	r2, #2
 800a2da:	0092      	lsls	r2, r2, #2
 800a2dc:	f107 010c 	add.w	r1, r7, #12
 800a2e0:	300c      	adds	r0, #12
 800a2e2:	f000 fc95 	bl	800ac10 <memcpy>
 800a2e6:	2201      	movs	r2, #1
 800a2e8:	4629      	mov	r1, r5
 800a2ea:	4620      	mov	r0, r4
 800a2ec:	f000 fefa 	bl	800b0e4 <__lshift>
 800a2f0:	9b01      	ldr	r3, [sp, #4]
 800a2f2:	f103 0901 	add.w	r9, r3, #1
 800a2f6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800a2fa:	4413      	add	r3, r2
 800a2fc:	9305      	str	r3, [sp, #20]
 800a2fe:	f00a 0301 	and.w	r3, sl, #1
 800a302:	46b8      	mov	r8, r7
 800a304:	9304      	str	r3, [sp, #16]
 800a306:	4607      	mov	r7, r0
 800a308:	4631      	mov	r1, r6
 800a30a:	ee18 0a10 	vmov	r0, s16
 800a30e:	f7ff fa77 	bl	8009800 <quorem>
 800a312:	4641      	mov	r1, r8
 800a314:	9002      	str	r0, [sp, #8]
 800a316:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800a31a:	ee18 0a10 	vmov	r0, s16
 800a31e:	f000 ff51 	bl	800b1c4 <__mcmp>
 800a322:	463a      	mov	r2, r7
 800a324:	9003      	str	r0, [sp, #12]
 800a326:	4631      	mov	r1, r6
 800a328:	4620      	mov	r0, r4
 800a32a:	f000 ff67 	bl	800b1fc <__mdiff>
 800a32e:	68c2      	ldr	r2, [r0, #12]
 800a330:	f109 3bff 	add.w	fp, r9, #4294967295
 800a334:	4605      	mov	r5, r0
 800a336:	bb02      	cbnz	r2, 800a37a <_dtoa_r+0xa62>
 800a338:	4601      	mov	r1, r0
 800a33a:	ee18 0a10 	vmov	r0, s16
 800a33e:	f000 ff41 	bl	800b1c4 <__mcmp>
 800a342:	4602      	mov	r2, r0
 800a344:	4629      	mov	r1, r5
 800a346:	4620      	mov	r0, r4
 800a348:	9207      	str	r2, [sp, #28]
 800a34a:	f000 fcaf 	bl	800acac <_Bfree>
 800a34e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800a352:	ea43 0102 	orr.w	r1, r3, r2
 800a356:	9b04      	ldr	r3, [sp, #16]
 800a358:	430b      	orrs	r3, r1
 800a35a:	464d      	mov	r5, r9
 800a35c:	d10f      	bne.n	800a37e <_dtoa_r+0xa66>
 800a35e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800a362:	d02a      	beq.n	800a3ba <_dtoa_r+0xaa2>
 800a364:	9b03      	ldr	r3, [sp, #12]
 800a366:	2b00      	cmp	r3, #0
 800a368:	dd02      	ble.n	800a370 <_dtoa_r+0xa58>
 800a36a:	9b02      	ldr	r3, [sp, #8]
 800a36c:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800a370:	f88b a000 	strb.w	sl, [fp]
 800a374:	e775      	b.n	800a262 <_dtoa_r+0x94a>
 800a376:	4638      	mov	r0, r7
 800a378:	e7ba      	b.n	800a2f0 <_dtoa_r+0x9d8>
 800a37a:	2201      	movs	r2, #1
 800a37c:	e7e2      	b.n	800a344 <_dtoa_r+0xa2c>
 800a37e:	9b03      	ldr	r3, [sp, #12]
 800a380:	2b00      	cmp	r3, #0
 800a382:	db04      	blt.n	800a38e <_dtoa_r+0xa76>
 800a384:	9906      	ldr	r1, [sp, #24]
 800a386:	430b      	orrs	r3, r1
 800a388:	9904      	ldr	r1, [sp, #16]
 800a38a:	430b      	orrs	r3, r1
 800a38c:	d122      	bne.n	800a3d4 <_dtoa_r+0xabc>
 800a38e:	2a00      	cmp	r2, #0
 800a390:	ddee      	ble.n	800a370 <_dtoa_r+0xa58>
 800a392:	ee18 1a10 	vmov	r1, s16
 800a396:	2201      	movs	r2, #1
 800a398:	4620      	mov	r0, r4
 800a39a:	f000 fea3 	bl	800b0e4 <__lshift>
 800a39e:	4631      	mov	r1, r6
 800a3a0:	ee08 0a10 	vmov	s16, r0
 800a3a4:	f000 ff0e 	bl	800b1c4 <__mcmp>
 800a3a8:	2800      	cmp	r0, #0
 800a3aa:	dc03      	bgt.n	800a3b4 <_dtoa_r+0xa9c>
 800a3ac:	d1e0      	bne.n	800a370 <_dtoa_r+0xa58>
 800a3ae:	f01a 0f01 	tst.w	sl, #1
 800a3b2:	d0dd      	beq.n	800a370 <_dtoa_r+0xa58>
 800a3b4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800a3b8:	d1d7      	bne.n	800a36a <_dtoa_r+0xa52>
 800a3ba:	2339      	movs	r3, #57	; 0x39
 800a3bc:	f88b 3000 	strb.w	r3, [fp]
 800a3c0:	462b      	mov	r3, r5
 800a3c2:	461d      	mov	r5, r3
 800a3c4:	3b01      	subs	r3, #1
 800a3c6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800a3ca:	2a39      	cmp	r2, #57	; 0x39
 800a3cc:	d071      	beq.n	800a4b2 <_dtoa_r+0xb9a>
 800a3ce:	3201      	adds	r2, #1
 800a3d0:	701a      	strb	r2, [r3, #0]
 800a3d2:	e746      	b.n	800a262 <_dtoa_r+0x94a>
 800a3d4:	2a00      	cmp	r2, #0
 800a3d6:	dd07      	ble.n	800a3e8 <_dtoa_r+0xad0>
 800a3d8:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800a3dc:	d0ed      	beq.n	800a3ba <_dtoa_r+0xaa2>
 800a3de:	f10a 0301 	add.w	r3, sl, #1
 800a3e2:	f88b 3000 	strb.w	r3, [fp]
 800a3e6:	e73c      	b.n	800a262 <_dtoa_r+0x94a>
 800a3e8:	9b05      	ldr	r3, [sp, #20]
 800a3ea:	f809 ac01 	strb.w	sl, [r9, #-1]
 800a3ee:	4599      	cmp	r9, r3
 800a3f0:	d047      	beq.n	800a482 <_dtoa_r+0xb6a>
 800a3f2:	ee18 1a10 	vmov	r1, s16
 800a3f6:	2300      	movs	r3, #0
 800a3f8:	220a      	movs	r2, #10
 800a3fa:	4620      	mov	r0, r4
 800a3fc:	f000 fc78 	bl	800acf0 <__multadd>
 800a400:	45b8      	cmp	r8, r7
 800a402:	ee08 0a10 	vmov	s16, r0
 800a406:	f04f 0300 	mov.w	r3, #0
 800a40a:	f04f 020a 	mov.w	r2, #10
 800a40e:	4641      	mov	r1, r8
 800a410:	4620      	mov	r0, r4
 800a412:	d106      	bne.n	800a422 <_dtoa_r+0xb0a>
 800a414:	f000 fc6c 	bl	800acf0 <__multadd>
 800a418:	4680      	mov	r8, r0
 800a41a:	4607      	mov	r7, r0
 800a41c:	f109 0901 	add.w	r9, r9, #1
 800a420:	e772      	b.n	800a308 <_dtoa_r+0x9f0>
 800a422:	f000 fc65 	bl	800acf0 <__multadd>
 800a426:	4639      	mov	r1, r7
 800a428:	4680      	mov	r8, r0
 800a42a:	2300      	movs	r3, #0
 800a42c:	220a      	movs	r2, #10
 800a42e:	4620      	mov	r0, r4
 800a430:	f000 fc5e 	bl	800acf0 <__multadd>
 800a434:	4607      	mov	r7, r0
 800a436:	e7f1      	b.n	800a41c <_dtoa_r+0xb04>
 800a438:	9b03      	ldr	r3, [sp, #12]
 800a43a:	9302      	str	r3, [sp, #8]
 800a43c:	9d01      	ldr	r5, [sp, #4]
 800a43e:	ee18 0a10 	vmov	r0, s16
 800a442:	4631      	mov	r1, r6
 800a444:	f7ff f9dc 	bl	8009800 <quorem>
 800a448:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800a44c:	9b01      	ldr	r3, [sp, #4]
 800a44e:	f805 ab01 	strb.w	sl, [r5], #1
 800a452:	1aea      	subs	r2, r5, r3
 800a454:	9b02      	ldr	r3, [sp, #8]
 800a456:	4293      	cmp	r3, r2
 800a458:	dd09      	ble.n	800a46e <_dtoa_r+0xb56>
 800a45a:	ee18 1a10 	vmov	r1, s16
 800a45e:	2300      	movs	r3, #0
 800a460:	220a      	movs	r2, #10
 800a462:	4620      	mov	r0, r4
 800a464:	f000 fc44 	bl	800acf0 <__multadd>
 800a468:	ee08 0a10 	vmov	s16, r0
 800a46c:	e7e7      	b.n	800a43e <_dtoa_r+0xb26>
 800a46e:	9b02      	ldr	r3, [sp, #8]
 800a470:	2b00      	cmp	r3, #0
 800a472:	bfc8      	it	gt
 800a474:	461d      	movgt	r5, r3
 800a476:	9b01      	ldr	r3, [sp, #4]
 800a478:	bfd8      	it	le
 800a47a:	2501      	movle	r5, #1
 800a47c:	441d      	add	r5, r3
 800a47e:	f04f 0800 	mov.w	r8, #0
 800a482:	ee18 1a10 	vmov	r1, s16
 800a486:	2201      	movs	r2, #1
 800a488:	4620      	mov	r0, r4
 800a48a:	f000 fe2b 	bl	800b0e4 <__lshift>
 800a48e:	4631      	mov	r1, r6
 800a490:	ee08 0a10 	vmov	s16, r0
 800a494:	f000 fe96 	bl	800b1c4 <__mcmp>
 800a498:	2800      	cmp	r0, #0
 800a49a:	dc91      	bgt.n	800a3c0 <_dtoa_r+0xaa8>
 800a49c:	d102      	bne.n	800a4a4 <_dtoa_r+0xb8c>
 800a49e:	f01a 0f01 	tst.w	sl, #1
 800a4a2:	d18d      	bne.n	800a3c0 <_dtoa_r+0xaa8>
 800a4a4:	462b      	mov	r3, r5
 800a4a6:	461d      	mov	r5, r3
 800a4a8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800a4ac:	2a30      	cmp	r2, #48	; 0x30
 800a4ae:	d0fa      	beq.n	800a4a6 <_dtoa_r+0xb8e>
 800a4b0:	e6d7      	b.n	800a262 <_dtoa_r+0x94a>
 800a4b2:	9a01      	ldr	r2, [sp, #4]
 800a4b4:	429a      	cmp	r2, r3
 800a4b6:	d184      	bne.n	800a3c2 <_dtoa_r+0xaaa>
 800a4b8:	9b00      	ldr	r3, [sp, #0]
 800a4ba:	3301      	adds	r3, #1
 800a4bc:	9300      	str	r3, [sp, #0]
 800a4be:	2331      	movs	r3, #49	; 0x31
 800a4c0:	7013      	strb	r3, [r2, #0]
 800a4c2:	e6ce      	b.n	800a262 <_dtoa_r+0x94a>
 800a4c4:	4b09      	ldr	r3, [pc, #36]	; (800a4ec <_dtoa_r+0xbd4>)
 800a4c6:	f7ff ba95 	b.w	80099f4 <_dtoa_r+0xdc>
 800a4ca:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a4cc:	2b00      	cmp	r3, #0
 800a4ce:	f47f aa6e 	bne.w	80099ae <_dtoa_r+0x96>
 800a4d2:	4b07      	ldr	r3, [pc, #28]	; (800a4f0 <_dtoa_r+0xbd8>)
 800a4d4:	f7ff ba8e 	b.w	80099f4 <_dtoa_r+0xdc>
 800a4d8:	9b02      	ldr	r3, [sp, #8]
 800a4da:	2b00      	cmp	r3, #0
 800a4dc:	dcae      	bgt.n	800a43c <_dtoa_r+0xb24>
 800a4de:	9b06      	ldr	r3, [sp, #24]
 800a4e0:	2b02      	cmp	r3, #2
 800a4e2:	f73f aea8 	bgt.w	800a236 <_dtoa_r+0x91e>
 800a4e6:	e7a9      	b.n	800a43c <_dtoa_r+0xb24>
 800a4e8:	0800cca8 	.word	0x0800cca8
 800a4ec:	0800caac 	.word	0x0800caac
 800a4f0:	0800cc29 	.word	0x0800cc29

0800a4f4 <rshift>:
 800a4f4:	6903      	ldr	r3, [r0, #16]
 800a4f6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800a4fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a4fe:	ea4f 1261 	mov.w	r2, r1, asr #5
 800a502:	f100 0414 	add.w	r4, r0, #20
 800a506:	dd45      	ble.n	800a594 <rshift+0xa0>
 800a508:	f011 011f 	ands.w	r1, r1, #31
 800a50c:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800a510:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800a514:	d10c      	bne.n	800a530 <rshift+0x3c>
 800a516:	f100 0710 	add.w	r7, r0, #16
 800a51a:	4629      	mov	r1, r5
 800a51c:	42b1      	cmp	r1, r6
 800a51e:	d334      	bcc.n	800a58a <rshift+0x96>
 800a520:	1a9b      	subs	r3, r3, r2
 800a522:	009b      	lsls	r3, r3, #2
 800a524:	1eea      	subs	r2, r5, #3
 800a526:	4296      	cmp	r6, r2
 800a528:	bf38      	it	cc
 800a52a:	2300      	movcc	r3, #0
 800a52c:	4423      	add	r3, r4
 800a52e:	e015      	b.n	800a55c <rshift+0x68>
 800a530:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800a534:	f1c1 0820 	rsb	r8, r1, #32
 800a538:	40cf      	lsrs	r7, r1
 800a53a:	f105 0e04 	add.w	lr, r5, #4
 800a53e:	46a1      	mov	r9, r4
 800a540:	4576      	cmp	r6, lr
 800a542:	46f4      	mov	ip, lr
 800a544:	d815      	bhi.n	800a572 <rshift+0x7e>
 800a546:	1a9a      	subs	r2, r3, r2
 800a548:	0092      	lsls	r2, r2, #2
 800a54a:	3a04      	subs	r2, #4
 800a54c:	3501      	adds	r5, #1
 800a54e:	42ae      	cmp	r6, r5
 800a550:	bf38      	it	cc
 800a552:	2200      	movcc	r2, #0
 800a554:	18a3      	adds	r3, r4, r2
 800a556:	50a7      	str	r7, [r4, r2]
 800a558:	b107      	cbz	r7, 800a55c <rshift+0x68>
 800a55a:	3304      	adds	r3, #4
 800a55c:	1b1a      	subs	r2, r3, r4
 800a55e:	42a3      	cmp	r3, r4
 800a560:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800a564:	bf08      	it	eq
 800a566:	2300      	moveq	r3, #0
 800a568:	6102      	str	r2, [r0, #16]
 800a56a:	bf08      	it	eq
 800a56c:	6143      	streq	r3, [r0, #20]
 800a56e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a572:	f8dc c000 	ldr.w	ip, [ip]
 800a576:	fa0c fc08 	lsl.w	ip, ip, r8
 800a57a:	ea4c 0707 	orr.w	r7, ip, r7
 800a57e:	f849 7b04 	str.w	r7, [r9], #4
 800a582:	f85e 7b04 	ldr.w	r7, [lr], #4
 800a586:	40cf      	lsrs	r7, r1
 800a588:	e7da      	b.n	800a540 <rshift+0x4c>
 800a58a:	f851 cb04 	ldr.w	ip, [r1], #4
 800a58e:	f847 cf04 	str.w	ip, [r7, #4]!
 800a592:	e7c3      	b.n	800a51c <rshift+0x28>
 800a594:	4623      	mov	r3, r4
 800a596:	e7e1      	b.n	800a55c <rshift+0x68>

0800a598 <__hexdig_fun>:
 800a598:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800a59c:	2b09      	cmp	r3, #9
 800a59e:	d802      	bhi.n	800a5a6 <__hexdig_fun+0xe>
 800a5a0:	3820      	subs	r0, #32
 800a5a2:	b2c0      	uxtb	r0, r0
 800a5a4:	4770      	bx	lr
 800a5a6:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800a5aa:	2b05      	cmp	r3, #5
 800a5ac:	d801      	bhi.n	800a5b2 <__hexdig_fun+0x1a>
 800a5ae:	3847      	subs	r0, #71	; 0x47
 800a5b0:	e7f7      	b.n	800a5a2 <__hexdig_fun+0xa>
 800a5b2:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a5b6:	2b05      	cmp	r3, #5
 800a5b8:	d801      	bhi.n	800a5be <__hexdig_fun+0x26>
 800a5ba:	3827      	subs	r0, #39	; 0x27
 800a5bc:	e7f1      	b.n	800a5a2 <__hexdig_fun+0xa>
 800a5be:	2000      	movs	r0, #0
 800a5c0:	4770      	bx	lr
	...

0800a5c4 <__gethex>:
 800a5c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5c8:	ed2d 8b02 	vpush	{d8}
 800a5cc:	b089      	sub	sp, #36	; 0x24
 800a5ce:	ee08 0a10 	vmov	s16, r0
 800a5d2:	9304      	str	r3, [sp, #16]
 800a5d4:	4bb4      	ldr	r3, [pc, #720]	; (800a8a8 <__gethex+0x2e4>)
 800a5d6:	681b      	ldr	r3, [r3, #0]
 800a5d8:	9301      	str	r3, [sp, #4]
 800a5da:	4618      	mov	r0, r3
 800a5dc:	468b      	mov	fp, r1
 800a5de:	4690      	mov	r8, r2
 800a5e0:	f7f5 fdf6 	bl	80001d0 <strlen>
 800a5e4:	9b01      	ldr	r3, [sp, #4]
 800a5e6:	f8db 2000 	ldr.w	r2, [fp]
 800a5ea:	4403      	add	r3, r0
 800a5ec:	4682      	mov	sl, r0
 800a5ee:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800a5f2:	9305      	str	r3, [sp, #20]
 800a5f4:	1c93      	adds	r3, r2, #2
 800a5f6:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800a5fa:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800a5fe:	32fe      	adds	r2, #254	; 0xfe
 800a600:	18d1      	adds	r1, r2, r3
 800a602:	461f      	mov	r7, r3
 800a604:	f813 0b01 	ldrb.w	r0, [r3], #1
 800a608:	9100      	str	r1, [sp, #0]
 800a60a:	2830      	cmp	r0, #48	; 0x30
 800a60c:	d0f8      	beq.n	800a600 <__gethex+0x3c>
 800a60e:	f7ff ffc3 	bl	800a598 <__hexdig_fun>
 800a612:	4604      	mov	r4, r0
 800a614:	2800      	cmp	r0, #0
 800a616:	d13a      	bne.n	800a68e <__gethex+0xca>
 800a618:	9901      	ldr	r1, [sp, #4]
 800a61a:	4652      	mov	r2, sl
 800a61c:	4638      	mov	r0, r7
 800a61e:	f001 fa33 	bl	800ba88 <strncmp>
 800a622:	4605      	mov	r5, r0
 800a624:	2800      	cmp	r0, #0
 800a626:	d168      	bne.n	800a6fa <__gethex+0x136>
 800a628:	f817 000a 	ldrb.w	r0, [r7, sl]
 800a62c:	eb07 060a 	add.w	r6, r7, sl
 800a630:	f7ff ffb2 	bl	800a598 <__hexdig_fun>
 800a634:	2800      	cmp	r0, #0
 800a636:	d062      	beq.n	800a6fe <__gethex+0x13a>
 800a638:	4633      	mov	r3, r6
 800a63a:	7818      	ldrb	r0, [r3, #0]
 800a63c:	2830      	cmp	r0, #48	; 0x30
 800a63e:	461f      	mov	r7, r3
 800a640:	f103 0301 	add.w	r3, r3, #1
 800a644:	d0f9      	beq.n	800a63a <__gethex+0x76>
 800a646:	f7ff ffa7 	bl	800a598 <__hexdig_fun>
 800a64a:	2301      	movs	r3, #1
 800a64c:	fab0 f480 	clz	r4, r0
 800a650:	0964      	lsrs	r4, r4, #5
 800a652:	4635      	mov	r5, r6
 800a654:	9300      	str	r3, [sp, #0]
 800a656:	463a      	mov	r2, r7
 800a658:	4616      	mov	r6, r2
 800a65a:	3201      	adds	r2, #1
 800a65c:	7830      	ldrb	r0, [r6, #0]
 800a65e:	f7ff ff9b 	bl	800a598 <__hexdig_fun>
 800a662:	2800      	cmp	r0, #0
 800a664:	d1f8      	bne.n	800a658 <__gethex+0x94>
 800a666:	9901      	ldr	r1, [sp, #4]
 800a668:	4652      	mov	r2, sl
 800a66a:	4630      	mov	r0, r6
 800a66c:	f001 fa0c 	bl	800ba88 <strncmp>
 800a670:	b980      	cbnz	r0, 800a694 <__gethex+0xd0>
 800a672:	b94d      	cbnz	r5, 800a688 <__gethex+0xc4>
 800a674:	eb06 050a 	add.w	r5, r6, sl
 800a678:	462a      	mov	r2, r5
 800a67a:	4616      	mov	r6, r2
 800a67c:	3201      	adds	r2, #1
 800a67e:	7830      	ldrb	r0, [r6, #0]
 800a680:	f7ff ff8a 	bl	800a598 <__hexdig_fun>
 800a684:	2800      	cmp	r0, #0
 800a686:	d1f8      	bne.n	800a67a <__gethex+0xb6>
 800a688:	1bad      	subs	r5, r5, r6
 800a68a:	00ad      	lsls	r5, r5, #2
 800a68c:	e004      	b.n	800a698 <__gethex+0xd4>
 800a68e:	2400      	movs	r4, #0
 800a690:	4625      	mov	r5, r4
 800a692:	e7e0      	b.n	800a656 <__gethex+0x92>
 800a694:	2d00      	cmp	r5, #0
 800a696:	d1f7      	bne.n	800a688 <__gethex+0xc4>
 800a698:	7833      	ldrb	r3, [r6, #0]
 800a69a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800a69e:	2b50      	cmp	r3, #80	; 0x50
 800a6a0:	d13b      	bne.n	800a71a <__gethex+0x156>
 800a6a2:	7873      	ldrb	r3, [r6, #1]
 800a6a4:	2b2b      	cmp	r3, #43	; 0x2b
 800a6a6:	d02c      	beq.n	800a702 <__gethex+0x13e>
 800a6a8:	2b2d      	cmp	r3, #45	; 0x2d
 800a6aa:	d02e      	beq.n	800a70a <__gethex+0x146>
 800a6ac:	1c71      	adds	r1, r6, #1
 800a6ae:	f04f 0900 	mov.w	r9, #0
 800a6b2:	7808      	ldrb	r0, [r1, #0]
 800a6b4:	f7ff ff70 	bl	800a598 <__hexdig_fun>
 800a6b8:	1e43      	subs	r3, r0, #1
 800a6ba:	b2db      	uxtb	r3, r3
 800a6bc:	2b18      	cmp	r3, #24
 800a6be:	d82c      	bhi.n	800a71a <__gethex+0x156>
 800a6c0:	f1a0 0210 	sub.w	r2, r0, #16
 800a6c4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800a6c8:	f7ff ff66 	bl	800a598 <__hexdig_fun>
 800a6cc:	1e43      	subs	r3, r0, #1
 800a6ce:	b2db      	uxtb	r3, r3
 800a6d0:	2b18      	cmp	r3, #24
 800a6d2:	d91d      	bls.n	800a710 <__gethex+0x14c>
 800a6d4:	f1b9 0f00 	cmp.w	r9, #0
 800a6d8:	d000      	beq.n	800a6dc <__gethex+0x118>
 800a6da:	4252      	negs	r2, r2
 800a6dc:	4415      	add	r5, r2
 800a6de:	f8cb 1000 	str.w	r1, [fp]
 800a6e2:	b1e4      	cbz	r4, 800a71e <__gethex+0x15a>
 800a6e4:	9b00      	ldr	r3, [sp, #0]
 800a6e6:	2b00      	cmp	r3, #0
 800a6e8:	bf14      	ite	ne
 800a6ea:	2700      	movne	r7, #0
 800a6ec:	2706      	moveq	r7, #6
 800a6ee:	4638      	mov	r0, r7
 800a6f0:	b009      	add	sp, #36	; 0x24
 800a6f2:	ecbd 8b02 	vpop	{d8}
 800a6f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a6fa:	463e      	mov	r6, r7
 800a6fc:	4625      	mov	r5, r4
 800a6fe:	2401      	movs	r4, #1
 800a700:	e7ca      	b.n	800a698 <__gethex+0xd4>
 800a702:	f04f 0900 	mov.w	r9, #0
 800a706:	1cb1      	adds	r1, r6, #2
 800a708:	e7d3      	b.n	800a6b2 <__gethex+0xee>
 800a70a:	f04f 0901 	mov.w	r9, #1
 800a70e:	e7fa      	b.n	800a706 <__gethex+0x142>
 800a710:	230a      	movs	r3, #10
 800a712:	fb03 0202 	mla	r2, r3, r2, r0
 800a716:	3a10      	subs	r2, #16
 800a718:	e7d4      	b.n	800a6c4 <__gethex+0x100>
 800a71a:	4631      	mov	r1, r6
 800a71c:	e7df      	b.n	800a6de <__gethex+0x11a>
 800a71e:	1bf3      	subs	r3, r6, r7
 800a720:	3b01      	subs	r3, #1
 800a722:	4621      	mov	r1, r4
 800a724:	2b07      	cmp	r3, #7
 800a726:	dc0b      	bgt.n	800a740 <__gethex+0x17c>
 800a728:	ee18 0a10 	vmov	r0, s16
 800a72c:	f000 fa7e 	bl	800ac2c <_Balloc>
 800a730:	4604      	mov	r4, r0
 800a732:	b940      	cbnz	r0, 800a746 <__gethex+0x182>
 800a734:	4b5d      	ldr	r3, [pc, #372]	; (800a8ac <__gethex+0x2e8>)
 800a736:	4602      	mov	r2, r0
 800a738:	21de      	movs	r1, #222	; 0xde
 800a73a:	485d      	ldr	r0, [pc, #372]	; (800a8b0 <__gethex+0x2ec>)
 800a73c:	f001 f9c6 	bl	800bacc <__assert_func>
 800a740:	3101      	adds	r1, #1
 800a742:	105b      	asrs	r3, r3, #1
 800a744:	e7ee      	b.n	800a724 <__gethex+0x160>
 800a746:	f100 0914 	add.w	r9, r0, #20
 800a74a:	f04f 0b00 	mov.w	fp, #0
 800a74e:	f1ca 0301 	rsb	r3, sl, #1
 800a752:	f8cd 9008 	str.w	r9, [sp, #8]
 800a756:	f8cd b000 	str.w	fp, [sp]
 800a75a:	9306      	str	r3, [sp, #24]
 800a75c:	42b7      	cmp	r7, r6
 800a75e:	d340      	bcc.n	800a7e2 <__gethex+0x21e>
 800a760:	9802      	ldr	r0, [sp, #8]
 800a762:	9b00      	ldr	r3, [sp, #0]
 800a764:	f840 3b04 	str.w	r3, [r0], #4
 800a768:	eba0 0009 	sub.w	r0, r0, r9
 800a76c:	1080      	asrs	r0, r0, #2
 800a76e:	0146      	lsls	r6, r0, #5
 800a770:	6120      	str	r0, [r4, #16]
 800a772:	4618      	mov	r0, r3
 800a774:	f000 fb4c 	bl	800ae10 <__hi0bits>
 800a778:	1a30      	subs	r0, r6, r0
 800a77a:	f8d8 6000 	ldr.w	r6, [r8]
 800a77e:	42b0      	cmp	r0, r6
 800a780:	dd63      	ble.n	800a84a <__gethex+0x286>
 800a782:	1b87      	subs	r7, r0, r6
 800a784:	4639      	mov	r1, r7
 800a786:	4620      	mov	r0, r4
 800a788:	f000 fef0 	bl	800b56c <__any_on>
 800a78c:	4682      	mov	sl, r0
 800a78e:	b1a8      	cbz	r0, 800a7bc <__gethex+0x1f8>
 800a790:	1e7b      	subs	r3, r7, #1
 800a792:	1159      	asrs	r1, r3, #5
 800a794:	f003 021f 	and.w	r2, r3, #31
 800a798:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800a79c:	f04f 0a01 	mov.w	sl, #1
 800a7a0:	fa0a f202 	lsl.w	r2, sl, r2
 800a7a4:	420a      	tst	r2, r1
 800a7a6:	d009      	beq.n	800a7bc <__gethex+0x1f8>
 800a7a8:	4553      	cmp	r3, sl
 800a7aa:	dd05      	ble.n	800a7b8 <__gethex+0x1f4>
 800a7ac:	1eb9      	subs	r1, r7, #2
 800a7ae:	4620      	mov	r0, r4
 800a7b0:	f000 fedc 	bl	800b56c <__any_on>
 800a7b4:	2800      	cmp	r0, #0
 800a7b6:	d145      	bne.n	800a844 <__gethex+0x280>
 800a7b8:	f04f 0a02 	mov.w	sl, #2
 800a7bc:	4639      	mov	r1, r7
 800a7be:	4620      	mov	r0, r4
 800a7c0:	f7ff fe98 	bl	800a4f4 <rshift>
 800a7c4:	443d      	add	r5, r7
 800a7c6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800a7ca:	42ab      	cmp	r3, r5
 800a7cc:	da4c      	bge.n	800a868 <__gethex+0x2a4>
 800a7ce:	ee18 0a10 	vmov	r0, s16
 800a7d2:	4621      	mov	r1, r4
 800a7d4:	f000 fa6a 	bl	800acac <_Bfree>
 800a7d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a7da:	2300      	movs	r3, #0
 800a7dc:	6013      	str	r3, [r2, #0]
 800a7de:	27a3      	movs	r7, #163	; 0xa3
 800a7e0:	e785      	b.n	800a6ee <__gethex+0x12a>
 800a7e2:	1e73      	subs	r3, r6, #1
 800a7e4:	9a05      	ldr	r2, [sp, #20]
 800a7e6:	9303      	str	r3, [sp, #12]
 800a7e8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800a7ec:	4293      	cmp	r3, r2
 800a7ee:	d019      	beq.n	800a824 <__gethex+0x260>
 800a7f0:	f1bb 0f20 	cmp.w	fp, #32
 800a7f4:	d107      	bne.n	800a806 <__gethex+0x242>
 800a7f6:	9b02      	ldr	r3, [sp, #8]
 800a7f8:	9a00      	ldr	r2, [sp, #0]
 800a7fa:	f843 2b04 	str.w	r2, [r3], #4
 800a7fe:	9302      	str	r3, [sp, #8]
 800a800:	2300      	movs	r3, #0
 800a802:	9300      	str	r3, [sp, #0]
 800a804:	469b      	mov	fp, r3
 800a806:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800a80a:	f7ff fec5 	bl	800a598 <__hexdig_fun>
 800a80e:	9b00      	ldr	r3, [sp, #0]
 800a810:	f000 000f 	and.w	r0, r0, #15
 800a814:	fa00 f00b 	lsl.w	r0, r0, fp
 800a818:	4303      	orrs	r3, r0
 800a81a:	9300      	str	r3, [sp, #0]
 800a81c:	f10b 0b04 	add.w	fp, fp, #4
 800a820:	9b03      	ldr	r3, [sp, #12]
 800a822:	e00d      	b.n	800a840 <__gethex+0x27c>
 800a824:	9b03      	ldr	r3, [sp, #12]
 800a826:	9a06      	ldr	r2, [sp, #24]
 800a828:	4413      	add	r3, r2
 800a82a:	42bb      	cmp	r3, r7
 800a82c:	d3e0      	bcc.n	800a7f0 <__gethex+0x22c>
 800a82e:	4618      	mov	r0, r3
 800a830:	9901      	ldr	r1, [sp, #4]
 800a832:	9307      	str	r3, [sp, #28]
 800a834:	4652      	mov	r2, sl
 800a836:	f001 f927 	bl	800ba88 <strncmp>
 800a83a:	9b07      	ldr	r3, [sp, #28]
 800a83c:	2800      	cmp	r0, #0
 800a83e:	d1d7      	bne.n	800a7f0 <__gethex+0x22c>
 800a840:	461e      	mov	r6, r3
 800a842:	e78b      	b.n	800a75c <__gethex+0x198>
 800a844:	f04f 0a03 	mov.w	sl, #3
 800a848:	e7b8      	b.n	800a7bc <__gethex+0x1f8>
 800a84a:	da0a      	bge.n	800a862 <__gethex+0x29e>
 800a84c:	1a37      	subs	r7, r6, r0
 800a84e:	4621      	mov	r1, r4
 800a850:	ee18 0a10 	vmov	r0, s16
 800a854:	463a      	mov	r2, r7
 800a856:	f000 fc45 	bl	800b0e4 <__lshift>
 800a85a:	1bed      	subs	r5, r5, r7
 800a85c:	4604      	mov	r4, r0
 800a85e:	f100 0914 	add.w	r9, r0, #20
 800a862:	f04f 0a00 	mov.w	sl, #0
 800a866:	e7ae      	b.n	800a7c6 <__gethex+0x202>
 800a868:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800a86c:	42a8      	cmp	r0, r5
 800a86e:	dd72      	ble.n	800a956 <__gethex+0x392>
 800a870:	1b45      	subs	r5, r0, r5
 800a872:	42ae      	cmp	r6, r5
 800a874:	dc36      	bgt.n	800a8e4 <__gethex+0x320>
 800a876:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800a87a:	2b02      	cmp	r3, #2
 800a87c:	d02a      	beq.n	800a8d4 <__gethex+0x310>
 800a87e:	2b03      	cmp	r3, #3
 800a880:	d02c      	beq.n	800a8dc <__gethex+0x318>
 800a882:	2b01      	cmp	r3, #1
 800a884:	d11c      	bne.n	800a8c0 <__gethex+0x2fc>
 800a886:	42ae      	cmp	r6, r5
 800a888:	d11a      	bne.n	800a8c0 <__gethex+0x2fc>
 800a88a:	2e01      	cmp	r6, #1
 800a88c:	d112      	bne.n	800a8b4 <__gethex+0x2f0>
 800a88e:	9a04      	ldr	r2, [sp, #16]
 800a890:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800a894:	6013      	str	r3, [r2, #0]
 800a896:	2301      	movs	r3, #1
 800a898:	6123      	str	r3, [r4, #16]
 800a89a:	f8c9 3000 	str.w	r3, [r9]
 800a89e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800a8a0:	2762      	movs	r7, #98	; 0x62
 800a8a2:	601c      	str	r4, [r3, #0]
 800a8a4:	e723      	b.n	800a6ee <__gethex+0x12a>
 800a8a6:	bf00      	nop
 800a8a8:	0800cd20 	.word	0x0800cd20
 800a8ac:	0800cca8 	.word	0x0800cca8
 800a8b0:	0800ccb9 	.word	0x0800ccb9
 800a8b4:	1e71      	subs	r1, r6, #1
 800a8b6:	4620      	mov	r0, r4
 800a8b8:	f000 fe58 	bl	800b56c <__any_on>
 800a8bc:	2800      	cmp	r0, #0
 800a8be:	d1e6      	bne.n	800a88e <__gethex+0x2ca>
 800a8c0:	ee18 0a10 	vmov	r0, s16
 800a8c4:	4621      	mov	r1, r4
 800a8c6:	f000 f9f1 	bl	800acac <_Bfree>
 800a8ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a8cc:	2300      	movs	r3, #0
 800a8ce:	6013      	str	r3, [r2, #0]
 800a8d0:	2750      	movs	r7, #80	; 0x50
 800a8d2:	e70c      	b.n	800a6ee <__gethex+0x12a>
 800a8d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a8d6:	2b00      	cmp	r3, #0
 800a8d8:	d1f2      	bne.n	800a8c0 <__gethex+0x2fc>
 800a8da:	e7d8      	b.n	800a88e <__gethex+0x2ca>
 800a8dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a8de:	2b00      	cmp	r3, #0
 800a8e0:	d1d5      	bne.n	800a88e <__gethex+0x2ca>
 800a8e2:	e7ed      	b.n	800a8c0 <__gethex+0x2fc>
 800a8e4:	1e6f      	subs	r7, r5, #1
 800a8e6:	f1ba 0f00 	cmp.w	sl, #0
 800a8ea:	d131      	bne.n	800a950 <__gethex+0x38c>
 800a8ec:	b127      	cbz	r7, 800a8f8 <__gethex+0x334>
 800a8ee:	4639      	mov	r1, r7
 800a8f0:	4620      	mov	r0, r4
 800a8f2:	f000 fe3b 	bl	800b56c <__any_on>
 800a8f6:	4682      	mov	sl, r0
 800a8f8:	117b      	asrs	r3, r7, #5
 800a8fa:	2101      	movs	r1, #1
 800a8fc:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800a900:	f007 071f 	and.w	r7, r7, #31
 800a904:	fa01 f707 	lsl.w	r7, r1, r7
 800a908:	421f      	tst	r7, r3
 800a90a:	4629      	mov	r1, r5
 800a90c:	4620      	mov	r0, r4
 800a90e:	bf18      	it	ne
 800a910:	f04a 0a02 	orrne.w	sl, sl, #2
 800a914:	1b76      	subs	r6, r6, r5
 800a916:	f7ff fded 	bl	800a4f4 <rshift>
 800a91a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800a91e:	2702      	movs	r7, #2
 800a920:	f1ba 0f00 	cmp.w	sl, #0
 800a924:	d048      	beq.n	800a9b8 <__gethex+0x3f4>
 800a926:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800a92a:	2b02      	cmp	r3, #2
 800a92c:	d015      	beq.n	800a95a <__gethex+0x396>
 800a92e:	2b03      	cmp	r3, #3
 800a930:	d017      	beq.n	800a962 <__gethex+0x39e>
 800a932:	2b01      	cmp	r3, #1
 800a934:	d109      	bne.n	800a94a <__gethex+0x386>
 800a936:	f01a 0f02 	tst.w	sl, #2
 800a93a:	d006      	beq.n	800a94a <__gethex+0x386>
 800a93c:	f8d9 0000 	ldr.w	r0, [r9]
 800a940:	ea4a 0a00 	orr.w	sl, sl, r0
 800a944:	f01a 0f01 	tst.w	sl, #1
 800a948:	d10e      	bne.n	800a968 <__gethex+0x3a4>
 800a94a:	f047 0710 	orr.w	r7, r7, #16
 800a94e:	e033      	b.n	800a9b8 <__gethex+0x3f4>
 800a950:	f04f 0a01 	mov.w	sl, #1
 800a954:	e7d0      	b.n	800a8f8 <__gethex+0x334>
 800a956:	2701      	movs	r7, #1
 800a958:	e7e2      	b.n	800a920 <__gethex+0x35c>
 800a95a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a95c:	f1c3 0301 	rsb	r3, r3, #1
 800a960:	9315      	str	r3, [sp, #84]	; 0x54
 800a962:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a964:	2b00      	cmp	r3, #0
 800a966:	d0f0      	beq.n	800a94a <__gethex+0x386>
 800a968:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800a96c:	f104 0314 	add.w	r3, r4, #20
 800a970:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800a974:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800a978:	f04f 0c00 	mov.w	ip, #0
 800a97c:	4618      	mov	r0, r3
 800a97e:	f853 2b04 	ldr.w	r2, [r3], #4
 800a982:	f1b2 3fff 	cmp.w	r2, #4294967295
 800a986:	d01c      	beq.n	800a9c2 <__gethex+0x3fe>
 800a988:	3201      	adds	r2, #1
 800a98a:	6002      	str	r2, [r0, #0]
 800a98c:	2f02      	cmp	r7, #2
 800a98e:	f104 0314 	add.w	r3, r4, #20
 800a992:	d13f      	bne.n	800aa14 <__gethex+0x450>
 800a994:	f8d8 2000 	ldr.w	r2, [r8]
 800a998:	3a01      	subs	r2, #1
 800a99a:	42b2      	cmp	r2, r6
 800a99c:	d10a      	bne.n	800a9b4 <__gethex+0x3f0>
 800a99e:	1171      	asrs	r1, r6, #5
 800a9a0:	2201      	movs	r2, #1
 800a9a2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800a9a6:	f006 061f 	and.w	r6, r6, #31
 800a9aa:	fa02 f606 	lsl.w	r6, r2, r6
 800a9ae:	421e      	tst	r6, r3
 800a9b0:	bf18      	it	ne
 800a9b2:	4617      	movne	r7, r2
 800a9b4:	f047 0720 	orr.w	r7, r7, #32
 800a9b8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800a9ba:	601c      	str	r4, [r3, #0]
 800a9bc:	9b04      	ldr	r3, [sp, #16]
 800a9be:	601d      	str	r5, [r3, #0]
 800a9c0:	e695      	b.n	800a6ee <__gethex+0x12a>
 800a9c2:	4299      	cmp	r1, r3
 800a9c4:	f843 cc04 	str.w	ip, [r3, #-4]
 800a9c8:	d8d8      	bhi.n	800a97c <__gethex+0x3b8>
 800a9ca:	68a3      	ldr	r3, [r4, #8]
 800a9cc:	459b      	cmp	fp, r3
 800a9ce:	db19      	blt.n	800aa04 <__gethex+0x440>
 800a9d0:	6861      	ldr	r1, [r4, #4]
 800a9d2:	ee18 0a10 	vmov	r0, s16
 800a9d6:	3101      	adds	r1, #1
 800a9d8:	f000 f928 	bl	800ac2c <_Balloc>
 800a9dc:	4681      	mov	r9, r0
 800a9de:	b918      	cbnz	r0, 800a9e8 <__gethex+0x424>
 800a9e0:	4b1a      	ldr	r3, [pc, #104]	; (800aa4c <__gethex+0x488>)
 800a9e2:	4602      	mov	r2, r0
 800a9e4:	2184      	movs	r1, #132	; 0x84
 800a9e6:	e6a8      	b.n	800a73a <__gethex+0x176>
 800a9e8:	6922      	ldr	r2, [r4, #16]
 800a9ea:	3202      	adds	r2, #2
 800a9ec:	f104 010c 	add.w	r1, r4, #12
 800a9f0:	0092      	lsls	r2, r2, #2
 800a9f2:	300c      	adds	r0, #12
 800a9f4:	f000 f90c 	bl	800ac10 <memcpy>
 800a9f8:	4621      	mov	r1, r4
 800a9fa:	ee18 0a10 	vmov	r0, s16
 800a9fe:	f000 f955 	bl	800acac <_Bfree>
 800aa02:	464c      	mov	r4, r9
 800aa04:	6923      	ldr	r3, [r4, #16]
 800aa06:	1c5a      	adds	r2, r3, #1
 800aa08:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800aa0c:	6122      	str	r2, [r4, #16]
 800aa0e:	2201      	movs	r2, #1
 800aa10:	615a      	str	r2, [r3, #20]
 800aa12:	e7bb      	b.n	800a98c <__gethex+0x3c8>
 800aa14:	6922      	ldr	r2, [r4, #16]
 800aa16:	455a      	cmp	r2, fp
 800aa18:	dd0b      	ble.n	800aa32 <__gethex+0x46e>
 800aa1a:	2101      	movs	r1, #1
 800aa1c:	4620      	mov	r0, r4
 800aa1e:	f7ff fd69 	bl	800a4f4 <rshift>
 800aa22:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800aa26:	3501      	adds	r5, #1
 800aa28:	42ab      	cmp	r3, r5
 800aa2a:	f6ff aed0 	blt.w	800a7ce <__gethex+0x20a>
 800aa2e:	2701      	movs	r7, #1
 800aa30:	e7c0      	b.n	800a9b4 <__gethex+0x3f0>
 800aa32:	f016 061f 	ands.w	r6, r6, #31
 800aa36:	d0fa      	beq.n	800aa2e <__gethex+0x46a>
 800aa38:	4453      	add	r3, sl
 800aa3a:	f1c6 0620 	rsb	r6, r6, #32
 800aa3e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800aa42:	f000 f9e5 	bl	800ae10 <__hi0bits>
 800aa46:	42b0      	cmp	r0, r6
 800aa48:	dbe7      	blt.n	800aa1a <__gethex+0x456>
 800aa4a:	e7f0      	b.n	800aa2e <__gethex+0x46a>
 800aa4c:	0800cca8 	.word	0x0800cca8

0800aa50 <L_shift>:
 800aa50:	f1c2 0208 	rsb	r2, r2, #8
 800aa54:	0092      	lsls	r2, r2, #2
 800aa56:	b570      	push	{r4, r5, r6, lr}
 800aa58:	f1c2 0620 	rsb	r6, r2, #32
 800aa5c:	6843      	ldr	r3, [r0, #4]
 800aa5e:	6804      	ldr	r4, [r0, #0]
 800aa60:	fa03 f506 	lsl.w	r5, r3, r6
 800aa64:	432c      	orrs	r4, r5
 800aa66:	40d3      	lsrs	r3, r2
 800aa68:	6004      	str	r4, [r0, #0]
 800aa6a:	f840 3f04 	str.w	r3, [r0, #4]!
 800aa6e:	4288      	cmp	r0, r1
 800aa70:	d3f4      	bcc.n	800aa5c <L_shift+0xc>
 800aa72:	bd70      	pop	{r4, r5, r6, pc}

0800aa74 <__match>:
 800aa74:	b530      	push	{r4, r5, lr}
 800aa76:	6803      	ldr	r3, [r0, #0]
 800aa78:	3301      	adds	r3, #1
 800aa7a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800aa7e:	b914      	cbnz	r4, 800aa86 <__match+0x12>
 800aa80:	6003      	str	r3, [r0, #0]
 800aa82:	2001      	movs	r0, #1
 800aa84:	bd30      	pop	{r4, r5, pc}
 800aa86:	f813 2b01 	ldrb.w	r2, [r3], #1
 800aa8a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800aa8e:	2d19      	cmp	r5, #25
 800aa90:	bf98      	it	ls
 800aa92:	3220      	addls	r2, #32
 800aa94:	42a2      	cmp	r2, r4
 800aa96:	d0f0      	beq.n	800aa7a <__match+0x6>
 800aa98:	2000      	movs	r0, #0
 800aa9a:	e7f3      	b.n	800aa84 <__match+0x10>

0800aa9c <__hexnan>:
 800aa9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aaa0:	680b      	ldr	r3, [r1, #0]
 800aaa2:	115e      	asrs	r6, r3, #5
 800aaa4:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800aaa8:	f013 031f 	ands.w	r3, r3, #31
 800aaac:	b087      	sub	sp, #28
 800aaae:	bf18      	it	ne
 800aab0:	3604      	addne	r6, #4
 800aab2:	2500      	movs	r5, #0
 800aab4:	1f37      	subs	r7, r6, #4
 800aab6:	4690      	mov	r8, r2
 800aab8:	6802      	ldr	r2, [r0, #0]
 800aaba:	9301      	str	r3, [sp, #4]
 800aabc:	4682      	mov	sl, r0
 800aabe:	f846 5c04 	str.w	r5, [r6, #-4]
 800aac2:	46b9      	mov	r9, r7
 800aac4:	463c      	mov	r4, r7
 800aac6:	9502      	str	r5, [sp, #8]
 800aac8:	46ab      	mov	fp, r5
 800aaca:	7851      	ldrb	r1, [r2, #1]
 800aacc:	1c53      	adds	r3, r2, #1
 800aace:	9303      	str	r3, [sp, #12]
 800aad0:	b341      	cbz	r1, 800ab24 <__hexnan+0x88>
 800aad2:	4608      	mov	r0, r1
 800aad4:	9205      	str	r2, [sp, #20]
 800aad6:	9104      	str	r1, [sp, #16]
 800aad8:	f7ff fd5e 	bl	800a598 <__hexdig_fun>
 800aadc:	2800      	cmp	r0, #0
 800aade:	d14f      	bne.n	800ab80 <__hexnan+0xe4>
 800aae0:	9904      	ldr	r1, [sp, #16]
 800aae2:	9a05      	ldr	r2, [sp, #20]
 800aae4:	2920      	cmp	r1, #32
 800aae6:	d818      	bhi.n	800ab1a <__hexnan+0x7e>
 800aae8:	9b02      	ldr	r3, [sp, #8]
 800aaea:	459b      	cmp	fp, r3
 800aaec:	dd13      	ble.n	800ab16 <__hexnan+0x7a>
 800aaee:	454c      	cmp	r4, r9
 800aaf0:	d206      	bcs.n	800ab00 <__hexnan+0x64>
 800aaf2:	2d07      	cmp	r5, #7
 800aaf4:	dc04      	bgt.n	800ab00 <__hexnan+0x64>
 800aaf6:	462a      	mov	r2, r5
 800aaf8:	4649      	mov	r1, r9
 800aafa:	4620      	mov	r0, r4
 800aafc:	f7ff ffa8 	bl	800aa50 <L_shift>
 800ab00:	4544      	cmp	r4, r8
 800ab02:	d950      	bls.n	800aba6 <__hexnan+0x10a>
 800ab04:	2300      	movs	r3, #0
 800ab06:	f1a4 0904 	sub.w	r9, r4, #4
 800ab0a:	f844 3c04 	str.w	r3, [r4, #-4]
 800ab0e:	f8cd b008 	str.w	fp, [sp, #8]
 800ab12:	464c      	mov	r4, r9
 800ab14:	461d      	mov	r5, r3
 800ab16:	9a03      	ldr	r2, [sp, #12]
 800ab18:	e7d7      	b.n	800aaca <__hexnan+0x2e>
 800ab1a:	2929      	cmp	r1, #41	; 0x29
 800ab1c:	d156      	bne.n	800abcc <__hexnan+0x130>
 800ab1e:	3202      	adds	r2, #2
 800ab20:	f8ca 2000 	str.w	r2, [sl]
 800ab24:	f1bb 0f00 	cmp.w	fp, #0
 800ab28:	d050      	beq.n	800abcc <__hexnan+0x130>
 800ab2a:	454c      	cmp	r4, r9
 800ab2c:	d206      	bcs.n	800ab3c <__hexnan+0xa0>
 800ab2e:	2d07      	cmp	r5, #7
 800ab30:	dc04      	bgt.n	800ab3c <__hexnan+0xa0>
 800ab32:	462a      	mov	r2, r5
 800ab34:	4649      	mov	r1, r9
 800ab36:	4620      	mov	r0, r4
 800ab38:	f7ff ff8a 	bl	800aa50 <L_shift>
 800ab3c:	4544      	cmp	r4, r8
 800ab3e:	d934      	bls.n	800abaa <__hexnan+0x10e>
 800ab40:	f1a8 0204 	sub.w	r2, r8, #4
 800ab44:	4623      	mov	r3, r4
 800ab46:	f853 1b04 	ldr.w	r1, [r3], #4
 800ab4a:	f842 1f04 	str.w	r1, [r2, #4]!
 800ab4e:	429f      	cmp	r7, r3
 800ab50:	d2f9      	bcs.n	800ab46 <__hexnan+0xaa>
 800ab52:	1b3b      	subs	r3, r7, r4
 800ab54:	f023 0303 	bic.w	r3, r3, #3
 800ab58:	3304      	adds	r3, #4
 800ab5a:	3401      	adds	r4, #1
 800ab5c:	3e03      	subs	r6, #3
 800ab5e:	42b4      	cmp	r4, r6
 800ab60:	bf88      	it	hi
 800ab62:	2304      	movhi	r3, #4
 800ab64:	4443      	add	r3, r8
 800ab66:	2200      	movs	r2, #0
 800ab68:	f843 2b04 	str.w	r2, [r3], #4
 800ab6c:	429f      	cmp	r7, r3
 800ab6e:	d2fb      	bcs.n	800ab68 <__hexnan+0xcc>
 800ab70:	683b      	ldr	r3, [r7, #0]
 800ab72:	b91b      	cbnz	r3, 800ab7c <__hexnan+0xe0>
 800ab74:	4547      	cmp	r7, r8
 800ab76:	d127      	bne.n	800abc8 <__hexnan+0x12c>
 800ab78:	2301      	movs	r3, #1
 800ab7a:	603b      	str	r3, [r7, #0]
 800ab7c:	2005      	movs	r0, #5
 800ab7e:	e026      	b.n	800abce <__hexnan+0x132>
 800ab80:	3501      	adds	r5, #1
 800ab82:	2d08      	cmp	r5, #8
 800ab84:	f10b 0b01 	add.w	fp, fp, #1
 800ab88:	dd06      	ble.n	800ab98 <__hexnan+0xfc>
 800ab8a:	4544      	cmp	r4, r8
 800ab8c:	d9c3      	bls.n	800ab16 <__hexnan+0x7a>
 800ab8e:	2300      	movs	r3, #0
 800ab90:	f844 3c04 	str.w	r3, [r4, #-4]
 800ab94:	2501      	movs	r5, #1
 800ab96:	3c04      	subs	r4, #4
 800ab98:	6822      	ldr	r2, [r4, #0]
 800ab9a:	f000 000f 	and.w	r0, r0, #15
 800ab9e:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800aba2:	6022      	str	r2, [r4, #0]
 800aba4:	e7b7      	b.n	800ab16 <__hexnan+0x7a>
 800aba6:	2508      	movs	r5, #8
 800aba8:	e7b5      	b.n	800ab16 <__hexnan+0x7a>
 800abaa:	9b01      	ldr	r3, [sp, #4]
 800abac:	2b00      	cmp	r3, #0
 800abae:	d0df      	beq.n	800ab70 <__hexnan+0xd4>
 800abb0:	f04f 32ff 	mov.w	r2, #4294967295
 800abb4:	f1c3 0320 	rsb	r3, r3, #32
 800abb8:	fa22 f303 	lsr.w	r3, r2, r3
 800abbc:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800abc0:	401a      	ands	r2, r3
 800abc2:	f846 2c04 	str.w	r2, [r6, #-4]
 800abc6:	e7d3      	b.n	800ab70 <__hexnan+0xd4>
 800abc8:	3f04      	subs	r7, #4
 800abca:	e7d1      	b.n	800ab70 <__hexnan+0xd4>
 800abcc:	2004      	movs	r0, #4
 800abce:	b007      	add	sp, #28
 800abd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800abd4 <_localeconv_r>:
 800abd4:	4800      	ldr	r0, [pc, #0]	; (800abd8 <_localeconv_r+0x4>)
 800abd6:	4770      	bx	lr
 800abd8:	20000170 	.word	0x20000170

0800abdc <malloc>:
 800abdc:	4b02      	ldr	r3, [pc, #8]	; (800abe8 <malloc+0xc>)
 800abde:	4601      	mov	r1, r0
 800abe0:	6818      	ldr	r0, [r3, #0]
 800abe2:	f000 bd67 	b.w	800b6b4 <_malloc_r>
 800abe6:	bf00      	nop
 800abe8:	20000018 	.word	0x20000018

0800abec <__ascii_mbtowc>:
 800abec:	b082      	sub	sp, #8
 800abee:	b901      	cbnz	r1, 800abf2 <__ascii_mbtowc+0x6>
 800abf0:	a901      	add	r1, sp, #4
 800abf2:	b142      	cbz	r2, 800ac06 <__ascii_mbtowc+0x1a>
 800abf4:	b14b      	cbz	r3, 800ac0a <__ascii_mbtowc+0x1e>
 800abf6:	7813      	ldrb	r3, [r2, #0]
 800abf8:	600b      	str	r3, [r1, #0]
 800abfa:	7812      	ldrb	r2, [r2, #0]
 800abfc:	1e10      	subs	r0, r2, #0
 800abfe:	bf18      	it	ne
 800ac00:	2001      	movne	r0, #1
 800ac02:	b002      	add	sp, #8
 800ac04:	4770      	bx	lr
 800ac06:	4610      	mov	r0, r2
 800ac08:	e7fb      	b.n	800ac02 <__ascii_mbtowc+0x16>
 800ac0a:	f06f 0001 	mvn.w	r0, #1
 800ac0e:	e7f8      	b.n	800ac02 <__ascii_mbtowc+0x16>

0800ac10 <memcpy>:
 800ac10:	440a      	add	r2, r1
 800ac12:	4291      	cmp	r1, r2
 800ac14:	f100 33ff 	add.w	r3, r0, #4294967295
 800ac18:	d100      	bne.n	800ac1c <memcpy+0xc>
 800ac1a:	4770      	bx	lr
 800ac1c:	b510      	push	{r4, lr}
 800ac1e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ac22:	f803 4f01 	strb.w	r4, [r3, #1]!
 800ac26:	4291      	cmp	r1, r2
 800ac28:	d1f9      	bne.n	800ac1e <memcpy+0xe>
 800ac2a:	bd10      	pop	{r4, pc}

0800ac2c <_Balloc>:
 800ac2c:	b570      	push	{r4, r5, r6, lr}
 800ac2e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800ac30:	4604      	mov	r4, r0
 800ac32:	460d      	mov	r5, r1
 800ac34:	b976      	cbnz	r6, 800ac54 <_Balloc+0x28>
 800ac36:	2010      	movs	r0, #16
 800ac38:	f7ff ffd0 	bl	800abdc <malloc>
 800ac3c:	4602      	mov	r2, r0
 800ac3e:	6260      	str	r0, [r4, #36]	; 0x24
 800ac40:	b920      	cbnz	r0, 800ac4c <_Balloc+0x20>
 800ac42:	4b18      	ldr	r3, [pc, #96]	; (800aca4 <_Balloc+0x78>)
 800ac44:	4818      	ldr	r0, [pc, #96]	; (800aca8 <_Balloc+0x7c>)
 800ac46:	2166      	movs	r1, #102	; 0x66
 800ac48:	f000 ff40 	bl	800bacc <__assert_func>
 800ac4c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800ac50:	6006      	str	r6, [r0, #0]
 800ac52:	60c6      	str	r6, [r0, #12]
 800ac54:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800ac56:	68f3      	ldr	r3, [r6, #12]
 800ac58:	b183      	cbz	r3, 800ac7c <_Balloc+0x50>
 800ac5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ac5c:	68db      	ldr	r3, [r3, #12]
 800ac5e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800ac62:	b9b8      	cbnz	r0, 800ac94 <_Balloc+0x68>
 800ac64:	2101      	movs	r1, #1
 800ac66:	fa01 f605 	lsl.w	r6, r1, r5
 800ac6a:	1d72      	adds	r2, r6, #5
 800ac6c:	0092      	lsls	r2, r2, #2
 800ac6e:	4620      	mov	r0, r4
 800ac70:	f000 fc9d 	bl	800b5ae <_calloc_r>
 800ac74:	b160      	cbz	r0, 800ac90 <_Balloc+0x64>
 800ac76:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800ac7a:	e00e      	b.n	800ac9a <_Balloc+0x6e>
 800ac7c:	2221      	movs	r2, #33	; 0x21
 800ac7e:	2104      	movs	r1, #4
 800ac80:	4620      	mov	r0, r4
 800ac82:	f000 fc94 	bl	800b5ae <_calloc_r>
 800ac86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ac88:	60f0      	str	r0, [r6, #12]
 800ac8a:	68db      	ldr	r3, [r3, #12]
 800ac8c:	2b00      	cmp	r3, #0
 800ac8e:	d1e4      	bne.n	800ac5a <_Balloc+0x2e>
 800ac90:	2000      	movs	r0, #0
 800ac92:	bd70      	pop	{r4, r5, r6, pc}
 800ac94:	6802      	ldr	r2, [r0, #0]
 800ac96:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800ac9a:	2300      	movs	r3, #0
 800ac9c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800aca0:	e7f7      	b.n	800ac92 <_Balloc+0x66>
 800aca2:	bf00      	nop
 800aca4:	0800cc36 	.word	0x0800cc36
 800aca8:	0800cd34 	.word	0x0800cd34

0800acac <_Bfree>:
 800acac:	b570      	push	{r4, r5, r6, lr}
 800acae:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800acb0:	4605      	mov	r5, r0
 800acb2:	460c      	mov	r4, r1
 800acb4:	b976      	cbnz	r6, 800acd4 <_Bfree+0x28>
 800acb6:	2010      	movs	r0, #16
 800acb8:	f7ff ff90 	bl	800abdc <malloc>
 800acbc:	4602      	mov	r2, r0
 800acbe:	6268      	str	r0, [r5, #36]	; 0x24
 800acc0:	b920      	cbnz	r0, 800accc <_Bfree+0x20>
 800acc2:	4b09      	ldr	r3, [pc, #36]	; (800ace8 <_Bfree+0x3c>)
 800acc4:	4809      	ldr	r0, [pc, #36]	; (800acec <_Bfree+0x40>)
 800acc6:	218a      	movs	r1, #138	; 0x8a
 800acc8:	f000 ff00 	bl	800bacc <__assert_func>
 800accc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800acd0:	6006      	str	r6, [r0, #0]
 800acd2:	60c6      	str	r6, [r0, #12]
 800acd4:	b13c      	cbz	r4, 800ace6 <_Bfree+0x3a>
 800acd6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800acd8:	6862      	ldr	r2, [r4, #4]
 800acda:	68db      	ldr	r3, [r3, #12]
 800acdc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800ace0:	6021      	str	r1, [r4, #0]
 800ace2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800ace6:	bd70      	pop	{r4, r5, r6, pc}
 800ace8:	0800cc36 	.word	0x0800cc36
 800acec:	0800cd34 	.word	0x0800cd34

0800acf0 <__multadd>:
 800acf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800acf4:	690d      	ldr	r5, [r1, #16]
 800acf6:	4607      	mov	r7, r0
 800acf8:	460c      	mov	r4, r1
 800acfa:	461e      	mov	r6, r3
 800acfc:	f101 0c14 	add.w	ip, r1, #20
 800ad00:	2000      	movs	r0, #0
 800ad02:	f8dc 3000 	ldr.w	r3, [ip]
 800ad06:	b299      	uxth	r1, r3
 800ad08:	fb02 6101 	mla	r1, r2, r1, r6
 800ad0c:	0c1e      	lsrs	r6, r3, #16
 800ad0e:	0c0b      	lsrs	r3, r1, #16
 800ad10:	fb02 3306 	mla	r3, r2, r6, r3
 800ad14:	b289      	uxth	r1, r1
 800ad16:	3001      	adds	r0, #1
 800ad18:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800ad1c:	4285      	cmp	r5, r0
 800ad1e:	f84c 1b04 	str.w	r1, [ip], #4
 800ad22:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800ad26:	dcec      	bgt.n	800ad02 <__multadd+0x12>
 800ad28:	b30e      	cbz	r6, 800ad6e <__multadd+0x7e>
 800ad2a:	68a3      	ldr	r3, [r4, #8]
 800ad2c:	42ab      	cmp	r3, r5
 800ad2e:	dc19      	bgt.n	800ad64 <__multadd+0x74>
 800ad30:	6861      	ldr	r1, [r4, #4]
 800ad32:	4638      	mov	r0, r7
 800ad34:	3101      	adds	r1, #1
 800ad36:	f7ff ff79 	bl	800ac2c <_Balloc>
 800ad3a:	4680      	mov	r8, r0
 800ad3c:	b928      	cbnz	r0, 800ad4a <__multadd+0x5a>
 800ad3e:	4602      	mov	r2, r0
 800ad40:	4b0c      	ldr	r3, [pc, #48]	; (800ad74 <__multadd+0x84>)
 800ad42:	480d      	ldr	r0, [pc, #52]	; (800ad78 <__multadd+0x88>)
 800ad44:	21b5      	movs	r1, #181	; 0xb5
 800ad46:	f000 fec1 	bl	800bacc <__assert_func>
 800ad4a:	6922      	ldr	r2, [r4, #16]
 800ad4c:	3202      	adds	r2, #2
 800ad4e:	f104 010c 	add.w	r1, r4, #12
 800ad52:	0092      	lsls	r2, r2, #2
 800ad54:	300c      	adds	r0, #12
 800ad56:	f7ff ff5b 	bl	800ac10 <memcpy>
 800ad5a:	4621      	mov	r1, r4
 800ad5c:	4638      	mov	r0, r7
 800ad5e:	f7ff ffa5 	bl	800acac <_Bfree>
 800ad62:	4644      	mov	r4, r8
 800ad64:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800ad68:	3501      	adds	r5, #1
 800ad6a:	615e      	str	r6, [r3, #20]
 800ad6c:	6125      	str	r5, [r4, #16]
 800ad6e:	4620      	mov	r0, r4
 800ad70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ad74:	0800cca8 	.word	0x0800cca8
 800ad78:	0800cd34 	.word	0x0800cd34

0800ad7c <__s2b>:
 800ad7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ad80:	460c      	mov	r4, r1
 800ad82:	4615      	mov	r5, r2
 800ad84:	461f      	mov	r7, r3
 800ad86:	2209      	movs	r2, #9
 800ad88:	3308      	adds	r3, #8
 800ad8a:	4606      	mov	r6, r0
 800ad8c:	fb93 f3f2 	sdiv	r3, r3, r2
 800ad90:	2100      	movs	r1, #0
 800ad92:	2201      	movs	r2, #1
 800ad94:	429a      	cmp	r2, r3
 800ad96:	db09      	blt.n	800adac <__s2b+0x30>
 800ad98:	4630      	mov	r0, r6
 800ad9a:	f7ff ff47 	bl	800ac2c <_Balloc>
 800ad9e:	b940      	cbnz	r0, 800adb2 <__s2b+0x36>
 800ada0:	4602      	mov	r2, r0
 800ada2:	4b19      	ldr	r3, [pc, #100]	; (800ae08 <__s2b+0x8c>)
 800ada4:	4819      	ldr	r0, [pc, #100]	; (800ae0c <__s2b+0x90>)
 800ada6:	21ce      	movs	r1, #206	; 0xce
 800ada8:	f000 fe90 	bl	800bacc <__assert_func>
 800adac:	0052      	lsls	r2, r2, #1
 800adae:	3101      	adds	r1, #1
 800adb0:	e7f0      	b.n	800ad94 <__s2b+0x18>
 800adb2:	9b08      	ldr	r3, [sp, #32]
 800adb4:	6143      	str	r3, [r0, #20]
 800adb6:	2d09      	cmp	r5, #9
 800adb8:	f04f 0301 	mov.w	r3, #1
 800adbc:	6103      	str	r3, [r0, #16]
 800adbe:	dd16      	ble.n	800adee <__s2b+0x72>
 800adc0:	f104 0909 	add.w	r9, r4, #9
 800adc4:	46c8      	mov	r8, r9
 800adc6:	442c      	add	r4, r5
 800adc8:	f818 3b01 	ldrb.w	r3, [r8], #1
 800adcc:	4601      	mov	r1, r0
 800adce:	3b30      	subs	r3, #48	; 0x30
 800add0:	220a      	movs	r2, #10
 800add2:	4630      	mov	r0, r6
 800add4:	f7ff ff8c 	bl	800acf0 <__multadd>
 800add8:	45a0      	cmp	r8, r4
 800adda:	d1f5      	bne.n	800adc8 <__s2b+0x4c>
 800addc:	f1a5 0408 	sub.w	r4, r5, #8
 800ade0:	444c      	add	r4, r9
 800ade2:	1b2d      	subs	r5, r5, r4
 800ade4:	1963      	adds	r3, r4, r5
 800ade6:	42bb      	cmp	r3, r7
 800ade8:	db04      	blt.n	800adf4 <__s2b+0x78>
 800adea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800adee:	340a      	adds	r4, #10
 800adf0:	2509      	movs	r5, #9
 800adf2:	e7f6      	b.n	800ade2 <__s2b+0x66>
 800adf4:	f814 3b01 	ldrb.w	r3, [r4], #1
 800adf8:	4601      	mov	r1, r0
 800adfa:	3b30      	subs	r3, #48	; 0x30
 800adfc:	220a      	movs	r2, #10
 800adfe:	4630      	mov	r0, r6
 800ae00:	f7ff ff76 	bl	800acf0 <__multadd>
 800ae04:	e7ee      	b.n	800ade4 <__s2b+0x68>
 800ae06:	bf00      	nop
 800ae08:	0800cca8 	.word	0x0800cca8
 800ae0c:	0800cd34 	.word	0x0800cd34

0800ae10 <__hi0bits>:
 800ae10:	0c03      	lsrs	r3, r0, #16
 800ae12:	041b      	lsls	r3, r3, #16
 800ae14:	b9d3      	cbnz	r3, 800ae4c <__hi0bits+0x3c>
 800ae16:	0400      	lsls	r0, r0, #16
 800ae18:	2310      	movs	r3, #16
 800ae1a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800ae1e:	bf04      	itt	eq
 800ae20:	0200      	lsleq	r0, r0, #8
 800ae22:	3308      	addeq	r3, #8
 800ae24:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800ae28:	bf04      	itt	eq
 800ae2a:	0100      	lsleq	r0, r0, #4
 800ae2c:	3304      	addeq	r3, #4
 800ae2e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800ae32:	bf04      	itt	eq
 800ae34:	0080      	lsleq	r0, r0, #2
 800ae36:	3302      	addeq	r3, #2
 800ae38:	2800      	cmp	r0, #0
 800ae3a:	db05      	blt.n	800ae48 <__hi0bits+0x38>
 800ae3c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800ae40:	f103 0301 	add.w	r3, r3, #1
 800ae44:	bf08      	it	eq
 800ae46:	2320      	moveq	r3, #32
 800ae48:	4618      	mov	r0, r3
 800ae4a:	4770      	bx	lr
 800ae4c:	2300      	movs	r3, #0
 800ae4e:	e7e4      	b.n	800ae1a <__hi0bits+0xa>

0800ae50 <__lo0bits>:
 800ae50:	6803      	ldr	r3, [r0, #0]
 800ae52:	f013 0207 	ands.w	r2, r3, #7
 800ae56:	4601      	mov	r1, r0
 800ae58:	d00b      	beq.n	800ae72 <__lo0bits+0x22>
 800ae5a:	07da      	lsls	r2, r3, #31
 800ae5c:	d423      	bmi.n	800aea6 <__lo0bits+0x56>
 800ae5e:	0798      	lsls	r0, r3, #30
 800ae60:	bf49      	itett	mi
 800ae62:	085b      	lsrmi	r3, r3, #1
 800ae64:	089b      	lsrpl	r3, r3, #2
 800ae66:	2001      	movmi	r0, #1
 800ae68:	600b      	strmi	r3, [r1, #0]
 800ae6a:	bf5c      	itt	pl
 800ae6c:	600b      	strpl	r3, [r1, #0]
 800ae6e:	2002      	movpl	r0, #2
 800ae70:	4770      	bx	lr
 800ae72:	b298      	uxth	r0, r3
 800ae74:	b9a8      	cbnz	r0, 800aea2 <__lo0bits+0x52>
 800ae76:	0c1b      	lsrs	r3, r3, #16
 800ae78:	2010      	movs	r0, #16
 800ae7a:	b2da      	uxtb	r2, r3
 800ae7c:	b90a      	cbnz	r2, 800ae82 <__lo0bits+0x32>
 800ae7e:	3008      	adds	r0, #8
 800ae80:	0a1b      	lsrs	r3, r3, #8
 800ae82:	071a      	lsls	r2, r3, #28
 800ae84:	bf04      	itt	eq
 800ae86:	091b      	lsreq	r3, r3, #4
 800ae88:	3004      	addeq	r0, #4
 800ae8a:	079a      	lsls	r2, r3, #30
 800ae8c:	bf04      	itt	eq
 800ae8e:	089b      	lsreq	r3, r3, #2
 800ae90:	3002      	addeq	r0, #2
 800ae92:	07da      	lsls	r2, r3, #31
 800ae94:	d403      	bmi.n	800ae9e <__lo0bits+0x4e>
 800ae96:	085b      	lsrs	r3, r3, #1
 800ae98:	f100 0001 	add.w	r0, r0, #1
 800ae9c:	d005      	beq.n	800aeaa <__lo0bits+0x5a>
 800ae9e:	600b      	str	r3, [r1, #0]
 800aea0:	4770      	bx	lr
 800aea2:	4610      	mov	r0, r2
 800aea4:	e7e9      	b.n	800ae7a <__lo0bits+0x2a>
 800aea6:	2000      	movs	r0, #0
 800aea8:	4770      	bx	lr
 800aeaa:	2020      	movs	r0, #32
 800aeac:	4770      	bx	lr
	...

0800aeb0 <__i2b>:
 800aeb0:	b510      	push	{r4, lr}
 800aeb2:	460c      	mov	r4, r1
 800aeb4:	2101      	movs	r1, #1
 800aeb6:	f7ff feb9 	bl	800ac2c <_Balloc>
 800aeba:	4602      	mov	r2, r0
 800aebc:	b928      	cbnz	r0, 800aeca <__i2b+0x1a>
 800aebe:	4b05      	ldr	r3, [pc, #20]	; (800aed4 <__i2b+0x24>)
 800aec0:	4805      	ldr	r0, [pc, #20]	; (800aed8 <__i2b+0x28>)
 800aec2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800aec6:	f000 fe01 	bl	800bacc <__assert_func>
 800aeca:	2301      	movs	r3, #1
 800aecc:	6144      	str	r4, [r0, #20]
 800aece:	6103      	str	r3, [r0, #16]
 800aed0:	bd10      	pop	{r4, pc}
 800aed2:	bf00      	nop
 800aed4:	0800cca8 	.word	0x0800cca8
 800aed8:	0800cd34 	.word	0x0800cd34

0800aedc <__multiply>:
 800aedc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aee0:	4691      	mov	r9, r2
 800aee2:	690a      	ldr	r2, [r1, #16]
 800aee4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800aee8:	429a      	cmp	r2, r3
 800aeea:	bfb8      	it	lt
 800aeec:	460b      	movlt	r3, r1
 800aeee:	460c      	mov	r4, r1
 800aef0:	bfbc      	itt	lt
 800aef2:	464c      	movlt	r4, r9
 800aef4:	4699      	movlt	r9, r3
 800aef6:	6927      	ldr	r7, [r4, #16]
 800aef8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800aefc:	68a3      	ldr	r3, [r4, #8]
 800aefe:	6861      	ldr	r1, [r4, #4]
 800af00:	eb07 060a 	add.w	r6, r7, sl
 800af04:	42b3      	cmp	r3, r6
 800af06:	b085      	sub	sp, #20
 800af08:	bfb8      	it	lt
 800af0a:	3101      	addlt	r1, #1
 800af0c:	f7ff fe8e 	bl	800ac2c <_Balloc>
 800af10:	b930      	cbnz	r0, 800af20 <__multiply+0x44>
 800af12:	4602      	mov	r2, r0
 800af14:	4b44      	ldr	r3, [pc, #272]	; (800b028 <__multiply+0x14c>)
 800af16:	4845      	ldr	r0, [pc, #276]	; (800b02c <__multiply+0x150>)
 800af18:	f240 115d 	movw	r1, #349	; 0x15d
 800af1c:	f000 fdd6 	bl	800bacc <__assert_func>
 800af20:	f100 0514 	add.w	r5, r0, #20
 800af24:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800af28:	462b      	mov	r3, r5
 800af2a:	2200      	movs	r2, #0
 800af2c:	4543      	cmp	r3, r8
 800af2e:	d321      	bcc.n	800af74 <__multiply+0x98>
 800af30:	f104 0314 	add.w	r3, r4, #20
 800af34:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800af38:	f109 0314 	add.w	r3, r9, #20
 800af3c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800af40:	9202      	str	r2, [sp, #8]
 800af42:	1b3a      	subs	r2, r7, r4
 800af44:	3a15      	subs	r2, #21
 800af46:	f022 0203 	bic.w	r2, r2, #3
 800af4a:	3204      	adds	r2, #4
 800af4c:	f104 0115 	add.w	r1, r4, #21
 800af50:	428f      	cmp	r7, r1
 800af52:	bf38      	it	cc
 800af54:	2204      	movcc	r2, #4
 800af56:	9201      	str	r2, [sp, #4]
 800af58:	9a02      	ldr	r2, [sp, #8]
 800af5a:	9303      	str	r3, [sp, #12]
 800af5c:	429a      	cmp	r2, r3
 800af5e:	d80c      	bhi.n	800af7a <__multiply+0x9e>
 800af60:	2e00      	cmp	r6, #0
 800af62:	dd03      	ble.n	800af6c <__multiply+0x90>
 800af64:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800af68:	2b00      	cmp	r3, #0
 800af6a:	d05a      	beq.n	800b022 <__multiply+0x146>
 800af6c:	6106      	str	r6, [r0, #16]
 800af6e:	b005      	add	sp, #20
 800af70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af74:	f843 2b04 	str.w	r2, [r3], #4
 800af78:	e7d8      	b.n	800af2c <__multiply+0x50>
 800af7a:	f8b3 a000 	ldrh.w	sl, [r3]
 800af7e:	f1ba 0f00 	cmp.w	sl, #0
 800af82:	d024      	beq.n	800afce <__multiply+0xf2>
 800af84:	f104 0e14 	add.w	lr, r4, #20
 800af88:	46a9      	mov	r9, r5
 800af8a:	f04f 0c00 	mov.w	ip, #0
 800af8e:	f85e 2b04 	ldr.w	r2, [lr], #4
 800af92:	f8d9 1000 	ldr.w	r1, [r9]
 800af96:	fa1f fb82 	uxth.w	fp, r2
 800af9a:	b289      	uxth	r1, r1
 800af9c:	fb0a 110b 	mla	r1, sl, fp, r1
 800afa0:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800afa4:	f8d9 2000 	ldr.w	r2, [r9]
 800afa8:	4461      	add	r1, ip
 800afaa:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800afae:	fb0a c20b 	mla	r2, sl, fp, ip
 800afb2:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800afb6:	b289      	uxth	r1, r1
 800afb8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800afbc:	4577      	cmp	r7, lr
 800afbe:	f849 1b04 	str.w	r1, [r9], #4
 800afc2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800afc6:	d8e2      	bhi.n	800af8e <__multiply+0xb2>
 800afc8:	9a01      	ldr	r2, [sp, #4]
 800afca:	f845 c002 	str.w	ip, [r5, r2]
 800afce:	9a03      	ldr	r2, [sp, #12]
 800afd0:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800afd4:	3304      	adds	r3, #4
 800afd6:	f1b9 0f00 	cmp.w	r9, #0
 800afda:	d020      	beq.n	800b01e <__multiply+0x142>
 800afdc:	6829      	ldr	r1, [r5, #0]
 800afde:	f104 0c14 	add.w	ip, r4, #20
 800afe2:	46ae      	mov	lr, r5
 800afe4:	f04f 0a00 	mov.w	sl, #0
 800afe8:	f8bc b000 	ldrh.w	fp, [ip]
 800afec:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800aff0:	fb09 220b 	mla	r2, r9, fp, r2
 800aff4:	4492      	add	sl, r2
 800aff6:	b289      	uxth	r1, r1
 800aff8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800affc:	f84e 1b04 	str.w	r1, [lr], #4
 800b000:	f85c 2b04 	ldr.w	r2, [ip], #4
 800b004:	f8be 1000 	ldrh.w	r1, [lr]
 800b008:	0c12      	lsrs	r2, r2, #16
 800b00a:	fb09 1102 	mla	r1, r9, r2, r1
 800b00e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800b012:	4567      	cmp	r7, ip
 800b014:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800b018:	d8e6      	bhi.n	800afe8 <__multiply+0x10c>
 800b01a:	9a01      	ldr	r2, [sp, #4]
 800b01c:	50a9      	str	r1, [r5, r2]
 800b01e:	3504      	adds	r5, #4
 800b020:	e79a      	b.n	800af58 <__multiply+0x7c>
 800b022:	3e01      	subs	r6, #1
 800b024:	e79c      	b.n	800af60 <__multiply+0x84>
 800b026:	bf00      	nop
 800b028:	0800cca8 	.word	0x0800cca8
 800b02c:	0800cd34 	.word	0x0800cd34

0800b030 <__pow5mult>:
 800b030:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b034:	4615      	mov	r5, r2
 800b036:	f012 0203 	ands.w	r2, r2, #3
 800b03a:	4606      	mov	r6, r0
 800b03c:	460f      	mov	r7, r1
 800b03e:	d007      	beq.n	800b050 <__pow5mult+0x20>
 800b040:	4c25      	ldr	r4, [pc, #148]	; (800b0d8 <__pow5mult+0xa8>)
 800b042:	3a01      	subs	r2, #1
 800b044:	2300      	movs	r3, #0
 800b046:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800b04a:	f7ff fe51 	bl	800acf0 <__multadd>
 800b04e:	4607      	mov	r7, r0
 800b050:	10ad      	asrs	r5, r5, #2
 800b052:	d03d      	beq.n	800b0d0 <__pow5mult+0xa0>
 800b054:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800b056:	b97c      	cbnz	r4, 800b078 <__pow5mult+0x48>
 800b058:	2010      	movs	r0, #16
 800b05a:	f7ff fdbf 	bl	800abdc <malloc>
 800b05e:	4602      	mov	r2, r0
 800b060:	6270      	str	r0, [r6, #36]	; 0x24
 800b062:	b928      	cbnz	r0, 800b070 <__pow5mult+0x40>
 800b064:	4b1d      	ldr	r3, [pc, #116]	; (800b0dc <__pow5mult+0xac>)
 800b066:	481e      	ldr	r0, [pc, #120]	; (800b0e0 <__pow5mult+0xb0>)
 800b068:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800b06c:	f000 fd2e 	bl	800bacc <__assert_func>
 800b070:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800b074:	6004      	str	r4, [r0, #0]
 800b076:	60c4      	str	r4, [r0, #12]
 800b078:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800b07c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800b080:	b94c      	cbnz	r4, 800b096 <__pow5mult+0x66>
 800b082:	f240 2171 	movw	r1, #625	; 0x271
 800b086:	4630      	mov	r0, r6
 800b088:	f7ff ff12 	bl	800aeb0 <__i2b>
 800b08c:	2300      	movs	r3, #0
 800b08e:	f8c8 0008 	str.w	r0, [r8, #8]
 800b092:	4604      	mov	r4, r0
 800b094:	6003      	str	r3, [r0, #0]
 800b096:	f04f 0900 	mov.w	r9, #0
 800b09a:	07eb      	lsls	r3, r5, #31
 800b09c:	d50a      	bpl.n	800b0b4 <__pow5mult+0x84>
 800b09e:	4639      	mov	r1, r7
 800b0a0:	4622      	mov	r2, r4
 800b0a2:	4630      	mov	r0, r6
 800b0a4:	f7ff ff1a 	bl	800aedc <__multiply>
 800b0a8:	4639      	mov	r1, r7
 800b0aa:	4680      	mov	r8, r0
 800b0ac:	4630      	mov	r0, r6
 800b0ae:	f7ff fdfd 	bl	800acac <_Bfree>
 800b0b2:	4647      	mov	r7, r8
 800b0b4:	106d      	asrs	r5, r5, #1
 800b0b6:	d00b      	beq.n	800b0d0 <__pow5mult+0xa0>
 800b0b8:	6820      	ldr	r0, [r4, #0]
 800b0ba:	b938      	cbnz	r0, 800b0cc <__pow5mult+0x9c>
 800b0bc:	4622      	mov	r2, r4
 800b0be:	4621      	mov	r1, r4
 800b0c0:	4630      	mov	r0, r6
 800b0c2:	f7ff ff0b 	bl	800aedc <__multiply>
 800b0c6:	6020      	str	r0, [r4, #0]
 800b0c8:	f8c0 9000 	str.w	r9, [r0]
 800b0cc:	4604      	mov	r4, r0
 800b0ce:	e7e4      	b.n	800b09a <__pow5mult+0x6a>
 800b0d0:	4638      	mov	r0, r7
 800b0d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b0d6:	bf00      	nop
 800b0d8:	0800ce80 	.word	0x0800ce80
 800b0dc:	0800cc36 	.word	0x0800cc36
 800b0e0:	0800cd34 	.word	0x0800cd34

0800b0e4 <__lshift>:
 800b0e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b0e8:	460c      	mov	r4, r1
 800b0ea:	6849      	ldr	r1, [r1, #4]
 800b0ec:	6923      	ldr	r3, [r4, #16]
 800b0ee:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800b0f2:	68a3      	ldr	r3, [r4, #8]
 800b0f4:	4607      	mov	r7, r0
 800b0f6:	4691      	mov	r9, r2
 800b0f8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800b0fc:	f108 0601 	add.w	r6, r8, #1
 800b100:	42b3      	cmp	r3, r6
 800b102:	db0b      	blt.n	800b11c <__lshift+0x38>
 800b104:	4638      	mov	r0, r7
 800b106:	f7ff fd91 	bl	800ac2c <_Balloc>
 800b10a:	4605      	mov	r5, r0
 800b10c:	b948      	cbnz	r0, 800b122 <__lshift+0x3e>
 800b10e:	4602      	mov	r2, r0
 800b110:	4b2a      	ldr	r3, [pc, #168]	; (800b1bc <__lshift+0xd8>)
 800b112:	482b      	ldr	r0, [pc, #172]	; (800b1c0 <__lshift+0xdc>)
 800b114:	f240 11d9 	movw	r1, #473	; 0x1d9
 800b118:	f000 fcd8 	bl	800bacc <__assert_func>
 800b11c:	3101      	adds	r1, #1
 800b11e:	005b      	lsls	r3, r3, #1
 800b120:	e7ee      	b.n	800b100 <__lshift+0x1c>
 800b122:	2300      	movs	r3, #0
 800b124:	f100 0114 	add.w	r1, r0, #20
 800b128:	f100 0210 	add.w	r2, r0, #16
 800b12c:	4618      	mov	r0, r3
 800b12e:	4553      	cmp	r3, sl
 800b130:	db37      	blt.n	800b1a2 <__lshift+0xbe>
 800b132:	6920      	ldr	r0, [r4, #16]
 800b134:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800b138:	f104 0314 	add.w	r3, r4, #20
 800b13c:	f019 091f 	ands.w	r9, r9, #31
 800b140:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800b144:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800b148:	d02f      	beq.n	800b1aa <__lshift+0xc6>
 800b14a:	f1c9 0e20 	rsb	lr, r9, #32
 800b14e:	468a      	mov	sl, r1
 800b150:	f04f 0c00 	mov.w	ip, #0
 800b154:	681a      	ldr	r2, [r3, #0]
 800b156:	fa02 f209 	lsl.w	r2, r2, r9
 800b15a:	ea42 020c 	orr.w	r2, r2, ip
 800b15e:	f84a 2b04 	str.w	r2, [sl], #4
 800b162:	f853 2b04 	ldr.w	r2, [r3], #4
 800b166:	4298      	cmp	r0, r3
 800b168:	fa22 fc0e 	lsr.w	ip, r2, lr
 800b16c:	d8f2      	bhi.n	800b154 <__lshift+0x70>
 800b16e:	1b03      	subs	r3, r0, r4
 800b170:	3b15      	subs	r3, #21
 800b172:	f023 0303 	bic.w	r3, r3, #3
 800b176:	3304      	adds	r3, #4
 800b178:	f104 0215 	add.w	r2, r4, #21
 800b17c:	4290      	cmp	r0, r2
 800b17e:	bf38      	it	cc
 800b180:	2304      	movcc	r3, #4
 800b182:	f841 c003 	str.w	ip, [r1, r3]
 800b186:	f1bc 0f00 	cmp.w	ip, #0
 800b18a:	d001      	beq.n	800b190 <__lshift+0xac>
 800b18c:	f108 0602 	add.w	r6, r8, #2
 800b190:	3e01      	subs	r6, #1
 800b192:	4638      	mov	r0, r7
 800b194:	612e      	str	r6, [r5, #16]
 800b196:	4621      	mov	r1, r4
 800b198:	f7ff fd88 	bl	800acac <_Bfree>
 800b19c:	4628      	mov	r0, r5
 800b19e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b1a2:	f842 0f04 	str.w	r0, [r2, #4]!
 800b1a6:	3301      	adds	r3, #1
 800b1a8:	e7c1      	b.n	800b12e <__lshift+0x4a>
 800b1aa:	3904      	subs	r1, #4
 800b1ac:	f853 2b04 	ldr.w	r2, [r3], #4
 800b1b0:	f841 2f04 	str.w	r2, [r1, #4]!
 800b1b4:	4298      	cmp	r0, r3
 800b1b6:	d8f9      	bhi.n	800b1ac <__lshift+0xc8>
 800b1b8:	e7ea      	b.n	800b190 <__lshift+0xac>
 800b1ba:	bf00      	nop
 800b1bc:	0800cca8 	.word	0x0800cca8
 800b1c0:	0800cd34 	.word	0x0800cd34

0800b1c4 <__mcmp>:
 800b1c4:	b530      	push	{r4, r5, lr}
 800b1c6:	6902      	ldr	r2, [r0, #16]
 800b1c8:	690c      	ldr	r4, [r1, #16]
 800b1ca:	1b12      	subs	r2, r2, r4
 800b1cc:	d10e      	bne.n	800b1ec <__mcmp+0x28>
 800b1ce:	f100 0314 	add.w	r3, r0, #20
 800b1d2:	3114      	adds	r1, #20
 800b1d4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800b1d8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800b1dc:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800b1e0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800b1e4:	42a5      	cmp	r5, r4
 800b1e6:	d003      	beq.n	800b1f0 <__mcmp+0x2c>
 800b1e8:	d305      	bcc.n	800b1f6 <__mcmp+0x32>
 800b1ea:	2201      	movs	r2, #1
 800b1ec:	4610      	mov	r0, r2
 800b1ee:	bd30      	pop	{r4, r5, pc}
 800b1f0:	4283      	cmp	r3, r0
 800b1f2:	d3f3      	bcc.n	800b1dc <__mcmp+0x18>
 800b1f4:	e7fa      	b.n	800b1ec <__mcmp+0x28>
 800b1f6:	f04f 32ff 	mov.w	r2, #4294967295
 800b1fa:	e7f7      	b.n	800b1ec <__mcmp+0x28>

0800b1fc <__mdiff>:
 800b1fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b200:	460c      	mov	r4, r1
 800b202:	4606      	mov	r6, r0
 800b204:	4611      	mov	r1, r2
 800b206:	4620      	mov	r0, r4
 800b208:	4690      	mov	r8, r2
 800b20a:	f7ff ffdb 	bl	800b1c4 <__mcmp>
 800b20e:	1e05      	subs	r5, r0, #0
 800b210:	d110      	bne.n	800b234 <__mdiff+0x38>
 800b212:	4629      	mov	r1, r5
 800b214:	4630      	mov	r0, r6
 800b216:	f7ff fd09 	bl	800ac2c <_Balloc>
 800b21a:	b930      	cbnz	r0, 800b22a <__mdiff+0x2e>
 800b21c:	4b3a      	ldr	r3, [pc, #232]	; (800b308 <__mdiff+0x10c>)
 800b21e:	4602      	mov	r2, r0
 800b220:	f240 2132 	movw	r1, #562	; 0x232
 800b224:	4839      	ldr	r0, [pc, #228]	; (800b30c <__mdiff+0x110>)
 800b226:	f000 fc51 	bl	800bacc <__assert_func>
 800b22a:	2301      	movs	r3, #1
 800b22c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800b230:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b234:	bfa4      	itt	ge
 800b236:	4643      	movge	r3, r8
 800b238:	46a0      	movge	r8, r4
 800b23a:	4630      	mov	r0, r6
 800b23c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800b240:	bfa6      	itte	ge
 800b242:	461c      	movge	r4, r3
 800b244:	2500      	movge	r5, #0
 800b246:	2501      	movlt	r5, #1
 800b248:	f7ff fcf0 	bl	800ac2c <_Balloc>
 800b24c:	b920      	cbnz	r0, 800b258 <__mdiff+0x5c>
 800b24e:	4b2e      	ldr	r3, [pc, #184]	; (800b308 <__mdiff+0x10c>)
 800b250:	4602      	mov	r2, r0
 800b252:	f44f 7110 	mov.w	r1, #576	; 0x240
 800b256:	e7e5      	b.n	800b224 <__mdiff+0x28>
 800b258:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800b25c:	6926      	ldr	r6, [r4, #16]
 800b25e:	60c5      	str	r5, [r0, #12]
 800b260:	f104 0914 	add.w	r9, r4, #20
 800b264:	f108 0514 	add.w	r5, r8, #20
 800b268:	f100 0e14 	add.w	lr, r0, #20
 800b26c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800b270:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800b274:	f108 0210 	add.w	r2, r8, #16
 800b278:	46f2      	mov	sl, lr
 800b27a:	2100      	movs	r1, #0
 800b27c:	f859 3b04 	ldr.w	r3, [r9], #4
 800b280:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800b284:	fa1f f883 	uxth.w	r8, r3
 800b288:	fa11 f18b 	uxtah	r1, r1, fp
 800b28c:	0c1b      	lsrs	r3, r3, #16
 800b28e:	eba1 0808 	sub.w	r8, r1, r8
 800b292:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800b296:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800b29a:	fa1f f888 	uxth.w	r8, r8
 800b29e:	1419      	asrs	r1, r3, #16
 800b2a0:	454e      	cmp	r6, r9
 800b2a2:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800b2a6:	f84a 3b04 	str.w	r3, [sl], #4
 800b2aa:	d8e7      	bhi.n	800b27c <__mdiff+0x80>
 800b2ac:	1b33      	subs	r3, r6, r4
 800b2ae:	3b15      	subs	r3, #21
 800b2b0:	f023 0303 	bic.w	r3, r3, #3
 800b2b4:	3304      	adds	r3, #4
 800b2b6:	3415      	adds	r4, #21
 800b2b8:	42a6      	cmp	r6, r4
 800b2ba:	bf38      	it	cc
 800b2bc:	2304      	movcc	r3, #4
 800b2be:	441d      	add	r5, r3
 800b2c0:	4473      	add	r3, lr
 800b2c2:	469e      	mov	lr, r3
 800b2c4:	462e      	mov	r6, r5
 800b2c6:	4566      	cmp	r6, ip
 800b2c8:	d30e      	bcc.n	800b2e8 <__mdiff+0xec>
 800b2ca:	f10c 0203 	add.w	r2, ip, #3
 800b2ce:	1b52      	subs	r2, r2, r5
 800b2d0:	f022 0203 	bic.w	r2, r2, #3
 800b2d4:	3d03      	subs	r5, #3
 800b2d6:	45ac      	cmp	ip, r5
 800b2d8:	bf38      	it	cc
 800b2da:	2200      	movcc	r2, #0
 800b2dc:	441a      	add	r2, r3
 800b2de:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800b2e2:	b17b      	cbz	r3, 800b304 <__mdiff+0x108>
 800b2e4:	6107      	str	r7, [r0, #16]
 800b2e6:	e7a3      	b.n	800b230 <__mdiff+0x34>
 800b2e8:	f856 8b04 	ldr.w	r8, [r6], #4
 800b2ec:	fa11 f288 	uxtah	r2, r1, r8
 800b2f0:	1414      	asrs	r4, r2, #16
 800b2f2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800b2f6:	b292      	uxth	r2, r2
 800b2f8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800b2fc:	f84e 2b04 	str.w	r2, [lr], #4
 800b300:	1421      	asrs	r1, r4, #16
 800b302:	e7e0      	b.n	800b2c6 <__mdiff+0xca>
 800b304:	3f01      	subs	r7, #1
 800b306:	e7ea      	b.n	800b2de <__mdiff+0xe2>
 800b308:	0800cca8 	.word	0x0800cca8
 800b30c:	0800cd34 	.word	0x0800cd34

0800b310 <__ulp>:
 800b310:	b082      	sub	sp, #8
 800b312:	ed8d 0b00 	vstr	d0, [sp]
 800b316:	9b01      	ldr	r3, [sp, #4]
 800b318:	4912      	ldr	r1, [pc, #72]	; (800b364 <__ulp+0x54>)
 800b31a:	4019      	ands	r1, r3
 800b31c:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 800b320:	2900      	cmp	r1, #0
 800b322:	dd05      	ble.n	800b330 <__ulp+0x20>
 800b324:	2200      	movs	r2, #0
 800b326:	460b      	mov	r3, r1
 800b328:	ec43 2b10 	vmov	d0, r2, r3
 800b32c:	b002      	add	sp, #8
 800b32e:	4770      	bx	lr
 800b330:	4249      	negs	r1, r1
 800b332:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 800b336:	ea4f 5021 	mov.w	r0, r1, asr #20
 800b33a:	f04f 0200 	mov.w	r2, #0
 800b33e:	f04f 0300 	mov.w	r3, #0
 800b342:	da04      	bge.n	800b34e <__ulp+0x3e>
 800b344:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 800b348:	fa41 f300 	asr.w	r3, r1, r0
 800b34c:	e7ec      	b.n	800b328 <__ulp+0x18>
 800b34e:	f1a0 0114 	sub.w	r1, r0, #20
 800b352:	291e      	cmp	r1, #30
 800b354:	bfda      	itte	le
 800b356:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 800b35a:	fa20 f101 	lsrle.w	r1, r0, r1
 800b35e:	2101      	movgt	r1, #1
 800b360:	460a      	mov	r2, r1
 800b362:	e7e1      	b.n	800b328 <__ulp+0x18>
 800b364:	7ff00000 	.word	0x7ff00000

0800b368 <__b2d>:
 800b368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b36a:	6905      	ldr	r5, [r0, #16]
 800b36c:	f100 0714 	add.w	r7, r0, #20
 800b370:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800b374:	1f2e      	subs	r6, r5, #4
 800b376:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800b37a:	4620      	mov	r0, r4
 800b37c:	f7ff fd48 	bl	800ae10 <__hi0bits>
 800b380:	f1c0 0320 	rsb	r3, r0, #32
 800b384:	280a      	cmp	r0, #10
 800b386:	f8df c07c 	ldr.w	ip, [pc, #124]	; 800b404 <__b2d+0x9c>
 800b38a:	600b      	str	r3, [r1, #0]
 800b38c:	dc14      	bgt.n	800b3b8 <__b2d+0x50>
 800b38e:	f1c0 0e0b 	rsb	lr, r0, #11
 800b392:	fa24 f10e 	lsr.w	r1, r4, lr
 800b396:	42b7      	cmp	r7, r6
 800b398:	ea41 030c 	orr.w	r3, r1, ip
 800b39c:	bf34      	ite	cc
 800b39e:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800b3a2:	2100      	movcs	r1, #0
 800b3a4:	3015      	adds	r0, #21
 800b3a6:	fa04 f000 	lsl.w	r0, r4, r0
 800b3aa:	fa21 f10e 	lsr.w	r1, r1, lr
 800b3ae:	ea40 0201 	orr.w	r2, r0, r1
 800b3b2:	ec43 2b10 	vmov	d0, r2, r3
 800b3b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b3b8:	42b7      	cmp	r7, r6
 800b3ba:	bf3a      	itte	cc
 800b3bc:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800b3c0:	f1a5 0608 	subcc.w	r6, r5, #8
 800b3c4:	2100      	movcs	r1, #0
 800b3c6:	380b      	subs	r0, #11
 800b3c8:	d017      	beq.n	800b3fa <__b2d+0x92>
 800b3ca:	f1c0 0c20 	rsb	ip, r0, #32
 800b3ce:	fa04 f500 	lsl.w	r5, r4, r0
 800b3d2:	42be      	cmp	r6, r7
 800b3d4:	fa21 f40c 	lsr.w	r4, r1, ip
 800b3d8:	ea45 0504 	orr.w	r5, r5, r4
 800b3dc:	bf8c      	ite	hi
 800b3de:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 800b3e2:	2400      	movls	r4, #0
 800b3e4:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 800b3e8:	fa01 f000 	lsl.w	r0, r1, r0
 800b3ec:	fa24 f40c 	lsr.w	r4, r4, ip
 800b3f0:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800b3f4:	ea40 0204 	orr.w	r2, r0, r4
 800b3f8:	e7db      	b.n	800b3b2 <__b2d+0x4a>
 800b3fa:	ea44 030c 	orr.w	r3, r4, ip
 800b3fe:	460a      	mov	r2, r1
 800b400:	e7d7      	b.n	800b3b2 <__b2d+0x4a>
 800b402:	bf00      	nop
 800b404:	3ff00000 	.word	0x3ff00000

0800b408 <__d2b>:
 800b408:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b40c:	4689      	mov	r9, r1
 800b40e:	2101      	movs	r1, #1
 800b410:	ec57 6b10 	vmov	r6, r7, d0
 800b414:	4690      	mov	r8, r2
 800b416:	f7ff fc09 	bl	800ac2c <_Balloc>
 800b41a:	4604      	mov	r4, r0
 800b41c:	b930      	cbnz	r0, 800b42c <__d2b+0x24>
 800b41e:	4602      	mov	r2, r0
 800b420:	4b25      	ldr	r3, [pc, #148]	; (800b4b8 <__d2b+0xb0>)
 800b422:	4826      	ldr	r0, [pc, #152]	; (800b4bc <__d2b+0xb4>)
 800b424:	f240 310a 	movw	r1, #778	; 0x30a
 800b428:	f000 fb50 	bl	800bacc <__assert_func>
 800b42c:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800b430:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800b434:	bb35      	cbnz	r5, 800b484 <__d2b+0x7c>
 800b436:	2e00      	cmp	r6, #0
 800b438:	9301      	str	r3, [sp, #4]
 800b43a:	d028      	beq.n	800b48e <__d2b+0x86>
 800b43c:	4668      	mov	r0, sp
 800b43e:	9600      	str	r6, [sp, #0]
 800b440:	f7ff fd06 	bl	800ae50 <__lo0bits>
 800b444:	9900      	ldr	r1, [sp, #0]
 800b446:	b300      	cbz	r0, 800b48a <__d2b+0x82>
 800b448:	9a01      	ldr	r2, [sp, #4]
 800b44a:	f1c0 0320 	rsb	r3, r0, #32
 800b44e:	fa02 f303 	lsl.w	r3, r2, r3
 800b452:	430b      	orrs	r3, r1
 800b454:	40c2      	lsrs	r2, r0
 800b456:	6163      	str	r3, [r4, #20]
 800b458:	9201      	str	r2, [sp, #4]
 800b45a:	9b01      	ldr	r3, [sp, #4]
 800b45c:	61a3      	str	r3, [r4, #24]
 800b45e:	2b00      	cmp	r3, #0
 800b460:	bf14      	ite	ne
 800b462:	2202      	movne	r2, #2
 800b464:	2201      	moveq	r2, #1
 800b466:	6122      	str	r2, [r4, #16]
 800b468:	b1d5      	cbz	r5, 800b4a0 <__d2b+0x98>
 800b46a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800b46e:	4405      	add	r5, r0
 800b470:	f8c9 5000 	str.w	r5, [r9]
 800b474:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800b478:	f8c8 0000 	str.w	r0, [r8]
 800b47c:	4620      	mov	r0, r4
 800b47e:	b003      	add	sp, #12
 800b480:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b484:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800b488:	e7d5      	b.n	800b436 <__d2b+0x2e>
 800b48a:	6161      	str	r1, [r4, #20]
 800b48c:	e7e5      	b.n	800b45a <__d2b+0x52>
 800b48e:	a801      	add	r0, sp, #4
 800b490:	f7ff fcde 	bl	800ae50 <__lo0bits>
 800b494:	9b01      	ldr	r3, [sp, #4]
 800b496:	6163      	str	r3, [r4, #20]
 800b498:	2201      	movs	r2, #1
 800b49a:	6122      	str	r2, [r4, #16]
 800b49c:	3020      	adds	r0, #32
 800b49e:	e7e3      	b.n	800b468 <__d2b+0x60>
 800b4a0:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800b4a4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800b4a8:	f8c9 0000 	str.w	r0, [r9]
 800b4ac:	6918      	ldr	r0, [r3, #16]
 800b4ae:	f7ff fcaf 	bl	800ae10 <__hi0bits>
 800b4b2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800b4b6:	e7df      	b.n	800b478 <__d2b+0x70>
 800b4b8:	0800cca8 	.word	0x0800cca8
 800b4bc:	0800cd34 	.word	0x0800cd34

0800b4c0 <__ratio>:
 800b4c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b4c4:	4688      	mov	r8, r1
 800b4c6:	4669      	mov	r1, sp
 800b4c8:	4681      	mov	r9, r0
 800b4ca:	f7ff ff4d 	bl	800b368 <__b2d>
 800b4ce:	a901      	add	r1, sp, #4
 800b4d0:	4640      	mov	r0, r8
 800b4d2:	ec55 4b10 	vmov	r4, r5, d0
 800b4d6:	f7ff ff47 	bl	800b368 <__b2d>
 800b4da:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800b4de:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800b4e2:	eba3 0c02 	sub.w	ip, r3, r2
 800b4e6:	e9dd 3200 	ldrd	r3, r2, [sp]
 800b4ea:	1a9b      	subs	r3, r3, r2
 800b4ec:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800b4f0:	ec51 0b10 	vmov	r0, r1, d0
 800b4f4:	2b00      	cmp	r3, #0
 800b4f6:	bfd6      	itet	le
 800b4f8:	460a      	movle	r2, r1
 800b4fa:	462a      	movgt	r2, r5
 800b4fc:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800b500:	468b      	mov	fp, r1
 800b502:	462f      	mov	r7, r5
 800b504:	bfd4      	ite	le
 800b506:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800b50a:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800b50e:	4620      	mov	r0, r4
 800b510:	ee10 2a10 	vmov	r2, s0
 800b514:	465b      	mov	r3, fp
 800b516:	4639      	mov	r1, r7
 800b518:	f7f5 f998 	bl	800084c <__aeabi_ddiv>
 800b51c:	ec41 0b10 	vmov	d0, r0, r1
 800b520:	b003      	add	sp, #12
 800b522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b526 <__copybits>:
 800b526:	3901      	subs	r1, #1
 800b528:	b570      	push	{r4, r5, r6, lr}
 800b52a:	1149      	asrs	r1, r1, #5
 800b52c:	6914      	ldr	r4, [r2, #16]
 800b52e:	3101      	adds	r1, #1
 800b530:	f102 0314 	add.w	r3, r2, #20
 800b534:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800b538:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800b53c:	1f05      	subs	r5, r0, #4
 800b53e:	42a3      	cmp	r3, r4
 800b540:	d30c      	bcc.n	800b55c <__copybits+0x36>
 800b542:	1aa3      	subs	r3, r4, r2
 800b544:	3b11      	subs	r3, #17
 800b546:	f023 0303 	bic.w	r3, r3, #3
 800b54a:	3211      	adds	r2, #17
 800b54c:	42a2      	cmp	r2, r4
 800b54e:	bf88      	it	hi
 800b550:	2300      	movhi	r3, #0
 800b552:	4418      	add	r0, r3
 800b554:	2300      	movs	r3, #0
 800b556:	4288      	cmp	r0, r1
 800b558:	d305      	bcc.n	800b566 <__copybits+0x40>
 800b55a:	bd70      	pop	{r4, r5, r6, pc}
 800b55c:	f853 6b04 	ldr.w	r6, [r3], #4
 800b560:	f845 6f04 	str.w	r6, [r5, #4]!
 800b564:	e7eb      	b.n	800b53e <__copybits+0x18>
 800b566:	f840 3b04 	str.w	r3, [r0], #4
 800b56a:	e7f4      	b.n	800b556 <__copybits+0x30>

0800b56c <__any_on>:
 800b56c:	f100 0214 	add.w	r2, r0, #20
 800b570:	6900      	ldr	r0, [r0, #16]
 800b572:	114b      	asrs	r3, r1, #5
 800b574:	4298      	cmp	r0, r3
 800b576:	b510      	push	{r4, lr}
 800b578:	db11      	blt.n	800b59e <__any_on+0x32>
 800b57a:	dd0a      	ble.n	800b592 <__any_on+0x26>
 800b57c:	f011 011f 	ands.w	r1, r1, #31
 800b580:	d007      	beq.n	800b592 <__any_on+0x26>
 800b582:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800b586:	fa24 f001 	lsr.w	r0, r4, r1
 800b58a:	fa00 f101 	lsl.w	r1, r0, r1
 800b58e:	428c      	cmp	r4, r1
 800b590:	d10b      	bne.n	800b5aa <__any_on+0x3e>
 800b592:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800b596:	4293      	cmp	r3, r2
 800b598:	d803      	bhi.n	800b5a2 <__any_on+0x36>
 800b59a:	2000      	movs	r0, #0
 800b59c:	bd10      	pop	{r4, pc}
 800b59e:	4603      	mov	r3, r0
 800b5a0:	e7f7      	b.n	800b592 <__any_on+0x26>
 800b5a2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800b5a6:	2900      	cmp	r1, #0
 800b5a8:	d0f5      	beq.n	800b596 <__any_on+0x2a>
 800b5aa:	2001      	movs	r0, #1
 800b5ac:	e7f6      	b.n	800b59c <__any_on+0x30>

0800b5ae <_calloc_r>:
 800b5ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b5b0:	fba1 2402 	umull	r2, r4, r1, r2
 800b5b4:	b94c      	cbnz	r4, 800b5ca <_calloc_r+0x1c>
 800b5b6:	4611      	mov	r1, r2
 800b5b8:	9201      	str	r2, [sp, #4]
 800b5ba:	f000 f87b 	bl	800b6b4 <_malloc_r>
 800b5be:	9a01      	ldr	r2, [sp, #4]
 800b5c0:	4605      	mov	r5, r0
 800b5c2:	b930      	cbnz	r0, 800b5d2 <_calloc_r+0x24>
 800b5c4:	4628      	mov	r0, r5
 800b5c6:	b003      	add	sp, #12
 800b5c8:	bd30      	pop	{r4, r5, pc}
 800b5ca:	220c      	movs	r2, #12
 800b5cc:	6002      	str	r2, [r0, #0]
 800b5ce:	2500      	movs	r5, #0
 800b5d0:	e7f8      	b.n	800b5c4 <_calloc_r+0x16>
 800b5d2:	4621      	mov	r1, r4
 800b5d4:	f7fc fbc0 	bl	8007d58 <memset>
 800b5d8:	e7f4      	b.n	800b5c4 <_calloc_r+0x16>
	...

0800b5dc <_free_r>:
 800b5dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b5de:	2900      	cmp	r1, #0
 800b5e0:	d044      	beq.n	800b66c <_free_r+0x90>
 800b5e2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800b5e6:	9001      	str	r0, [sp, #4]
 800b5e8:	2b00      	cmp	r3, #0
 800b5ea:	f1a1 0404 	sub.w	r4, r1, #4
 800b5ee:	bfb8      	it	lt
 800b5f0:	18e4      	addlt	r4, r4, r3
 800b5f2:	f000 fab5 	bl	800bb60 <__malloc_lock>
 800b5f6:	4a1e      	ldr	r2, [pc, #120]	; (800b670 <_free_r+0x94>)
 800b5f8:	9801      	ldr	r0, [sp, #4]
 800b5fa:	6813      	ldr	r3, [r2, #0]
 800b5fc:	b933      	cbnz	r3, 800b60c <_free_r+0x30>
 800b5fe:	6063      	str	r3, [r4, #4]
 800b600:	6014      	str	r4, [r2, #0]
 800b602:	b003      	add	sp, #12
 800b604:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b608:	f000 bab0 	b.w	800bb6c <__malloc_unlock>
 800b60c:	42a3      	cmp	r3, r4
 800b60e:	d908      	bls.n	800b622 <_free_r+0x46>
 800b610:	6825      	ldr	r5, [r4, #0]
 800b612:	1961      	adds	r1, r4, r5
 800b614:	428b      	cmp	r3, r1
 800b616:	bf01      	itttt	eq
 800b618:	6819      	ldreq	r1, [r3, #0]
 800b61a:	685b      	ldreq	r3, [r3, #4]
 800b61c:	1949      	addeq	r1, r1, r5
 800b61e:	6021      	streq	r1, [r4, #0]
 800b620:	e7ed      	b.n	800b5fe <_free_r+0x22>
 800b622:	461a      	mov	r2, r3
 800b624:	685b      	ldr	r3, [r3, #4]
 800b626:	b10b      	cbz	r3, 800b62c <_free_r+0x50>
 800b628:	42a3      	cmp	r3, r4
 800b62a:	d9fa      	bls.n	800b622 <_free_r+0x46>
 800b62c:	6811      	ldr	r1, [r2, #0]
 800b62e:	1855      	adds	r5, r2, r1
 800b630:	42a5      	cmp	r5, r4
 800b632:	d10b      	bne.n	800b64c <_free_r+0x70>
 800b634:	6824      	ldr	r4, [r4, #0]
 800b636:	4421      	add	r1, r4
 800b638:	1854      	adds	r4, r2, r1
 800b63a:	42a3      	cmp	r3, r4
 800b63c:	6011      	str	r1, [r2, #0]
 800b63e:	d1e0      	bne.n	800b602 <_free_r+0x26>
 800b640:	681c      	ldr	r4, [r3, #0]
 800b642:	685b      	ldr	r3, [r3, #4]
 800b644:	6053      	str	r3, [r2, #4]
 800b646:	4421      	add	r1, r4
 800b648:	6011      	str	r1, [r2, #0]
 800b64a:	e7da      	b.n	800b602 <_free_r+0x26>
 800b64c:	d902      	bls.n	800b654 <_free_r+0x78>
 800b64e:	230c      	movs	r3, #12
 800b650:	6003      	str	r3, [r0, #0]
 800b652:	e7d6      	b.n	800b602 <_free_r+0x26>
 800b654:	6825      	ldr	r5, [r4, #0]
 800b656:	1961      	adds	r1, r4, r5
 800b658:	428b      	cmp	r3, r1
 800b65a:	bf04      	itt	eq
 800b65c:	6819      	ldreq	r1, [r3, #0]
 800b65e:	685b      	ldreq	r3, [r3, #4]
 800b660:	6063      	str	r3, [r4, #4]
 800b662:	bf04      	itt	eq
 800b664:	1949      	addeq	r1, r1, r5
 800b666:	6021      	streq	r1, [r4, #0]
 800b668:	6054      	str	r4, [r2, #4]
 800b66a:	e7ca      	b.n	800b602 <_free_r+0x26>
 800b66c:	b003      	add	sp, #12
 800b66e:	bd30      	pop	{r4, r5, pc}
 800b670:	20000440 	.word	0x20000440

0800b674 <sbrk_aligned>:
 800b674:	b570      	push	{r4, r5, r6, lr}
 800b676:	4e0e      	ldr	r6, [pc, #56]	; (800b6b0 <sbrk_aligned+0x3c>)
 800b678:	460c      	mov	r4, r1
 800b67a:	6831      	ldr	r1, [r6, #0]
 800b67c:	4605      	mov	r5, r0
 800b67e:	b911      	cbnz	r1, 800b686 <sbrk_aligned+0x12>
 800b680:	f000 f9f2 	bl	800ba68 <_sbrk_r>
 800b684:	6030      	str	r0, [r6, #0]
 800b686:	4621      	mov	r1, r4
 800b688:	4628      	mov	r0, r5
 800b68a:	f000 f9ed 	bl	800ba68 <_sbrk_r>
 800b68e:	1c43      	adds	r3, r0, #1
 800b690:	d00a      	beq.n	800b6a8 <sbrk_aligned+0x34>
 800b692:	1cc4      	adds	r4, r0, #3
 800b694:	f024 0403 	bic.w	r4, r4, #3
 800b698:	42a0      	cmp	r0, r4
 800b69a:	d007      	beq.n	800b6ac <sbrk_aligned+0x38>
 800b69c:	1a21      	subs	r1, r4, r0
 800b69e:	4628      	mov	r0, r5
 800b6a0:	f000 f9e2 	bl	800ba68 <_sbrk_r>
 800b6a4:	3001      	adds	r0, #1
 800b6a6:	d101      	bne.n	800b6ac <sbrk_aligned+0x38>
 800b6a8:	f04f 34ff 	mov.w	r4, #4294967295
 800b6ac:	4620      	mov	r0, r4
 800b6ae:	bd70      	pop	{r4, r5, r6, pc}
 800b6b0:	20000444 	.word	0x20000444

0800b6b4 <_malloc_r>:
 800b6b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b6b8:	1ccd      	adds	r5, r1, #3
 800b6ba:	f025 0503 	bic.w	r5, r5, #3
 800b6be:	3508      	adds	r5, #8
 800b6c0:	2d0c      	cmp	r5, #12
 800b6c2:	bf38      	it	cc
 800b6c4:	250c      	movcc	r5, #12
 800b6c6:	2d00      	cmp	r5, #0
 800b6c8:	4607      	mov	r7, r0
 800b6ca:	db01      	blt.n	800b6d0 <_malloc_r+0x1c>
 800b6cc:	42a9      	cmp	r1, r5
 800b6ce:	d905      	bls.n	800b6dc <_malloc_r+0x28>
 800b6d0:	230c      	movs	r3, #12
 800b6d2:	603b      	str	r3, [r7, #0]
 800b6d4:	2600      	movs	r6, #0
 800b6d6:	4630      	mov	r0, r6
 800b6d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6dc:	4e2e      	ldr	r6, [pc, #184]	; (800b798 <_malloc_r+0xe4>)
 800b6de:	f000 fa3f 	bl	800bb60 <__malloc_lock>
 800b6e2:	6833      	ldr	r3, [r6, #0]
 800b6e4:	461c      	mov	r4, r3
 800b6e6:	bb34      	cbnz	r4, 800b736 <_malloc_r+0x82>
 800b6e8:	4629      	mov	r1, r5
 800b6ea:	4638      	mov	r0, r7
 800b6ec:	f7ff ffc2 	bl	800b674 <sbrk_aligned>
 800b6f0:	1c43      	adds	r3, r0, #1
 800b6f2:	4604      	mov	r4, r0
 800b6f4:	d14d      	bne.n	800b792 <_malloc_r+0xde>
 800b6f6:	6834      	ldr	r4, [r6, #0]
 800b6f8:	4626      	mov	r6, r4
 800b6fa:	2e00      	cmp	r6, #0
 800b6fc:	d140      	bne.n	800b780 <_malloc_r+0xcc>
 800b6fe:	6823      	ldr	r3, [r4, #0]
 800b700:	4631      	mov	r1, r6
 800b702:	4638      	mov	r0, r7
 800b704:	eb04 0803 	add.w	r8, r4, r3
 800b708:	f000 f9ae 	bl	800ba68 <_sbrk_r>
 800b70c:	4580      	cmp	r8, r0
 800b70e:	d13a      	bne.n	800b786 <_malloc_r+0xd2>
 800b710:	6821      	ldr	r1, [r4, #0]
 800b712:	3503      	adds	r5, #3
 800b714:	1a6d      	subs	r5, r5, r1
 800b716:	f025 0503 	bic.w	r5, r5, #3
 800b71a:	3508      	adds	r5, #8
 800b71c:	2d0c      	cmp	r5, #12
 800b71e:	bf38      	it	cc
 800b720:	250c      	movcc	r5, #12
 800b722:	4629      	mov	r1, r5
 800b724:	4638      	mov	r0, r7
 800b726:	f7ff ffa5 	bl	800b674 <sbrk_aligned>
 800b72a:	3001      	adds	r0, #1
 800b72c:	d02b      	beq.n	800b786 <_malloc_r+0xd2>
 800b72e:	6823      	ldr	r3, [r4, #0]
 800b730:	442b      	add	r3, r5
 800b732:	6023      	str	r3, [r4, #0]
 800b734:	e00e      	b.n	800b754 <_malloc_r+0xa0>
 800b736:	6822      	ldr	r2, [r4, #0]
 800b738:	1b52      	subs	r2, r2, r5
 800b73a:	d41e      	bmi.n	800b77a <_malloc_r+0xc6>
 800b73c:	2a0b      	cmp	r2, #11
 800b73e:	d916      	bls.n	800b76e <_malloc_r+0xba>
 800b740:	1961      	adds	r1, r4, r5
 800b742:	42a3      	cmp	r3, r4
 800b744:	6025      	str	r5, [r4, #0]
 800b746:	bf18      	it	ne
 800b748:	6059      	strne	r1, [r3, #4]
 800b74a:	6863      	ldr	r3, [r4, #4]
 800b74c:	bf08      	it	eq
 800b74e:	6031      	streq	r1, [r6, #0]
 800b750:	5162      	str	r2, [r4, r5]
 800b752:	604b      	str	r3, [r1, #4]
 800b754:	4638      	mov	r0, r7
 800b756:	f104 060b 	add.w	r6, r4, #11
 800b75a:	f000 fa07 	bl	800bb6c <__malloc_unlock>
 800b75e:	f026 0607 	bic.w	r6, r6, #7
 800b762:	1d23      	adds	r3, r4, #4
 800b764:	1af2      	subs	r2, r6, r3
 800b766:	d0b6      	beq.n	800b6d6 <_malloc_r+0x22>
 800b768:	1b9b      	subs	r3, r3, r6
 800b76a:	50a3      	str	r3, [r4, r2]
 800b76c:	e7b3      	b.n	800b6d6 <_malloc_r+0x22>
 800b76e:	6862      	ldr	r2, [r4, #4]
 800b770:	42a3      	cmp	r3, r4
 800b772:	bf0c      	ite	eq
 800b774:	6032      	streq	r2, [r6, #0]
 800b776:	605a      	strne	r2, [r3, #4]
 800b778:	e7ec      	b.n	800b754 <_malloc_r+0xa0>
 800b77a:	4623      	mov	r3, r4
 800b77c:	6864      	ldr	r4, [r4, #4]
 800b77e:	e7b2      	b.n	800b6e6 <_malloc_r+0x32>
 800b780:	4634      	mov	r4, r6
 800b782:	6876      	ldr	r6, [r6, #4]
 800b784:	e7b9      	b.n	800b6fa <_malloc_r+0x46>
 800b786:	230c      	movs	r3, #12
 800b788:	603b      	str	r3, [r7, #0]
 800b78a:	4638      	mov	r0, r7
 800b78c:	f000 f9ee 	bl	800bb6c <__malloc_unlock>
 800b790:	e7a1      	b.n	800b6d6 <_malloc_r+0x22>
 800b792:	6025      	str	r5, [r4, #0]
 800b794:	e7de      	b.n	800b754 <_malloc_r+0xa0>
 800b796:	bf00      	nop
 800b798:	20000440 	.word	0x20000440

0800b79c <__ssputs_r>:
 800b79c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b7a0:	688e      	ldr	r6, [r1, #8]
 800b7a2:	429e      	cmp	r6, r3
 800b7a4:	4682      	mov	sl, r0
 800b7a6:	460c      	mov	r4, r1
 800b7a8:	4690      	mov	r8, r2
 800b7aa:	461f      	mov	r7, r3
 800b7ac:	d838      	bhi.n	800b820 <__ssputs_r+0x84>
 800b7ae:	898a      	ldrh	r2, [r1, #12]
 800b7b0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800b7b4:	d032      	beq.n	800b81c <__ssputs_r+0x80>
 800b7b6:	6825      	ldr	r5, [r4, #0]
 800b7b8:	6909      	ldr	r1, [r1, #16]
 800b7ba:	eba5 0901 	sub.w	r9, r5, r1
 800b7be:	6965      	ldr	r5, [r4, #20]
 800b7c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800b7c4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800b7c8:	3301      	adds	r3, #1
 800b7ca:	444b      	add	r3, r9
 800b7cc:	106d      	asrs	r5, r5, #1
 800b7ce:	429d      	cmp	r5, r3
 800b7d0:	bf38      	it	cc
 800b7d2:	461d      	movcc	r5, r3
 800b7d4:	0553      	lsls	r3, r2, #21
 800b7d6:	d531      	bpl.n	800b83c <__ssputs_r+0xa0>
 800b7d8:	4629      	mov	r1, r5
 800b7da:	f7ff ff6b 	bl	800b6b4 <_malloc_r>
 800b7de:	4606      	mov	r6, r0
 800b7e0:	b950      	cbnz	r0, 800b7f8 <__ssputs_r+0x5c>
 800b7e2:	230c      	movs	r3, #12
 800b7e4:	f8ca 3000 	str.w	r3, [sl]
 800b7e8:	89a3      	ldrh	r3, [r4, #12]
 800b7ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b7ee:	81a3      	strh	r3, [r4, #12]
 800b7f0:	f04f 30ff 	mov.w	r0, #4294967295
 800b7f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b7f8:	6921      	ldr	r1, [r4, #16]
 800b7fa:	464a      	mov	r2, r9
 800b7fc:	f7ff fa08 	bl	800ac10 <memcpy>
 800b800:	89a3      	ldrh	r3, [r4, #12]
 800b802:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800b806:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800b80a:	81a3      	strh	r3, [r4, #12]
 800b80c:	6126      	str	r6, [r4, #16]
 800b80e:	6165      	str	r5, [r4, #20]
 800b810:	444e      	add	r6, r9
 800b812:	eba5 0509 	sub.w	r5, r5, r9
 800b816:	6026      	str	r6, [r4, #0]
 800b818:	60a5      	str	r5, [r4, #8]
 800b81a:	463e      	mov	r6, r7
 800b81c:	42be      	cmp	r6, r7
 800b81e:	d900      	bls.n	800b822 <__ssputs_r+0x86>
 800b820:	463e      	mov	r6, r7
 800b822:	6820      	ldr	r0, [r4, #0]
 800b824:	4632      	mov	r2, r6
 800b826:	4641      	mov	r1, r8
 800b828:	f000 f980 	bl	800bb2c <memmove>
 800b82c:	68a3      	ldr	r3, [r4, #8]
 800b82e:	1b9b      	subs	r3, r3, r6
 800b830:	60a3      	str	r3, [r4, #8]
 800b832:	6823      	ldr	r3, [r4, #0]
 800b834:	4433      	add	r3, r6
 800b836:	6023      	str	r3, [r4, #0]
 800b838:	2000      	movs	r0, #0
 800b83a:	e7db      	b.n	800b7f4 <__ssputs_r+0x58>
 800b83c:	462a      	mov	r2, r5
 800b83e:	f000 f99b 	bl	800bb78 <_realloc_r>
 800b842:	4606      	mov	r6, r0
 800b844:	2800      	cmp	r0, #0
 800b846:	d1e1      	bne.n	800b80c <__ssputs_r+0x70>
 800b848:	6921      	ldr	r1, [r4, #16]
 800b84a:	4650      	mov	r0, sl
 800b84c:	f7ff fec6 	bl	800b5dc <_free_r>
 800b850:	e7c7      	b.n	800b7e2 <__ssputs_r+0x46>
	...

0800b854 <_svfiprintf_r>:
 800b854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b858:	4698      	mov	r8, r3
 800b85a:	898b      	ldrh	r3, [r1, #12]
 800b85c:	061b      	lsls	r3, r3, #24
 800b85e:	b09d      	sub	sp, #116	; 0x74
 800b860:	4607      	mov	r7, r0
 800b862:	460d      	mov	r5, r1
 800b864:	4614      	mov	r4, r2
 800b866:	d50e      	bpl.n	800b886 <_svfiprintf_r+0x32>
 800b868:	690b      	ldr	r3, [r1, #16]
 800b86a:	b963      	cbnz	r3, 800b886 <_svfiprintf_r+0x32>
 800b86c:	2140      	movs	r1, #64	; 0x40
 800b86e:	f7ff ff21 	bl	800b6b4 <_malloc_r>
 800b872:	6028      	str	r0, [r5, #0]
 800b874:	6128      	str	r0, [r5, #16]
 800b876:	b920      	cbnz	r0, 800b882 <_svfiprintf_r+0x2e>
 800b878:	230c      	movs	r3, #12
 800b87a:	603b      	str	r3, [r7, #0]
 800b87c:	f04f 30ff 	mov.w	r0, #4294967295
 800b880:	e0d1      	b.n	800ba26 <_svfiprintf_r+0x1d2>
 800b882:	2340      	movs	r3, #64	; 0x40
 800b884:	616b      	str	r3, [r5, #20]
 800b886:	2300      	movs	r3, #0
 800b888:	9309      	str	r3, [sp, #36]	; 0x24
 800b88a:	2320      	movs	r3, #32
 800b88c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800b890:	f8cd 800c 	str.w	r8, [sp, #12]
 800b894:	2330      	movs	r3, #48	; 0x30
 800b896:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800ba40 <_svfiprintf_r+0x1ec>
 800b89a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800b89e:	f04f 0901 	mov.w	r9, #1
 800b8a2:	4623      	mov	r3, r4
 800b8a4:	469a      	mov	sl, r3
 800b8a6:	f813 2b01 	ldrb.w	r2, [r3], #1
 800b8aa:	b10a      	cbz	r2, 800b8b0 <_svfiprintf_r+0x5c>
 800b8ac:	2a25      	cmp	r2, #37	; 0x25
 800b8ae:	d1f9      	bne.n	800b8a4 <_svfiprintf_r+0x50>
 800b8b0:	ebba 0b04 	subs.w	fp, sl, r4
 800b8b4:	d00b      	beq.n	800b8ce <_svfiprintf_r+0x7a>
 800b8b6:	465b      	mov	r3, fp
 800b8b8:	4622      	mov	r2, r4
 800b8ba:	4629      	mov	r1, r5
 800b8bc:	4638      	mov	r0, r7
 800b8be:	f7ff ff6d 	bl	800b79c <__ssputs_r>
 800b8c2:	3001      	adds	r0, #1
 800b8c4:	f000 80aa 	beq.w	800ba1c <_svfiprintf_r+0x1c8>
 800b8c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b8ca:	445a      	add	r2, fp
 800b8cc:	9209      	str	r2, [sp, #36]	; 0x24
 800b8ce:	f89a 3000 	ldrb.w	r3, [sl]
 800b8d2:	2b00      	cmp	r3, #0
 800b8d4:	f000 80a2 	beq.w	800ba1c <_svfiprintf_r+0x1c8>
 800b8d8:	2300      	movs	r3, #0
 800b8da:	f04f 32ff 	mov.w	r2, #4294967295
 800b8de:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800b8e2:	f10a 0a01 	add.w	sl, sl, #1
 800b8e6:	9304      	str	r3, [sp, #16]
 800b8e8:	9307      	str	r3, [sp, #28]
 800b8ea:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800b8ee:	931a      	str	r3, [sp, #104]	; 0x68
 800b8f0:	4654      	mov	r4, sl
 800b8f2:	2205      	movs	r2, #5
 800b8f4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b8f8:	4851      	ldr	r0, [pc, #324]	; (800ba40 <_svfiprintf_r+0x1ec>)
 800b8fa:	f7f4 fc71 	bl	80001e0 <memchr>
 800b8fe:	9a04      	ldr	r2, [sp, #16]
 800b900:	b9d8      	cbnz	r0, 800b93a <_svfiprintf_r+0xe6>
 800b902:	06d0      	lsls	r0, r2, #27
 800b904:	bf44      	itt	mi
 800b906:	2320      	movmi	r3, #32
 800b908:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800b90c:	0711      	lsls	r1, r2, #28
 800b90e:	bf44      	itt	mi
 800b910:	232b      	movmi	r3, #43	; 0x2b
 800b912:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800b916:	f89a 3000 	ldrb.w	r3, [sl]
 800b91a:	2b2a      	cmp	r3, #42	; 0x2a
 800b91c:	d015      	beq.n	800b94a <_svfiprintf_r+0xf6>
 800b91e:	9a07      	ldr	r2, [sp, #28]
 800b920:	4654      	mov	r4, sl
 800b922:	2000      	movs	r0, #0
 800b924:	f04f 0c0a 	mov.w	ip, #10
 800b928:	4621      	mov	r1, r4
 800b92a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b92e:	3b30      	subs	r3, #48	; 0x30
 800b930:	2b09      	cmp	r3, #9
 800b932:	d94e      	bls.n	800b9d2 <_svfiprintf_r+0x17e>
 800b934:	b1b0      	cbz	r0, 800b964 <_svfiprintf_r+0x110>
 800b936:	9207      	str	r2, [sp, #28]
 800b938:	e014      	b.n	800b964 <_svfiprintf_r+0x110>
 800b93a:	eba0 0308 	sub.w	r3, r0, r8
 800b93e:	fa09 f303 	lsl.w	r3, r9, r3
 800b942:	4313      	orrs	r3, r2
 800b944:	9304      	str	r3, [sp, #16]
 800b946:	46a2      	mov	sl, r4
 800b948:	e7d2      	b.n	800b8f0 <_svfiprintf_r+0x9c>
 800b94a:	9b03      	ldr	r3, [sp, #12]
 800b94c:	1d19      	adds	r1, r3, #4
 800b94e:	681b      	ldr	r3, [r3, #0]
 800b950:	9103      	str	r1, [sp, #12]
 800b952:	2b00      	cmp	r3, #0
 800b954:	bfbb      	ittet	lt
 800b956:	425b      	neglt	r3, r3
 800b958:	f042 0202 	orrlt.w	r2, r2, #2
 800b95c:	9307      	strge	r3, [sp, #28]
 800b95e:	9307      	strlt	r3, [sp, #28]
 800b960:	bfb8      	it	lt
 800b962:	9204      	strlt	r2, [sp, #16]
 800b964:	7823      	ldrb	r3, [r4, #0]
 800b966:	2b2e      	cmp	r3, #46	; 0x2e
 800b968:	d10c      	bne.n	800b984 <_svfiprintf_r+0x130>
 800b96a:	7863      	ldrb	r3, [r4, #1]
 800b96c:	2b2a      	cmp	r3, #42	; 0x2a
 800b96e:	d135      	bne.n	800b9dc <_svfiprintf_r+0x188>
 800b970:	9b03      	ldr	r3, [sp, #12]
 800b972:	1d1a      	adds	r2, r3, #4
 800b974:	681b      	ldr	r3, [r3, #0]
 800b976:	9203      	str	r2, [sp, #12]
 800b978:	2b00      	cmp	r3, #0
 800b97a:	bfb8      	it	lt
 800b97c:	f04f 33ff 	movlt.w	r3, #4294967295
 800b980:	3402      	adds	r4, #2
 800b982:	9305      	str	r3, [sp, #20]
 800b984:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800ba50 <_svfiprintf_r+0x1fc>
 800b988:	7821      	ldrb	r1, [r4, #0]
 800b98a:	2203      	movs	r2, #3
 800b98c:	4650      	mov	r0, sl
 800b98e:	f7f4 fc27 	bl	80001e0 <memchr>
 800b992:	b140      	cbz	r0, 800b9a6 <_svfiprintf_r+0x152>
 800b994:	2340      	movs	r3, #64	; 0x40
 800b996:	eba0 000a 	sub.w	r0, r0, sl
 800b99a:	fa03 f000 	lsl.w	r0, r3, r0
 800b99e:	9b04      	ldr	r3, [sp, #16]
 800b9a0:	4303      	orrs	r3, r0
 800b9a2:	3401      	adds	r4, #1
 800b9a4:	9304      	str	r3, [sp, #16]
 800b9a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b9aa:	4826      	ldr	r0, [pc, #152]	; (800ba44 <_svfiprintf_r+0x1f0>)
 800b9ac:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800b9b0:	2206      	movs	r2, #6
 800b9b2:	f7f4 fc15 	bl	80001e0 <memchr>
 800b9b6:	2800      	cmp	r0, #0
 800b9b8:	d038      	beq.n	800ba2c <_svfiprintf_r+0x1d8>
 800b9ba:	4b23      	ldr	r3, [pc, #140]	; (800ba48 <_svfiprintf_r+0x1f4>)
 800b9bc:	bb1b      	cbnz	r3, 800ba06 <_svfiprintf_r+0x1b2>
 800b9be:	9b03      	ldr	r3, [sp, #12]
 800b9c0:	3307      	adds	r3, #7
 800b9c2:	f023 0307 	bic.w	r3, r3, #7
 800b9c6:	3308      	adds	r3, #8
 800b9c8:	9303      	str	r3, [sp, #12]
 800b9ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b9cc:	4433      	add	r3, r6
 800b9ce:	9309      	str	r3, [sp, #36]	; 0x24
 800b9d0:	e767      	b.n	800b8a2 <_svfiprintf_r+0x4e>
 800b9d2:	fb0c 3202 	mla	r2, ip, r2, r3
 800b9d6:	460c      	mov	r4, r1
 800b9d8:	2001      	movs	r0, #1
 800b9da:	e7a5      	b.n	800b928 <_svfiprintf_r+0xd4>
 800b9dc:	2300      	movs	r3, #0
 800b9de:	3401      	adds	r4, #1
 800b9e0:	9305      	str	r3, [sp, #20]
 800b9e2:	4619      	mov	r1, r3
 800b9e4:	f04f 0c0a 	mov.w	ip, #10
 800b9e8:	4620      	mov	r0, r4
 800b9ea:	f810 2b01 	ldrb.w	r2, [r0], #1
 800b9ee:	3a30      	subs	r2, #48	; 0x30
 800b9f0:	2a09      	cmp	r2, #9
 800b9f2:	d903      	bls.n	800b9fc <_svfiprintf_r+0x1a8>
 800b9f4:	2b00      	cmp	r3, #0
 800b9f6:	d0c5      	beq.n	800b984 <_svfiprintf_r+0x130>
 800b9f8:	9105      	str	r1, [sp, #20]
 800b9fa:	e7c3      	b.n	800b984 <_svfiprintf_r+0x130>
 800b9fc:	fb0c 2101 	mla	r1, ip, r1, r2
 800ba00:	4604      	mov	r4, r0
 800ba02:	2301      	movs	r3, #1
 800ba04:	e7f0      	b.n	800b9e8 <_svfiprintf_r+0x194>
 800ba06:	ab03      	add	r3, sp, #12
 800ba08:	9300      	str	r3, [sp, #0]
 800ba0a:	462a      	mov	r2, r5
 800ba0c:	4b0f      	ldr	r3, [pc, #60]	; (800ba4c <_svfiprintf_r+0x1f8>)
 800ba0e:	a904      	add	r1, sp, #16
 800ba10:	4638      	mov	r0, r7
 800ba12:	f7fc fa49 	bl	8007ea8 <_printf_float>
 800ba16:	1c42      	adds	r2, r0, #1
 800ba18:	4606      	mov	r6, r0
 800ba1a:	d1d6      	bne.n	800b9ca <_svfiprintf_r+0x176>
 800ba1c:	89ab      	ldrh	r3, [r5, #12]
 800ba1e:	065b      	lsls	r3, r3, #25
 800ba20:	f53f af2c 	bmi.w	800b87c <_svfiprintf_r+0x28>
 800ba24:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ba26:	b01d      	add	sp, #116	; 0x74
 800ba28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba2c:	ab03      	add	r3, sp, #12
 800ba2e:	9300      	str	r3, [sp, #0]
 800ba30:	462a      	mov	r2, r5
 800ba32:	4b06      	ldr	r3, [pc, #24]	; (800ba4c <_svfiprintf_r+0x1f8>)
 800ba34:	a904      	add	r1, sp, #16
 800ba36:	4638      	mov	r0, r7
 800ba38:	f7fc fcda 	bl	80083f0 <_printf_i>
 800ba3c:	e7eb      	b.n	800ba16 <_svfiprintf_r+0x1c2>
 800ba3e:	bf00      	nop
 800ba40:	0800ce8c 	.word	0x0800ce8c
 800ba44:	0800ce96 	.word	0x0800ce96
 800ba48:	08007ea9 	.word	0x08007ea9
 800ba4c:	0800b79d 	.word	0x0800b79d
 800ba50:	0800ce92 	.word	0x0800ce92
 800ba54:	00000000 	.word	0x00000000

0800ba58 <nan>:
 800ba58:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800ba60 <nan+0x8>
 800ba5c:	4770      	bx	lr
 800ba5e:	bf00      	nop
 800ba60:	00000000 	.word	0x00000000
 800ba64:	7ff80000 	.word	0x7ff80000

0800ba68 <_sbrk_r>:
 800ba68:	b538      	push	{r3, r4, r5, lr}
 800ba6a:	4d06      	ldr	r5, [pc, #24]	; (800ba84 <_sbrk_r+0x1c>)
 800ba6c:	2300      	movs	r3, #0
 800ba6e:	4604      	mov	r4, r0
 800ba70:	4608      	mov	r0, r1
 800ba72:	602b      	str	r3, [r5, #0]
 800ba74:	f7f7 f8ea 	bl	8002c4c <_sbrk>
 800ba78:	1c43      	adds	r3, r0, #1
 800ba7a:	d102      	bne.n	800ba82 <_sbrk_r+0x1a>
 800ba7c:	682b      	ldr	r3, [r5, #0]
 800ba7e:	b103      	cbz	r3, 800ba82 <_sbrk_r+0x1a>
 800ba80:	6023      	str	r3, [r4, #0]
 800ba82:	bd38      	pop	{r3, r4, r5, pc}
 800ba84:	20000448 	.word	0x20000448

0800ba88 <strncmp>:
 800ba88:	b510      	push	{r4, lr}
 800ba8a:	b17a      	cbz	r2, 800baac <strncmp+0x24>
 800ba8c:	4603      	mov	r3, r0
 800ba8e:	3901      	subs	r1, #1
 800ba90:	1884      	adds	r4, r0, r2
 800ba92:	f813 0b01 	ldrb.w	r0, [r3], #1
 800ba96:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ba9a:	4290      	cmp	r0, r2
 800ba9c:	d101      	bne.n	800baa2 <strncmp+0x1a>
 800ba9e:	42a3      	cmp	r3, r4
 800baa0:	d101      	bne.n	800baa6 <strncmp+0x1e>
 800baa2:	1a80      	subs	r0, r0, r2
 800baa4:	bd10      	pop	{r4, pc}
 800baa6:	2800      	cmp	r0, #0
 800baa8:	d1f3      	bne.n	800ba92 <strncmp+0xa>
 800baaa:	e7fa      	b.n	800baa2 <strncmp+0x1a>
 800baac:	4610      	mov	r0, r2
 800baae:	e7f9      	b.n	800baa4 <strncmp+0x1c>

0800bab0 <__ascii_wctomb>:
 800bab0:	b149      	cbz	r1, 800bac6 <__ascii_wctomb+0x16>
 800bab2:	2aff      	cmp	r2, #255	; 0xff
 800bab4:	bf85      	ittet	hi
 800bab6:	238a      	movhi	r3, #138	; 0x8a
 800bab8:	6003      	strhi	r3, [r0, #0]
 800baba:	700a      	strbls	r2, [r1, #0]
 800babc:	f04f 30ff 	movhi.w	r0, #4294967295
 800bac0:	bf98      	it	ls
 800bac2:	2001      	movls	r0, #1
 800bac4:	4770      	bx	lr
 800bac6:	4608      	mov	r0, r1
 800bac8:	4770      	bx	lr
	...

0800bacc <__assert_func>:
 800bacc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bace:	4614      	mov	r4, r2
 800bad0:	461a      	mov	r2, r3
 800bad2:	4b09      	ldr	r3, [pc, #36]	; (800baf8 <__assert_func+0x2c>)
 800bad4:	681b      	ldr	r3, [r3, #0]
 800bad6:	4605      	mov	r5, r0
 800bad8:	68d8      	ldr	r0, [r3, #12]
 800bada:	b14c      	cbz	r4, 800baf0 <__assert_func+0x24>
 800badc:	4b07      	ldr	r3, [pc, #28]	; (800bafc <__assert_func+0x30>)
 800bade:	9100      	str	r1, [sp, #0]
 800bae0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bae4:	4906      	ldr	r1, [pc, #24]	; (800bb00 <__assert_func+0x34>)
 800bae6:	462b      	mov	r3, r5
 800bae8:	f000 f80e 	bl	800bb08 <fiprintf>
 800baec:	f000 fa8c 	bl	800c008 <abort>
 800baf0:	4b04      	ldr	r3, [pc, #16]	; (800bb04 <__assert_func+0x38>)
 800baf2:	461c      	mov	r4, r3
 800baf4:	e7f3      	b.n	800bade <__assert_func+0x12>
 800baf6:	bf00      	nop
 800baf8:	20000018 	.word	0x20000018
 800bafc:	0800ce9d 	.word	0x0800ce9d
 800bb00:	0800ceaa 	.word	0x0800ceaa
 800bb04:	0800ced8 	.word	0x0800ced8

0800bb08 <fiprintf>:
 800bb08:	b40e      	push	{r1, r2, r3}
 800bb0a:	b503      	push	{r0, r1, lr}
 800bb0c:	4601      	mov	r1, r0
 800bb0e:	ab03      	add	r3, sp, #12
 800bb10:	4805      	ldr	r0, [pc, #20]	; (800bb28 <fiprintf+0x20>)
 800bb12:	f853 2b04 	ldr.w	r2, [r3], #4
 800bb16:	6800      	ldr	r0, [r0, #0]
 800bb18:	9301      	str	r3, [sp, #4]
 800bb1a:	f000 f885 	bl	800bc28 <_vfiprintf_r>
 800bb1e:	b002      	add	sp, #8
 800bb20:	f85d eb04 	ldr.w	lr, [sp], #4
 800bb24:	b003      	add	sp, #12
 800bb26:	4770      	bx	lr
 800bb28:	20000018 	.word	0x20000018

0800bb2c <memmove>:
 800bb2c:	4288      	cmp	r0, r1
 800bb2e:	b510      	push	{r4, lr}
 800bb30:	eb01 0402 	add.w	r4, r1, r2
 800bb34:	d902      	bls.n	800bb3c <memmove+0x10>
 800bb36:	4284      	cmp	r4, r0
 800bb38:	4623      	mov	r3, r4
 800bb3a:	d807      	bhi.n	800bb4c <memmove+0x20>
 800bb3c:	1e43      	subs	r3, r0, #1
 800bb3e:	42a1      	cmp	r1, r4
 800bb40:	d008      	beq.n	800bb54 <memmove+0x28>
 800bb42:	f811 2b01 	ldrb.w	r2, [r1], #1
 800bb46:	f803 2f01 	strb.w	r2, [r3, #1]!
 800bb4a:	e7f8      	b.n	800bb3e <memmove+0x12>
 800bb4c:	4402      	add	r2, r0
 800bb4e:	4601      	mov	r1, r0
 800bb50:	428a      	cmp	r2, r1
 800bb52:	d100      	bne.n	800bb56 <memmove+0x2a>
 800bb54:	bd10      	pop	{r4, pc}
 800bb56:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800bb5a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800bb5e:	e7f7      	b.n	800bb50 <memmove+0x24>

0800bb60 <__malloc_lock>:
 800bb60:	4801      	ldr	r0, [pc, #4]	; (800bb68 <__malloc_lock+0x8>)
 800bb62:	f000 bc11 	b.w	800c388 <__retarget_lock_acquire_recursive>
 800bb66:	bf00      	nop
 800bb68:	2000044c 	.word	0x2000044c

0800bb6c <__malloc_unlock>:
 800bb6c:	4801      	ldr	r0, [pc, #4]	; (800bb74 <__malloc_unlock+0x8>)
 800bb6e:	f000 bc0c 	b.w	800c38a <__retarget_lock_release_recursive>
 800bb72:	bf00      	nop
 800bb74:	2000044c 	.word	0x2000044c

0800bb78 <_realloc_r>:
 800bb78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb7c:	4680      	mov	r8, r0
 800bb7e:	4614      	mov	r4, r2
 800bb80:	460e      	mov	r6, r1
 800bb82:	b921      	cbnz	r1, 800bb8e <_realloc_r+0x16>
 800bb84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bb88:	4611      	mov	r1, r2
 800bb8a:	f7ff bd93 	b.w	800b6b4 <_malloc_r>
 800bb8e:	b92a      	cbnz	r2, 800bb9c <_realloc_r+0x24>
 800bb90:	f7ff fd24 	bl	800b5dc <_free_r>
 800bb94:	4625      	mov	r5, r4
 800bb96:	4628      	mov	r0, r5
 800bb98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bb9c:	f000 fc5c 	bl	800c458 <_malloc_usable_size_r>
 800bba0:	4284      	cmp	r4, r0
 800bba2:	4607      	mov	r7, r0
 800bba4:	d802      	bhi.n	800bbac <_realloc_r+0x34>
 800bba6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800bbaa:	d812      	bhi.n	800bbd2 <_realloc_r+0x5a>
 800bbac:	4621      	mov	r1, r4
 800bbae:	4640      	mov	r0, r8
 800bbb0:	f7ff fd80 	bl	800b6b4 <_malloc_r>
 800bbb4:	4605      	mov	r5, r0
 800bbb6:	2800      	cmp	r0, #0
 800bbb8:	d0ed      	beq.n	800bb96 <_realloc_r+0x1e>
 800bbba:	42bc      	cmp	r4, r7
 800bbbc:	4622      	mov	r2, r4
 800bbbe:	4631      	mov	r1, r6
 800bbc0:	bf28      	it	cs
 800bbc2:	463a      	movcs	r2, r7
 800bbc4:	f7ff f824 	bl	800ac10 <memcpy>
 800bbc8:	4631      	mov	r1, r6
 800bbca:	4640      	mov	r0, r8
 800bbcc:	f7ff fd06 	bl	800b5dc <_free_r>
 800bbd0:	e7e1      	b.n	800bb96 <_realloc_r+0x1e>
 800bbd2:	4635      	mov	r5, r6
 800bbd4:	e7df      	b.n	800bb96 <_realloc_r+0x1e>

0800bbd6 <__sfputc_r>:
 800bbd6:	6893      	ldr	r3, [r2, #8]
 800bbd8:	3b01      	subs	r3, #1
 800bbda:	2b00      	cmp	r3, #0
 800bbdc:	b410      	push	{r4}
 800bbde:	6093      	str	r3, [r2, #8]
 800bbe0:	da08      	bge.n	800bbf4 <__sfputc_r+0x1e>
 800bbe2:	6994      	ldr	r4, [r2, #24]
 800bbe4:	42a3      	cmp	r3, r4
 800bbe6:	db01      	blt.n	800bbec <__sfputc_r+0x16>
 800bbe8:	290a      	cmp	r1, #10
 800bbea:	d103      	bne.n	800bbf4 <__sfputc_r+0x1e>
 800bbec:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bbf0:	f000 b94a 	b.w	800be88 <__swbuf_r>
 800bbf4:	6813      	ldr	r3, [r2, #0]
 800bbf6:	1c58      	adds	r0, r3, #1
 800bbf8:	6010      	str	r0, [r2, #0]
 800bbfa:	7019      	strb	r1, [r3, #0]
 800bbfc:	4608      	mov	r0, r1
 800bbfe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bc02:	4770      	bx	lr

0800bc04 <__sfputs_r>:
 800bc04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc06:	4606      	mov	r6, r0
 800bc08:	460f      	mov	r7, r1
 800bc0a:	4614      	mov	r4, r2
 800bc0c:	18d5      	adds	r5, r2, r3
 800bc0e:	42ac      	cmp	r4, r5
 800bc10:	d101      	bne.n	800bc16 <__sfputs_r+0x12>
 800bc12:	2000      	movs	r0, #0
 800bc14:	e007      	b.n	800bc26 <__sfputs_r+0x22>
 800bc16:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bc1a:	463a      	mov	r2, r7
 800bc1c:	4630      	mov	r0, r6
 800bc1e:	f7ff ffda 	bl	800bbd6 <__sfputc_r>
 800bc22:	1c43      	adds	r3, r0, #1
 800bc24:	d1f3      	bne.n	800bc0e <__sfputs_r+0xa>
 800bc26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bc28 <_vfiprintf_r>:
 800bc28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc2c:	460d      	mov	r5, r1
 800bc2e:	b09d      	sub	sp, #116	; 0x74
 800bc30:	4614      	mov	r4, r2
 800bc32:	4698      	mov	r8, r3
 800bc34:	4606      	mov	r6, r0
 800bc36:	b118      	cbz	r0, 800bc40 <_vfiprintf_r+0x18>
 800bc38:	6983      	ldr	r3, [r0, #24]
 800bc3a:	b90b      	cbnz	r3, 800bc40 <_vfiprintf_r+0x18>
 800bc3c:	f000 fb06 	bl	800c24c <__sinit>
 800bc40:	4b89      	ldr	r3, [pc, #548]	; (800be68 <_vfiprintf_r+0x240>)
 800bc42:	429d      	cmp	r5, r3
 800bc44:	d11b      	bne.n	800bc7e <_vfiprintf_r+0x56>
 800bc46:	6875      	ldr	r5, [r6, #4]
 800bc48:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800bc4a:	07d9      	lsls	r1, r3, #31
 800bc4c:	d405      	bmi.n	800bc5a <_vfiprintf_r+0x32>
 800bc4e:	89ab      	ldrh	r3, [r5, #12]
 800bc50:	059a      	lsls	r2, r3, #22
 800bc52:	d402      	bmi.n	800bc5a <_vfiprintf_r+0x32>
 800bc54:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800bc56:	f000 fb97 	bl	800c388 <__retarget_lock_acquire_recursive>
 800bc5a:	89ab      	ldrh	r3, [r5, #12]
 800bc5c:	071b      	lsls	r3, r3, #28
 800bc5e:	d501      	bpl.n	800bc64 <_vfiprintf_r+0x3c>
 800bc60:	692b      	ldr	r3, [r5, #16]
 800bc62:	b9eb      	cbnz	r3, 800bca0 <_vfiprintf_r+0x78>
 800bc64:	4629      	mov	r1, r5
 800bc66:	4630      	mov	r0, r6
 800bc68:	f000 f960 	bl	800bf2c <__swsetup_r>
 800bc6c:	b1c0      	cbz	r0, 800bca0 <_vfiprintf_r+0x78>
 800bc6e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800bc70:	07dc      	lsls	r4, r3, #31
 800bc72:	d50e      	bpl.n	800bc92 <_vfiprintf_r+0x6a>
 800bc74:	f04f 30ff 	mov.w	r0, #4294967295
 800bc78:	b01d      	add	sp, #116	; 0x74
 800bc7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc7e:	4b7b      	ldr	r3, [pc, #492]	; (800be6c <_vfiprintf_r+0x244>)
 800bc80:	429d      	cmp	r5, r3
 800bc82:	d101      	bne.n	800bc88 <_vfiprintf_r+0x60>
 800bc84:	68b5      	ldr	r5, [r6, #8]
 800bc86:	e7df      	b.n	800bc48 <_vfiprintf_r+0x20>
 800bc88:	4b79      	ldr	r3, [pc, #484]	; (800be70 <_vfiprintf_r+0x248>)
 800bc8a:	429d      	cmp	r5, r3
 800bc8c:	bf08      	it	eq
 800bc8e:	68f5      	ldreq	r5, [r6, #12]
 800bc90:	e7da      	b.n	800bc48 <_vfiprintf_r+0x20>
 800bc92:	89ab      	ldrh	r3, [r5, #12]
 800bc94:	0598      	lsls	r0, r3, #22
 800bc96:	d4ed      	bmi.n	800bc74 <_vfiprintf_r+0x4c>
 800bc98:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800bc9a:	f000 fb76 	bl	800c38a <__retarget_lock_release_recursive>
 800bc9e:	e7e9      	b.n	800bc74 <_vfiprintf_r+0x4c>
 800bca0:	2300      	movs	r3, #0
 800bca2:	9309      	str	r3, [sp, #36]	; 0x24
 800bca4:	2320      	movs	r3, #32
 800bca6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800bcaa:	f8cd 800c 	str.w	r8, [sp, #12]
 800bcae:	2330      	movs	r3, #48	; 0x30
 800bcb0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800be74 <_vfiprintf_r+0x24c>
 800bcb4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800bcb8:	f04f 0901 	mov.w	r9, #1
 800bcbc:	4623      	mov	r3, r4
 800bcbe:	469a      	mov	sl, r3
 800bcc0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800bcc4:	b10a      	cbz	r2, 800bcca <_vfiprintf_r+0xa2>
 800bcc6:	2a25      	cmp	r2, #37	; 0x25
 800bcc8:	d1f9      	bne.n	800bcbe <_vfiprintf_r+0x96>
 800bcca:	ebba 0b04 	subs.w	fp, sl, r4
 800bcce:	d00b      	beq.n	800bce8 <_vfiprintf_r+0xc0>
 800bcd0:	465b      	mov	r3, fp
 800bcd2:	4622      	mov	r2, r4
 800bcd4:	4629      	mov	r1, r5
 800bcd6:	4630      	mov	r0, r6
 800bcd8:	f7ff ff94 	bl	800bc04 <__sfputs_r>
 800bcdc:	3001      	adds	r0, #1
 800bcde:	f000 80aa 	beq.w	800be36 <_vfiprintf_r+0x20e>
 800bce2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bce4:	445a      	add	r2, fp
 800bce6:	9209      	str	r2, [sp, #36]	; 0x24
 800bce8:	f89a 3000 	ldrb.w	r3, [sl]
 800bcec:	2b00      	cmp	r3, #0
 800bcee:	f000 80a2 	beq.w	800be36 <_vfiprintf_r+0x20e>
 800bcf2:	2300      	movs	r3, #0
 800bcf4:	f04f 32ff 	mov.w	r2, #4294967295
 800bcf8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800bcfc:	f10a 0a01 	add.w	sl, sl, #1
 800bd00:	9304      	str	r3, [sp, #16]
 800bd02:	9307      	str	r3, [sp, #28]
 800bd04:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800bd08:	931a      	str	r3, [sp, #104]	; 0x68
 800bd0a:	4654      	mov	r4, sl
 800bd0c:	2205      	movs	r2, #5
 800bd0e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bd12:	4858      	ldr	r0, [pc, #352]	; (800be74 <_vfiprintf_r+0x24c>)
 800bd14:	f7f4 fa64 	bl	80001e0 <memchr>
 800bd18:	9a04      	ldr	r2, [sp, #16]
 800bd1a:	b9d8      	cbnz	r0, 800bd54 <_vfiprintf_r+0x12c>
 800bd1c:	06d1      	lsls	r1, r2, #27
 800bd1e:	bf44      	itt	mi
 800bd20:	2320      	movmi	r3, #32
 800bd22:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800bd26:	0713      	lsls	r3, r2, #28
 800bd28:	bf44      	itt	mi
 800bd2a:	232b      	movmi	r3, #43	; 0x2b
 800bd2c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800bd30:	f89a 3000 	ldrb.w	r3, [sl]
 800bd34:	2b2a      	cmp	r3, #42	; 0x2a
 800bd36:	d015      	beq.n	800bd64 <_vfiprintf_r+0x13c>
 800bd38:	9a07      	ldr	r2, [sp, #28]
 800bd3a:	4654      	mov	r4, sl
 800bd3c:	2000      	movs	r0, #0
 800bd3e:	f04f 0c0a 	mov.w	ip, #10
 800bd42:	4621      	mov	r1, r4
 800bd44:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bd48:	3b30      	subs	r3, #48	; 0x30
 800bd4a:	2b09      	cmp	r3, #9
 800bd4c:	d94e      	bls.n	800bdec <_vfiprintf_r+0x1c4>
 800bd4e:	b1b0      	cbz	r0, 800bd7e <_vfiprintf_r+0x156>
 800bd50:	9207      	str	r2, [sp, #28]
 800bd52:	e014      	b.n	800bd7e <_vfiprintf_r+0x156>
 800bd54:	eba0 0308 	sub.w	r3, r0, r8
 800bd58:	fa09 f303 	lsl.w	r3, r9, r3
 800bd5c:	4313      	orrs	r3, r2
 800bd5e:	9304      	str	r3, [sp, #16]
 800bd60:	46a2      	mov	sl, r4
 800bd62:	e7d2      	b.n	800bd0a <_vfiprintf_r+0xe2>
 800bd64:	9b03      	ldr	r3, [sp, #12]
 800bd66:	1d19      	adds	r1, r3, #4
 800bd68:	681b      	ldr	r3, [r3, #0]
 800bd6a:	9103      	str	r1, [sp, #12]
 800bd6c:	2b00      	cmp	r3, #0
 800bd6e:	bfbb      	ittet	lt
 800bd70:	425b      	neglt	r3, r3
 800bd72:	f042 0202 	orrlt.w	r2, r2, #2
 800bd76:	9307      	strge	r3, [sp, #28]
 800bd78:	9307      	strlt	r3, [sp, #28]
 800bd7a:	bfb8      	it	lt
 800bd7c:	9204      	strlt	r2, [sp, #16]
 800bd7e:	7823      	ldrb	r3, [r4, #0]
 800bd80:	2b2e      	cmp	r3, #46	; 0x2e
 800bd82:	d10c      	bne.n	800bd9e <_vfiprintf_r+0x176>
 800bd84:	7863      	ldrb	r3, [r4, #1]
 800bd86:	2b2a      	cmp	r3, #42	; 0x2a
 800bd88:	d135      	bne.n	800bdf6 <_vfiprintf_r+0x1ce>
 800bd8a:	9b03      	ldr	r3, [sp, #12]
 800bd8c:	1d1a      	adds	r2, r3, #4
 800bd8e:	681b      	ldr	r3, [r3, #0]
 800bd90:	9203      	str	r2, [sp, #12]
 800bd92:	2b00      	cmp	r3, #0
 800bd94:	bfb8      	it	lt
 800bd96:	f04f 33ff 	movlt.w	r3, #4294967295
 800bd9a:	3402      	adds	r4, #2
 800bd9c:	9305      	str	r3, [sp, #20]
 800bd9e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800be84 <_vfiprintf_r+0x25c>
 800bda2:	7821      	ldrb	r1, [r4, #0]
 800bda4:	2203      	movs	r2, #3
 800bda6:	4650      	mov	r0, sl
 800bda8:	f7f4 fa1a 	bl	80001e0 <memchr>
 800bdac:	b140      	cbz	r0, 800bdc0 <_vfiprintf_r+0x198>
 800bdae:	2340      	movs	r3, #64	; 0x40
 800bdb0:	eba0 000a 	sub.w	r0, r0, sl
 800bdb4:	fa03 f000 	lsl.w	r0, r3, r0
 800bdb8:	9b04      	ldr	r3, [sp, #16]
 800bdba:	4303      	orrs	r3, r0
 800bdbc:	3401      	adds	r4, #1
 800bdbe:	9304      	str	r3, [sp, #16]
 800bdc0:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bdc4:	482c      	ldr	r0, [pc, #176]	; (800be78 <_vfiprintf_r+0x250>)
 800bdc6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800bdca:	2206      	movs	r2, #6
 800bdcc:	f7f4 fa08 	bl	80001e0 <memchr>
 800bdd0:	2800      	cmp	r0, #0
 800bdd2:	d03f      	beq.n	800be54 <_vfiprintf_r+0x22c>
 800bdd4:	4b29      	ldr	r3, [pc, #164]	; (800be7c <_vfiprintf_r+0x254>)
 800bdd6:	bb1b      	cbnz	r3, 800be20 <_vfiprintf_r+0x1f8>
 800bdd8:	9b03      	ldr	r3, [sp, #12]
 800bdda:	3307      	adds	r3, #7
 800bddc:	f023 0307 	bic.w	r3, r3, #7
 800bde0:	3308      	adds	r3, #8
 800bde2:	9303      	str	r3, [sp, #12]
 800bde4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bde6:	443b      	add	r3, r7
 800bde8:	9309      	str	r3, [sp, #36]	; 0x24
 800bdea:	e767      	b.n	800bcbc <_vfiprintf_r+0x94>
 800bdec:	fb0c 3202 	mla	r2, ip, r2, r3
 800bdf0:	460c      	mov	r4, r1
 800bdf2:	2001      	movs	r0, #1
 800bdf4:	e7a5      	b.n	800bd42 <_vfiprintf_r+0x11a>
 800bdf6:	2300      	movs	r3, #0
 800bdf8:	3401      	adds	r4, #1
 800bdfa:	9305      	str	r3, [sp, #20]
 800bdfc:	4619      	mov	r1, r3
 800bdfe:	f04f 0c0a 	mov.w	ip, #10
 800be02:	4620      	mov	r0, r4
 800be04:	f810 2b01 	ldrb.w	r2, [r0], #1
 800be08:	3a30      	subs	r2, #48	; 0x30
 800be0a:	2a09      	cmp	r2, #9
 800be0c:	d903      	bls.n	800be16 <_vfiprintf_r+0x1ee>
 800be0e:	2b00      	cmp	r3, #0
 800be10:	d0c5      	beq.n	800bd9e <_vfiprintf_r+0x176>
 800be12:	9105      	str	r1, [sp, #20]
 800be14:	e7c3      	b.n	800bd9e <_vfiprintf_r+0x176>
 800be16:	fb0c 2101 	mla	r1, ip, r1, r2
 800be1a:	4604      	mov	r4, r0
 800be1c:	2301      	movs	r3, #1
 800be1e:	e7f0      	b.n	800be02 <_vfiprintf_r+0x1da>
 800be20:	ab03      	add	r3, sp, #12
 800be22:	9300      	str	r3, [sp, #0]
 800be24:	462a      	mov	r2, r5
 800be26:	4b16      	ldr	r3, [pc, #88]	; (800be80 <_vfiprintf_r+0x258>)
 800be28:	a904      	add	r1, sp, #16
 800be2a:	4630      	mov	r0, r6
 800be2c:	f7fc f83c 	bl	8007ea8 <_printf_float>
 800be30:	4607      	mov	r7, r0
 800be32:	1c78      	adds	r0, r7, #1
 800be34:	d1d6      	bne.n	800bde4 <_vfiprintf_r+0x1bc>
 800be36:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800be38:	07d9      	lsls	r1, r3, #31
 800be3a:	d405      	bmi.n	800be48 <_vfiprintf_r+0x220>
 800be3c:	89ab      	ldrh	r3, [r5, #12]
 800be3e:	059a      	lsls	r2, r3, #22
 800be40:	d402      	bmi.n	800be48 <_vfiprintf_r+0x220>
 800be42:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800be44:	f000 faa1 	bl	800c38a <__retarget_lock_release_recursive>
 800be48:	89ab      	ldrh	r3, [r5, #12]
 800be4a:	065b      	lsls	r3, r3, #25
 800be4c:	f53f af12 	bmi.w	800bc74 <_vfiprintf_r+0x4c>
 800be50:	9809      	ldr	r0, [sp, #36]	; 0x24
 800be52:	e711      	b.n	800bc78 <_vfiprintf_r+0x50>
 800be54:	ab03      	add	r3, sp, #12
 800be56:	9300      	str	r3, [sp, #0]
 800be58:	462a      	mov	r2, r5
 800be5a:	4b09      	ldr	r3, [pc, #36]	; (800be80 <_vfiprintf_r+0x258>)
 800be5c:	a904      	add	r1, sp, #16
 800be5e:	4630      	mov	r0, r6
 800be60:	f7fc fac6 	bl	80083f0 <_printf_i>
 800be64:	e7e4      	b.n	800be30 <_vfiprintf_r+0x208>
 800be66:	bf00      	nop
 800be68:	0800cefc 	.word	0x0800cefc
 800be6c:	0800cf1c 	.word	0x0800cf1c
 800be70:	0800cedc 	.word	0x0800cedc
 800be74:	0800ce8c 	.word	0x0800ce8c
 800be78:	0800ce96 	.word	0x0800ce96
 800be7c:	08007ea9 	.word	0x08007ea9
 800be80:	0800bc05 	.word	0x0800bc05
 800be84:	0800ce92 	.word	0x0800ce92

0800be88 <__swbuf_r>:
 800be88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800be8a:	460e      	mov	r6, r1
 800be8c:	4614      	mov	r4, r2
 800be8e:	4605      	mov	r5, r0
 800be90:	b118      	cbz	r0, 800be9a <__swbuf_r+0x12>
 800be92:	6983      	ldr	r3, [r0, #24]
 800be94:	b90b      	cbnz	r3, 800be9a <__swbuf_r+0x12>
 800be96:	f000 f9d9 	bl	800c24c <__sinit>
 800be9a:	4b21      	ldr	r3, [pc, #132]	; (800bf20 <__swbuf_r+0x98>)
 800be9c:	429c      	cmp	r4, r3
 800be9e:	d12b      	bne.n	800bef8 <__swbuf_r+0x70>
 800bea0:	686c      	ldr	r4, [r5, #4]
 800bea2:	69a3      	ldr	r3, [r4, #24]
 800bea4:	60a3      	str	r3, [r4, #8]
 800bea6:	89a3      	ldrh	r3, [r4, #12]
 800bea8:	071a      	lsls	r2, r3, #28
 800beaa:	d52f      	bpl.n	800bf0c <__swbuf_r+0x84>
 800beac:	6923      	ldr	r3, [r4, #16]
 800beae:	b36b      	cbz	r3, 800bf0c <__swbuf_r+0x84>
 800beb0:	6923      	ldr	r3, [r4, #16]
 800beb2:	6820      	ldr	r0, [r4, #0]
 800beb4:	1ac0      	subs	r0, r0, r3
 800beb6:	6963      	ldr	r3, [r4, #20]
 800beb8:	b2f6      	uxtb	r6, r6
 800beba:	4283      	cmp	r3, r0
 800bebc:	4637      	mov	r7, r6
 800bebe:	dc04      	bgt.n	800beca <__swbuf_r+0x42>
 800bec0:	4621      	mov	r1, r4
 800bec2:	4628      	mov	r0, r5
 800bec4:	f000 f92e 	bl	800c124 <_fflush_r>
 800bec8:	bb30      	cbnz	r0, 800bf18 <__swbuf_r+0x90>
 800beca:	68a3      	ldr	r3, [r4, #8]
 800becc:	3b01      	subs	r3, #1
 800bece:	60a3      	str	r3, [r4, #8]
 800bed0:	6823      	ldr	r3, [r4, #0]
 800bed2:	1c5a      	adds	r2, r3, #1
 800bed4:	6022      	str	r2, [r4, #0]
 800bed6:	701e      	strb	r6, [r3, #0]
 800bed8:	6963      	ldr	r3, [r4, #20]
 800beda:	3001      	adds	r0, #1
 800bedc:	4283      	cmp	r3, r0
 800bede:	d004      	beq.n	800beea <__swbuf_r+0x62>
 800bee0:	89a3      	ldrh	r3, [r4, #12]
 800bee2:	07db      	lsls	r3, r3, #31
 800bee4:	d506      	bpl.n	800bef4 <__swbuf_r+0x6c>
 800bee6:	2e0a      	cmp	r6, #10
 800bee8:	d104      	bne.n	800bef4 <__swbuf_r+0x6c>
 800beea:	4621      	mov	r1, r4
 800beec:	4628      	mov	r0, r5
 800beee:	f000 f919 	bl	800c124 <_fflush_r>
 800bef2:	b988      	cbnz	r0, 800bf18 <__swbuf_r+0x90>
 800bef4:	4638      	mov	r0, r7
 800bef6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bef8:	4b0a      	ldr	r3, [pc, #40]	; (800bf24 <__swbuf_r+0x9c>)
 800befa:	429c      	cmp	r4, r3
 800befc:	d101      	bne.n	800bf02 <__swbuf_r+0x7a>
 800befe:	68ac      	ldr	r4, [r5, #8]
 800bf00:	e7cf      	b.n	800bea2 <__swbuf_r+0x1a>
 800bf02:	4b09      	ldr	r3, [pc, #36]	; (800bf28 <__swbuf_r+0xa0>)
 800bf04:	429c      	cmp	r4, r3
 800bf06:	bf08      	it	eq
 800bf08:	68ec      	ldreq	r4, [r5, #12]
 800bf0a:	e7ca      	b.n	800bea2 <__swbuf_r+0x1a>
 800bf0c:	4621      	mov	r1, r4
 800bf0e:	4628      	mov	r0, r5
 800bf10:	f000 f80c 	bl	800bf2c <__swsetup_r>
 800bf14:	2800      	cmp	r0, #0
 800bf16:	d0cb      	beq.n	800beb0 <__swbuf_r+0x28>
 800bf18:	f04f 37ff 	mov.w	r7, #4294967295
 800bf1c:	e7ea      	b.n	800bef4 <__swbuf_r+0x6c>
 800bf1e:	bf00      	nop
 800bf20:	0800cefc 	.word	0x0800cefc
 800bf24:	0800cf1c 	.word	0x0800cf1c
 800bf28:	0800cedc 	.word	0x0800cedc

0800bf2c <__swsetup_r>:
 800bf2c:	4b32      	ldr	r3, [pc, #200]	; (800bff8 <__swsetup_r+0xcc>)
 800bf2e:	b570      	push	{r4, r5, r6, lr}
 800bf30:	681d      	ldr	r5, [r3, #0]
 800bf32:	4606      	mov	r6, r0
 800bf34:	460c      	mov	r4, r1
 800bf36:	b125      	cbz	r5, 800bf42 <__swsetup_r+0x16>
 800bf38:	69ab      	ldr	r3, [r5, #24]
 800bf3a:	b913      	cbnz	r3, 800bf42 <__swsetup_r+0x16>
 800bf3c:	4628      	mov	r0, r5
 800bf3e:	f000 f985 	bl	800c24c <__sinit>
 800bf42:	4b2e      	ldr	r3, [pc, #184]	; (800bffc <__swsetup_r+0xd0>)
 800bf44:	429c      	cmp	r4, r3
 800bf46:	d10f      	bne.n	800bf68 <__swsetup_r+0x3c>
 800bf48:	686c      	ldr	r4, [r5, #4]
 800bf4a:	89a3      	ldrh	r3, [r4, #12]
 800bf4c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800bf50:	0719      	lsls	r1, r3, #28
 800bf52:	d42c      	bmi.n	800bfae <__swsetup_r+0x82>
 800bf54:	06dd      	lsls	r5, r3, #27
 800bf56:	d411      	bmi.n	800bf7c <__swsetup_r+0x50>
 800bf58:	2309      	movs	r3, #9
 800bf5a:	6033      	str	r3, [r6, #0]
 800bf5c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800bf60:	81a3      	strh	r3, [r4, #12]
 800bf62:	f04f 30ff 	mov.w	r0, #4294967295
 800bf66:	e03e      	b.n	800bfe6 <__swsetup_r+0xba>
 800bf68:	4b25      	ldr	r3, [pc, #148]	; (800c000 <__swsetup_r+0xd4>)
 800bf6a:	429c      	cmp	r4, r3
 800bf6c:	d101      	bne.n	800bf72 <__swsetup_r+0x46>
 800bf6e:	68ac      	ldr	r4, [r5, #8]
 800bf70:	e7eb      	b.n	800bf4a <__swsetup_r+0x1e>
 800bf72:	4b24      	ldr	r3, [pc, #144]	; (800c004 <__swsetup_r+0xd8>)
 800bf74:	429c      	cmp	r4, r3
 800bf76:	bf08      	it	eq
 800bf78:	68ec      	ldreq	r4, [r5, #12]
 800bf7a:	e7e6      	b.n	800bf4a <__swsetup_r+0x1e>
 800bf7c:	0758      	lsls	r0, r3, #29
 800bf7e:	d512      	bpl.n	800bfa6 <__swsetup_r+0x7a>
 800bf80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800bf82:	b141      	cbz	r1, 800bf96 <__swsetup_r+0x6a>
 800bf84:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800bf88:	4299      	cmp	r1, r3
 800bf8a:	d002      	beq.n	800bf92 <__swsetup_r+0x66>
 800bf8c:	4630      	mov	r0, r6
 800bf8e:	f7ff fb25 	bl	800b5dc <_free_r>
 800bf92:	2300      	movs	r3, #0
 800bf94:	6363      	str	r3, [r4, #52]	; 0x34
 800bf96:	89a3      	ldrh	r3, [r4, #12]
 800bf98:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800bf9c:	81a3      	strh	r3, [r4, #12]
 800bf9e:	2300      	movs	r3, #0
 800bfa0:	6063      	str	r3, [r4, #4]
 800bfa2:	6923      	ldr	r3, [r4, #16]
 800bfa4:	6023      	str	r3, [r4, #0]
 800bfa6:	89a3      	ldrh	r3, [r4, #12]
 800bfa8:	f043 0308 	orr.w	r3, r3, #8
 800bfac:	81a3      	strh	r3, [r4, #12]
 800bfae:	6923      	ldr	r3, [r4, #16]
 800bfb0:	b94b      	cbnz	r3, 800bfc6 <__swsetup_r+0x9a>
 800bfb2:	89a3      	ldrh	r3, [r4, #12]
 800bfb4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800bfb8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bfbc:	d003      	beq.n	800bfc6 <__swsetup_r+0x9a>
 800bfbe:	4621      	mov	r1, r4
 800bfc0:	4630      	mov	r0, r6
 800bfc2:	f000 fa09 	bl	800c3d8 <__smakebuf_r>
 800bfc6:	89a0      	ldrh	r0, [r4, #12]
 800bfc8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800bfcc:	f010 0301 	ands.w	r3, r0, #1
 800bfd0:	d00a      	beq.n	800bfe8 <__swsetup_r+0xbc>
 800bfd2:	2300      	movs	r3, #0
 800bfd4:	60a3      	str	r3, [r4, #8]
 800bfd6:	6963      	ldr	r3, [r4, #20]
 800bfd8:	425b      	negs	r3, r3
 800bfda:	61a3      	str	r3, [r4, #24]
 800bfdc:	6923      	ldr	r3, [r4, #16]
 800bfde:	b943      	cbnz	r3, 800bff2 <__swsetup_r+0xc6>
 800bfe0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800bfe4:	d1ba      	bne.n	800bf5c <__swsetup_r+0x30>
 800bfe6:	bd70      	pop	{r4, r5, r6, pc}
 800bfe8:	0781      	lsls	r1, r0, #30
 800bfea:	bf58      	it	pl
 800bfec:	6963      	ldrpl	r3, [r4, #20]
 800bfee:	60a3      	str	r3, [r4, #8]
 800bff0:	e7f4      	b.n	800bfdc <__swsetup_r+0xb0>
 800bff2:	2000      	movs	r0, #0
 800bff4:	e7f7      	b.n	800bfe6 <__swsetup_r+0xba>
 800bff6:	bf00      	nop
 800bff8:	20000018 	.word	0x20000018
 800bffc:	0800cefc 	.word	0x0800cefc
 800c000:	0800cf1c 	.word	0x0800cf1c
 800c004:	0800cedc 	.word	0x0800cedc

0800c008 <abort>:
 800c008:	b508      	push	{r3, lr}
 800c00a:	2006      	movs	r0, #6
 800c00c:	f000 fa54 	bl	800c4b8 <raise>
 800c010:	2001      	movs	r0, #1
 800c012:	f7f6 fda3 	bl	8002b5c <_exit>
	...

0800c018 <__sflush_r>:
 800c018:	898a      	ldrh	r2, [r1, #12]
 800c01a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c01e:	4605      	mov	r5, r0
 800c020:	0710      	lsls	r0, r2, #28
 800c022:	460c      	mov	r4, r1
 800c024:	d458      	bmi.n	800c0d8 <__sflush_r+0xc0>
 800c026:	684b      	ldr	r3, [r1, #4]
 800c028:	2b00      	cmp	r3, #0
 800c02a:	dc05      	bgt.n	800c038 <__sflush_r+0x20>
 800c02c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800c02e:	2b00      	cmp	r3, #0
 800c030:	dc02      	bgt.n	800c038 <__sflush_r+0x20>
 800c032:	2000      	movs	r0, #0
 800c034:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c038:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800c03a:	2e00      	cmp	r6, #0
 800c03c:	d0f9      	beq.n	800c032 <__sflush_r+0x1a>
 800c03e:	2300      	movs	r3, #0
 800c040:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800c044:	682f      	ldr	r7, [r5, #0]
 800c046:	602b      	str	r3, [r5, #0]
 800c048:	d032      	beq.n	800c0b0 <__sflush_r+0x98>
 800c04a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800c04c:	89a3      	ldrh	r3, [r4, #12]
 800c04e:	075a      	lsls	r2, r3, #29
 800c050:	d505      	bpl.n	800c05e <__sflush_r+0x46>
 800c052:	6863      	ldr	r3, [r4, #4]
 800c054:	1ac0      	subs	r0, r0, r3
 800c056:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c058:	b10b      	cbz	r3, 800c05e <__sflush_r+0x46>
 800c05a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c05c:	1ac0      	subs	r0, r0, r3
 800c05e:	2300      	movs	r3, #0
 800c060:	4602      	mov	r2, r0
 800c062:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800c064:	6a21      	ldr	r1, [r4, #32]
 800c066:	4628      	mov	r0, r5
 800c068:	47b0      	blx	r6
 800c06a:	1c43      	adds	r3, r0, #1
 800c06c:	89a3      	ldrh	r3, [r4, #12]
 800c06e:	d106      	bne.n	800c07e <__sflush_r+0x66>
 800c070:	6829      	ldr	r1, [r5, #0]
 800c072:	291d      	cmp	r1, #29
 800c074:	d82c      	bhi.n	800c0d0 <__sflush_r+0xb8>
 800c076:	4a2a      	ldr	r2, [pc, #168]	; (800c120 <__sflush_r+0x108>)
 800c078:	40ca      	lsrs	r2, r1
 800c07a:	07d6      	lsls	r6, r2, #31
 800c07c:	d528      	bpl.n	800c0d0 <__sflush_r+0xb8>
 800c07e:	2200      	movs	r2, #0
 800c080:	6062      	str	r2, [r4, #4]
 800c082:	04d9      	lsls	r1, r3, #19
 800c084:	6922      	ldr	r2, [r4, #16]
 800c086:	6022      	str	r2, [r4, #0]
 800c088:	d504      	bpl.n	800c094 <__sflush_r+0x7c>
 800c08a:	1c42      	adds	r2, r0, #1
 800c08c:	d101      	bne.n	800c092 <__sflush_r+0x7a>
 800c08e:	682b      	ldr	r3, [r5, #0]
 800c090:	b903      	cbnz	r3, 800c094 <__sflush_r+0x7c>
 800c092:	6560      	str	r0, [r4, #84]	; 0x54
 800c094:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c096:	602f      	str	r7, [r5, #0]
 800c098:	2900      	cmp	r1, #0
 800c09a:	d0ca      	beq.n	800c032 <__sflush_r+0x1a>
 800c09c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800c0a0:	4299      	cmp	r1, r3
 800c0a2:	d002      	beq.n	800c0aa <__sflush_r+0x92>
 800c0a4:	4628      	mov	r0, r5
 800c0a6:	f7ff fa99 	bl	800b5dc <_free_r>
 800c0aa:	2000      	movs	r0, #0
 800c0ac:	6360      	str	r0, [r4, #52]	; 0x34
 800c0ae:	e7c1      	b.n	800c034 <__sflush_r+0x1c>
 800c0b0:	6a21      	ldr	r1, [r4, #32]
 800c0b2:	2301      	movs	r3, #1
 800c0b4:	4628      	mov	r0, r5
 800c0b6:	47b0      	blx	r6
 800c0b8:	1c41      	adds	r1, r0, #1
 800c0ba:	d1c7      	bne.n	800c04c <__sflush_r+0x34>
 800c0bc:	682b      	ldr	r3, [r5, #0]
 800c0be:	2b00      	cmp	r3, #0
 800c0c0:	d0c4      	beq.n	800c04c <__sflush_r+0x34>
 800c0c2:	2b1d      	cmp	r3, #29
 800c0c4:	d001      	beq.n	800c0ca <__sflush_r+0xb2>
 800c0c6:	2b16      	cmp	r3, #22
 800c0c8:	d101      	bne.n	800c0ce <__sflush_r+0xb6>
 800c0ca:	602f      	str	r7, [r5, #0]
 800c0cc:	e7b1      	b.n	800c032 <__sflush_r+0x1a>
 800c0ce:	89a3      	ldrh	r3, [r4, #12]
 800c0d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c0d4:	81a3      	strh	r3, [r4, #12]
 800c0d6:	e7ad      	b.n	800c034 <__sflush_r+0x1c>
 800c0d8:	690f      	ldr	r7, [r1, #16]
 800c0da:	2f00      	cmp	r7, #0
 800c0dc:	d0a9      	beq.n	800c032 <__sflush_r+0x1a>
 800c0de:	0793      	lsls	r3, r2, #30
 800c0e0:	680e      	ldr	r6, [r1, #0]
 800c0e2:	bf08      	it	eq
 800c0e4:	694b      	ldreq	r3, [r1, #20]
 800c0e6:	600f      	str	r7, [r1, #0]
 800c0e8:	bf18      	it	ne
 800c0ea:	2300      	movne	r3, #0
 800c0ec:	eba6 0807 	sub.w	r8, r6, r7
 800c0f0:	608b      	str	r3, [r1, #8]
 800c0f2:	f1b8 0f00 	cmp.w	r8, #0
 800c0f6:	dd9c      	ble.n	800c032 <__sflush_r+0x1a>
 800c0f8:	6a21      	ldr	r1, [r4, #32]
 800c0fa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800c0fc:	4643      	mov	r3, r8
 800c0fe:	463a      	mov	r2, r7
 800c100:	4628      	mov	r0, r5
 800c102:	47b0      	blx	r6
 800c104:	2800      	cmp	r0, #0
 800c106:	dc06      	bgt.n	800c116 <__sflush_r+0xfe>
 800c108:	89a3      	ldrh	r3, [r4, #12]
 800c10a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c10e:	81a3      	strh	r3, [r4, #12]
 800c110:	f04f 30ff 	mov.w	r0, #4294967295
 800c114:	e78e      	b.n	800c034 <__sflush_r+0x1c>
 800c116:	4407      	add	r7, r0
 800c118:	eba8 0800 	sub.w	r8, r8, r0
 800c11c:	e7e9      	b.n	800c0f2 <__sflush_r+0xda>
 800c11e:	bf00      	nop
 800c120:	20400001 	.word	0x20400001

0800c124 <_fflush_r>:
 800c124:	b538      	push	{r3, r4, r5, lr}
 800c126:	690b      	ldr	r3, [r1, #16]
 800c128:	4605      	mov	r5, r0
 800c12a:	460c      	mov	r4, r1
 800c12c:	b913      	cbnz	r3, 800c134 <_fflush_r+0x10>
 800c12e:	2500      	movs	r5, #0
 800c130:	4628      	mov	r0, r5
 800c132:	bd38      	pop	{r3, r4, r5, pc}
 800c134:	b118      	cbz	r0, 800c13e <_fflush_r+0x1a>
 800c136:	6983      	ldr	r3, [r0, #24]
 800c138:	b90b      	cbnz	r3, 800c13e <_fflush_r+0x1a>
 800c13a:	f000 f887 	bl	800c24c <__sinit>
 800c13e:	4b14      	ldr	r3, [pc, #80]	; (800c190 <_fflush_r+0x6c>)
 800c140:	429c      	cmp	r4, r3
 800c142:	d11b      	bne.n	800c17c <_fflush_r+0x58>
 800c144:	686c      	ldr	r4, [r5, #4]
 800c146:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c14a:	2b00      	cmp	r3, #0
 800c14c:	d0ef      	beq.n	800c12e <_fflush_r+0xa>
 800c14e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800c150:	07d0      	lsls	r0, r2, #31
 800c152:	d404      	bmi.n	800c15e <_fflush_r+0x3a>
 800c154:	0599      	lsls	r1, r3, #22
 800c156:	d402      	bmi.n	800c15e <_fflush_r+0x3a>
 800c158:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c15a:	f000 f915 	bl	800c388 <__retarget_lock_acquire_recursive>
 800c15e:	4628      	mov	r0, r5
 800c160:	4621      	mov	r1, r4
 800c162:	f7ff ff59 	bl	800c018 <__sflush_r>
 800c166:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c168:	07da      	lsls	r2, r3, #31
 800c16a:	4605      	mov	r5, r0
 800c16c:	d4e0      	bmi.n	800c130 <_fflush_r+0xc>
 800c16e:	89a3      	ldrh	r3, [r4, #12]
 800c170:	059b      	lsls	r3, r3, #22
 800c172:	d4dd      	bmi.n	800c130 <_fflush_r+0xc>
 800c174:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c176:	f000 f908 	bl	800c38a <__retarget_lock_release_recursive>
 800c17a:	e7d9      	b.n	800c130 <_fflush_r+0xc>
 800c17c:	4b05      	ldr	r3, [pc, #20]	; (800c194 <_fflush_r+0x70>)
 800c17e:	429c      	cmp	r4, r3
 800c180:	d101      	bne.n	800c186 <_fflush_r+0x62>
 800c182:	68ac      	ldr	r4, [r5, #8]
 800c184:	e7df      	b.n	800c146 <_fflush_r+0x22>
 800c186:	4b04      	ldr	r3, [pc, #16]	; (800c198 <_fflush_r+0x74>)
 800c188:	429c      	cmp	r4, r3
 800c18a:	bf08      	it	eq
 800c18c:	68ec      	ldreq	r4, [r5, #12]
 800c18e:	e7da      	b.n	800c146 <_fflush_r+0x22>
 800c190:	0800cefc 	.word	0x0800cefc
 800c194:	0800cf1c 	.word	0x0800cf1c
 800c198:	0800cedc 	.word	0x0800cedc

0800c19c <std>:
 800c19c:	2300      	movs	r3, #0
 800c19e:	b510      	push	{r4, lr}
 800c1a0:	4604      	mov	r4, r0
 800c1a2:	e9c0 3300 	strd	r3, r3, [r0]
 800c1a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c1aa:	6083      	str	r3, [r0, #8]
 800c1ac:	8181      	strh	r1, [r0, #12]
 800c1ae:	6643      	str	r3, [r0, #100]	; 0x64
 800c1b0:	81c2      	strh	r2, [r0, #14]
 800c1b2:	6183      	str	r3, [r0, #24]
 800c1b4:	4619      	mov	r1, r3
 800c1b6:	2208      	movs	r2, #8
 800c1b8:	305c      	adds	r0, #92	; 0x5c
 800c1ba:	f7fb fdcd 	bl	8007d58 <memset>
 800c1be:	4b05      	ldr	r3, [pc, #20]	; (800c1d4 <std+0x38>)
 800c1c0:	6263      	str	r3, [r4, #36]	; 0x24
 800c1c2:	4b05      	ldr	r3, [pc, #20]	; (800c1d8 <std+0x3c>)
 800c1c4:	62a3      	str	r3, [r4, #40]	; 0x28
 800c1c6:	4b05      	ldr	r3, [pc, #20]	; (800c1dc <std+0x40>)
 800c1c8:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c1ca:	4b05      	ldr	r3, [pc, #20]	; (800c1e0 <std+0x44>)
 800c1cc:	6224      	str	r4, [r4, #32]
 800c1ce:	6323      	str	r3, [r4, #48]	; 0x30
 800c1d0:	bd10      	pop	{r4, pc}
 800c1d2:	bf00      	nop
 800c1d4:	0800c4f1 	.word	0x0800c4f1
 800c1d8:	0800c513 	.word	0x0800c513
 800c1dc:	0800c54b 	.word	0x0800c54b
 800c1e0:	0800c56f 	.word	0x0800c56f

0800c1e4 <_cleanup_r>:
 800c1e4:	4901      	ldr	r1, [pc, #4]	; (800c1ec <_cleanup_r+0x8>)
 800c1e6:	f000 b8af 	b.w	800c348 <_fwalk_reent>
 800c1ea:	bf00      	nop
 800c1ec:	0800c125 	.word	0x0800c125

0800c1f0 <__sfmoreglue>:
 800c1f0:	b570      	push	{r4, r5, r6, lr}
 800c1f2:	2268      	movs	r2, #104	; 0x68
 800c1f4:	1e4d      	subs	r5, r1, #1
 800c1f6:	4355      	muls	r5, r2
 800c1f8:	460e      	mov	r6, r1
 800c1fa:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800c1fe:	f7ff fa59 	bl	800b6b4 <_malloc_r>
 800c202:	4604      	mov	r4, r0
 800c204:	b140      	cbz	r0, 800c218 <__sfmoreglue+0x28>
 800c206:	2100      	movs	r1, #0
 800c208:	e9c0 1600 	strd	r1, r6, [r0]
 800c20c:	300c      	adds	r0, #12
 800c20e:	60a0      	str	r0, [r4, #8]
 800c210:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800c214:	f7fb fda0 	bl	8007d58 <memset>
 800c218:	4620      	mov	r0, r4
 800c21a:	bd70      	pop	{r4, r5, r6, pc}

0800c21c <__sfp_lock_acquire>:
 800c21c:	4801      	ldr	r0, [pc, #4]	; (800c224 <__sfp_lock_acquire+0x8>)
 800c21e:	f000 b8b3 	b.w	800c388 <__retarget_lock_acquire_recursive>
 800c222:	bf00      	nop
 800c224:	2000044d 	.word	0x2000044d

0800c228 <__sfp_lock_release>:
 800c228:	4801      	ldr	r0, [pc, #4]	; (800c230 <__sfp_lock_release+0x8>)
 800c22a:	f000 b8ae 	b.w	800c38a <__retarget_lock_release_recursive>
 800c22e:	bf00      	nop
 800c230:	2000044d 	.word	0x2000044d

0800c234 <__sinit_lock_acquire>:
 800c234:	4801      	ldr	r0, [pc, #4]	; (800c23c <__sinit_lock_acquire+0x8>)
 800c236:	f000 b8a7 	b.w	800c388 <__retarget_lock_acquire_recursive>
 800c23a:	bf00      	nop
 800c23c:	2000044e 	.word	0x2000044e

0800c240 <__sinit_lock_release>:
 800c240:	4801      	ldr	r0, [pc, #4]	; (800c248 <__sinit_lock_release+0x8>)
 800c242:	f000 b8a2 	b.w	800c38a <__retarget_lock_release_recursive>
 800c246:	bf00      	nop
 800c248:	2000044e 	.word	0x2000044e

0800c24c <__sinit>:
 800c24c:	b510      	push	{r4, lr}
 800c24e:	4604      	mov	r4, r0
 800c250:	f7ff fff0 	bl	800c234 <__sinit_lock_acquire>
 800c254:	69a3      	ldr	r3, [r4, #24]
 800c256:	b11b      	cbz	r3, 800c260 <__sinit+0x14>
 800c258:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c25c:	f7ff bff0 	b.w	800c240 <__sinit_lock_release>
 800c260:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800c264:	6523      	str	r3, [r4, #80]	; 0x50
 800c266:	4b13      	ldr	r3, [pc, #76]	; (800c2b4 <__sinit+0x68>)
 800c268:	4a13      	ldr	r2, [pc, #76]	; (800c2b8 <__sinit+0x6c>)
 800c26a:	681b      	ldr	r3, [r3, #0]
 800c26c:	62a2      	str	r2, [r4, #40]	; 0x28
 800c26e:	42a3      	cmp	r3, r4
 800c270:	bf04      	itt	eq
 800c272:	2301      	moveq	r3, #1
 800c274:	61a3      	streq	r3, [r4, #24]
 800c276:	4620      	mov	r0, r4
 800c278:	f000 f820 	bl	800c2bc <__sfp>
 800c27c:	6060      	str	r0, [r4, #4]
 800c27e:	4620      	mov	r0, r4
 800c280:	f000 f81c 	bl	800c2bc <__sfp>
 800c284:	60a0      	str	r0, [r4, #8]
 800c286:	4620      	mov	r0, r4
 800c288:	f000 f818 	bl	800c2bc <__sfp>
 800c28c:	2200      	movs	r2, #0
 800c28e:	60e0      	str	r0, [r4, #12]
 800c290:	2104      	movs	r1, #4
 800c292:	6860      	ldr	r0, [r4, #4]
 800c294:	f7ff ff82 	bl	800c19c <std>
 800c298:	68a0      	ldr	r0, [r4, #8]
 800c29a:	2201      	movs	r2, #1
 800c29c:	2109      	movs	r1, #9
 800c29e:	f7ff ff7d 	bl	800c19c <std>
 800c2a2:	68e0      	ldr	r0, [r4, #12]
 800c2a4:	2202      	movs	r2, #2
 800c2a6:	2112      	movs	r1, #18
 800c2a8:	f7ff ff78 	bl	800c19c <std>
 800c2ac:	2301      	movs	r3, #1
 800c2ae:	61a3      	str	r3, [r4, #24]
 800c2b0:	e7d2      	b.n	800c258 <__sinit+0xc>
 800c2b2:	bf00      	nop
 800c2b4:	0800ca98 	.word	0x0800ca98
 800c2b8:	0800c1e5 	.word	0x0800c1e5

0800c2bc <__sfp>:
 800c2bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c2be:	4607      	mov	r7, r0
 800c2c0:	f7ff ffac 	bl	800c21c <__sfp_lock_acquire>
 800c2c4:	4b1e      	ldr	r3, [pc, #120]	; (800c340 <__sfp+0x84>)
 800c2c6:	681e      	ldr	r6, [r3, #0]
 800c2c8:	69b3      	ldr	r3, [r6, #24]
 800c2ca:	b913      	cbnz	r3, 800c2d2 <__sfp+0x16>
 800c2cc:	4630      	mov	r0, r6
 800c2ce:	f7ff ffbd 	bl	800c24c <__sinit>
 800c2d2:	3648      	adds	r6, #72	; 0x48
 800c2d4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800c2d8:	3b01      	subs	r3, #1
 800c2da:	d503      	bpl.n	800c2e4 <__sfp+0x28>
 800c2dc:	6833      	ldr	r3, [r6, #0]
 800c2de:	b30b      	cbz	r3, 800c324 <__sfp+0x68>
 800c2e0:	6836      	ldr	r6, [r6, #0]
 800c2e2:	e7f7      	b.n	800c2d4 <__sfp+0x18>
 800c2e4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800c2e8:	b9d5      	cbnz	r5, 800c320 <__sfp+0x64>
 800c2ea:	4b16      	ldr	r3, [pc, #88]	; (800c344 <__sfp+0x88>)
 800c2ec:	60e3      	str	r3, [r4, #12]
 800c2ee:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800c2f2:	6665      	str	r5, [r4, #100]	; 0x64
 800c2f4:	f000 f847 	bl	800c386 <__retarget_lock_init_recursive>
 800c2f8:	f7ff ff96 	bl	800c228 <__sfp_lock_release>
 800c2fc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800c300:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800c304:	6025      	str	r5, [r4, #0]
 800c306:	61a5      	str	r5, [r4, #24]
 800c308:	2208      	movs	r2, #8
 800c30a:	4629      	mov	r1, r5
 800c30c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800c310:	f7fb fd22 	bl	8007d58 <memset>
 800c314:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800c318:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800c31c:	4620      	mov	r0, r4
 800c31e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c320:	3468      	adds	r4, #104	; 0x68
 800c322:	e7d9      	b.n	800c2d8 <__sfp+0x1c>
 800c324:	2104      	movs	r1, #4
 800c326:	4638      	mov	r0, r7
 800c328:	f7ff ff62 	bl	800c1f0 <__sfmoreglue>
 800c32c:	4604      	mov	r4, r0
 800c32e:	6030      	str	r0, [r6, #0]
 800c330:	2800      	cmp	r0, #0
 800c332:	d1d5      	bne.n	800c2e0 <__sfp+0x24>
 800c334:	f7ff ff78 	bl	800c228 <__sfp_lock_release>
 800c338:	230c      	movs	r3, #12
 800c33a:	603b      	str	r3, [r7, #0]
 800c33c:	e7ee      	b.n	800c31c <__sfp+0x60>
 800c33e:	bf00      	nop
 800c340:	0800ca98 	.word	0x0800ca98
 800c344:	ffff0001 	.word	0xffff0001

0800c348 <_fwalk_reent>:
 800c348:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c34c:	4606      	mov	r6, r0
 800c34e:	4688      	mov	r8, r1
 800c350:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800c354:	2700      	movs	r7, #0
 800c356:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800c35a:	f1b9 0901 	subs.w	r9, r9, #1
 800c35e:	d505      	bpl.n	800c36c <_fwalk_reent+0x24>
 800c360:	6824      	ldr	r4, [r4, #0]
 800c362:	2c00      	cmp	r4, #0
 800c364:	d1f7      	bne.n	800c356 <_fwalk_reent+0xe>
 800c366:	4638      	mov	r0, r7
 800c368:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c36c:	89ab      	ldrh	r3, [r5, #12]
 800c36e:	2b01      	cmp	r3, #1
 800c370:	d907      	bls.n	800c382 <_fwalk_reent+0x3a>
 800c372:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800c376:	3301      	adds	r3, #1
 800c378:	d003      	beq.n	800c382 <_fwalk_reent+0x3a>
 800c37a:	4629      	mov	r1, r5
 800c37c:	4630      	mov	r0, r6
 800c37e:	47c0      	blx	r8
 800c380:	4307      	orrs	r7, r0
 800c382:	3568      	adds	r5, #104	; 0x68
 800c384:	e7e9      	b.n	800c35a <_fwalk_reent+0x12>

0800c386 <__retarget_lock_init_recursive>:
 800c386:	4770      	bx	lr

0800c388 <__retarget_lock_acquire_recursive>:
 800c388:	4770      	bx	lr

0800c38a <__retarget_lock_release_recursive>:
 800c38a:	4770      	bx	lr

0800c38c <__swhatbuf_r>:
 800c38c:	b570      	push	{r4, r5, r6, lr}
 800c38e:	460e      	mov	r6, r1
 800c390:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c394:	2900      	cmp	r1, #0
 800c396:	b096      	sub	sp, #88	; 0x58
 800c398:	4614      	mov	r4, r2
 800c39a:	461d      	mov	r5, r3
 800c39c:	da08      	bge.n	800c3b0 <__swhatbuf_r+0x24>
 800c39e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800c3a2:	2200      	movs	r2, #0
 800c3a4:	602a      	str	r2, [r5, #0]
 800c3a6:	061a      	lsls	r2, r3, #24
 800c3a8:	d410      	bmi.n	800c3cc <__swhatbuf_r+0x40>
 800c3aa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c3ae:	e00e      	b.n	800c3ce <__swhatbuf_r+0x42>
 800c3b0:	466a      	mov	r2, sp
 800c3b2:	f000 f903 	bl	800c5bc <_fstat_r>
 800c3b6:	2800      	cmp	r0, #0
 800c3b8:	dbf1      	blt.n	800c39e <__swhatbuf_r+0x12>
 800c3ba:	9a01      	ldr	r2, [sp, #4]
 800c3bc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800c3c0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800c3c4:	425a      	negs	r2, r3
 800c3c6:	415a      	adcs	r2, r3
 800c3c8:	602a      	str	r2, [r5, #0]
 800c3ca:	e7ee      	b.n	800c3aa <__swhatbuf_r+0x1e>
 800c3cc:	2340      	movs	r3, #64	; 0x40
 800c3ce:	2000      	movs	r0, #0
 800c3d0:	6023      	str	r3, [r4, #0]
 800c3d2:	b016      	add	sp, #88	; 0x58
 800c3d4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800c3d8 <__smakebuf_r>:
 800c3d8:	898b      	ldrh	r3, [r1, #12]
 800c3da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c3dc:	079d      	lsls	r5, r3, #30
 800c3de:	4606      	mov	r6, r0
 800c3e0:	460c      	mov	r4, r1
 800c3e2:	d507      	bpl.n	800c3f4 <__smakebuf_r+0x1c>
 800c3e4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800c3e8:	6023      	str	r3, [r4, #0]
 800c3ea:	6123      	str	r3, [r4, #16]
 800c3ec:	2301      	movs	r3, #1
 800c3ee:	6163      	str	r3, [r4, #20]
 800c3f0:	b002      	add	sp, #8
 800c3f2:	bd70      	pop	{r4, r5, r6, pc}
 800c3f4:	ab01      	add	r3, sp, #4
 800c3f6:	466a      	mov	r2, sp
 800c3f8:	f7ff ffc8 	bl	800c38c <__swhatbuf_r>
 800c3fc:	9900      	ldr	r1, [sp, #0]
 800c3fe:	4605      	mov	r5, r0
 800c400:	4630      	mov	r0, r6
 800c402:	f7ff f957 	bl	800b6b4 <_malloc_r>
 800c406:	b948      	cbnz	r0, 800c41c <__smakebuf_r+0x44>
 800c408:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c40c:	059a      	lsls	r2, r3, #22
 800c40e:	d4ef      	bmi.n	800c3f0 <__smakebuf_r+0x18>
 800c410:	f023 0303 	bic.w	r3, r3, #3
 800c414:	f043 0302 	orr.w	r3, r3, #2
 800c418:	81a3      	strh	r3, [r4, #12]
 800c41a:	e7e3      	b.n	800c3e4 <__smakebuf_r+0xc>
 800c41c:	4b0d      	ldr	r3, [pc, #52]	; (800c454 <__smakebuf_r+0x7c>)
 800c41e:	62b3      	str	r3, [r6, #40]	; 0x28
 800c420:	89a3      	ldrh	r3, [r4, #12]
 800c422:	6020      	str	r0, [r4, #0]
 800c424:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c428:	81a3      	strh	r3, [r4, #12]
 800c42a:	9b00      	ldr	r3, [sp, #0]
 800c42c:	6163      	str	r3, [r4, #20]
 800c42e:	9b01      	ldr	r3, [sp, #4]
 800c430:	6120      	str	r0, [r4, #16]
 800c432:	b15b      	cbz	r3, 800c44c <__smakebuf_r+0x74>
 800c434:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c438:	4630      	mov	r0, r6
 800c43a:	f000 f8d1 	bl	800c5e0 <_isatty_r>
 800c43e:	b128      	cbz	r0, 800c44c <__smakebuf_r+0x74>
 800c440:	89a3      	ldrh	r3, [r4, #12]
 800c442:	f023 0303 	bic.w	r3, r3, #3
 800c446:	f043 0301 	orr.w	r3, r3, #1
 800c44a:	81a3      	strh	r3, [r4, #12]
 800c44c:	89a0      	ldrh	r0, [r4, #12]
 800c44e:	4305      	orrs	r5, r0
 800c450:	81a5      	strh	r5, [r4, #12]
 800c452:	e7cd      	b.n	800c3f0 <__smakebuf_r+0x18>
 800c454:	0800c1e5 	.word	0x0800c1e5

0800c458 <_malloc_usable_size_r>:
 800c458:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c45c:	1f18      	subs	r0, r3, #4
 800c45e:	2b00      	cmp	r3, #0
 800c460:	bfbc      	itt	lt
 800c462:	580b      	ldrlt	r3, [r1, r0]
 800c464:	18c0      	addlt	r0, r0, r3
 800c466:	4770      	bx	lr

0800c468 <_raise_r>:
 800c468:	291f      	cmp	r1, #31
 800c46a:	b538      	push	{r3, r4, r5, lr}
 800c46c:	4604      	mov	r4, r0
 800c46e:	460d      	mov	r5, r1
 800c470:	d904      	bls.n	800c47c <_raise_r+0x14>
 800c472:	2316      	movs	r3, #22
 800c474:	6003      	str	r3, [r0, #0]
 800c476:	f04f 30ff 	mov.w	r0, #4294967295
 800c47a:	bd38      	pop	{r3, r4, r5, pc}
 800c47c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800c47e:	b112      	cbz	r2, 800c486 <_raise_r+0x1e>
 800c480:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800c484:	b94b      	cbnz	r3, 800c49a <_raise_r+0x32>
 800c486:	4620      	mov	r0, r4
 800c488:	f000 f830 	bl	800c4ec <_getpid_r>
 800c48c:	462a      	mov	r2, r5
 800c48e:	4601      	mov	r1, r0
 800c490:	4620      	mov	r0, r4
 800c492:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c496:	f000 b817 	b.w	800c4c8 <_kill_r>
 800c49a:	2b01      	cmp	r3, #1
 800c49c:	d00a      	beq.n	800c4b4 <_raise_r+0x4c>
 800c49e:	1c59      	adds	r1, r3, #1
 800c4a0:	d103      	bne.n	800c4aa <_raise_r+0x42>
 800c4a2:	2316      	movs	r3, #22
 800c4a4:	6003      	str	r3, [r0, #0]
 800c4a6:	2001      	movs	r0, #1
 800c4a8:	e7e7      	b.n	800c47a <_raise_r+0x12>
 800c4aa:	2400      	movs	r4, #0
 800c4ac:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800c4b0:	4628      	mov	r0, r5
 800c4b2:	4798      	blx	r3
 800c4b4:	2000      	movs	r0, #0
 800c4b6:	e7e0      	b.n	800c47a <_raise_r+0x12>

0800c4b8 <raise>:
 800c4b8:	4b02      	ldr	r3, [pc, #8]	; (800c4c4 <raise+0xc>)
 800c4ba:	4601      	mov	r1, r0
 800c4bc:	6818      	ldr	r0, [r3, #0]
 800c4be:	f7ff bfd3 	b.w	800c468 <_raise_r>
 800c4c2:	bf00      	nop
 800c4c4:	20000018 	.word	0x20000018

0800c4c8 <_kill_r>:
 800c4c8:	b538      	push	{r3, r4, r5, lr}
 800c4ca:	4d07      	ldr	r5, [pc, #28]	; (800c4e8 <_kill_r+0x20>)
 800c4cc:	2300      	movs	r3, #0
 800c4ce:	4604      	mov	r4, r0
 800c4d0:	4608      	mov	r0, r1
 800c4d2:	4611      	mov	r1, r2
 800c4d4:	602b      	str	r3, [r5, #0]
 800c4d6:	f7f6 fb31 	bl	8002b3c <_kill>
 800c4da:	1c43      	adds	r3, r0, #1
 800c4dc:	d102      	bne.n	800c4e4 <_kill_r+0x1c>
 800c4de:	682b      	ldr	r3, [r5, #0]
 800c4e0:	b103      	cbz	r3, 800c4e4 <_kill_r+0x1c>
 800c4e2:	6023      	str	r3, [r4, #0]
 800c4e4:	bd38      	pop	{r3, r4, r5, pc}
 800c4e6:	bf00      	nop
 800c4e8:	20000448 	.word	0x20000448

0800c4ec <_getpid_r>:
 800c4ec:	f7f6 bb1e 	b.w	8002b2c <_getpid>

0800c4f0 <__sread>:
 800c4f0:	b510      	push	{r4, lr}
 800c4f2:	460c      	mov	r4, r1
 800c4f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c4f8:	f000 f894 	bl	800c624 <_read_r>
 800c4fc:	2800      	cmp	r0, #0
 800c4fe:	bfab      	itete	ge
 800c500:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800c502:	89a3      	ldrhlt	r3, [r4, #12]
 800c504:	181b      	addge	r3, r3, r0
 800c506:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800c50a:	bfac      	ite	ge
 800c50c:	6563      	strge	r3, [r4, #84]	; 0x54
 800c50e:	81a3      	strhlt	r3, [r4, #12]
 800c510:	bd10      	pop	{r4, pc}

0800c512 <__swrite>:
 800c512:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c516:	461f      	mov	r7, r3
 800c518:	898b      	ldrh	r3, [r1, #12]
 800c51a:	05db      	lsls	r3, r3, #23
 800c51c:	4605      	mov	r5, r0
 800c51e:	460c      	mov	r4, r1
 800c520:	4616      	mov	r6, r2
 800c522:	d505      	bpl.n	800c530 <__swrite+0x1e>
 800c524:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c528:	2302      	movs	r3, #2
 800c52a:	2200      	movs	r2, #0
 800c52c:	f000 f868 	bl	800c600 <_lseek_r>
 800c530:	89a3      	ldrh	r3, [r4, #12]
 800c532:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c536:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800c53a:	81a3      	strh	r3, [r4, #12]
 800c53c:	4632      	mov	r2, r6
 800c53e:	463b      	mov	r3, r7
 800c540:	4628      	mov	r0, r5
 800c542:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c546:	f000 b817 	b.w	800c578 <_write_r>

0800c54a <__sseek>:
 800c54a:	b510      	push	{r4, lr}
 800c54c:	460c      	mov	r4, r1
 800c54e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c552:	f000 f855 	bl	800c600 <_lseek_r>
 800c556:	1c43      	adds	r3, r0, #1
 800c558:	89a3      	ldrh	r3, [r4, #12]
 800c55a:	bf15      	itete	ne
 800c55c:	6560      	strne	r0, [r4, #84]	; 0x54
 800c55e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800c562:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800c566:	81a3      	strheq	r3, [r4, #12]
 800c568:	bf18      	it	ne
 800c56a:	81a3      	strhne	r3, [r4, #12]
 800c56c:	bd10      	pop	{r4, pc}

0800c56e <__sclose>:
 800c56e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c572:	f000 b813 	b.w	800c59c <_close_r>
	...

0800c578 <_write_r>:
 800c578:	b538      	push	{r3, r4, r5, lr}
 800c57a:	4d07      	ldr	r5, [pc, #28]	; (800c598 <_write_r+0x20>)
 800c57c:	4604      	mov	r4, r0
 800c57e:	4608      	mov	r0, r1
 800c580:	4611      	mov	r1, r2
 800c582:	2200      	movs	r2, #0
 800c584:	602a      	str	r2, [r5, #0]
 800c586:	461a      	mov	r2, r3
 800c588:	f7f6 fb0f 	bl	8002baa <_write>
 800c58c:	1c43      	adds	r3, r0, #1
 800c58e:	d102      	bne.n	800c596 <_write_r+0x1e>
 800c590:	682b      	ldr	r3, [r5, #0]
 800c592:	b103      	cbz	r3, 800c596 <_write_r+0x1e>
 800c594:	6023      	str	r3, [r4, #0]
 800c596:	bd38      	pop	{r3, r4, r5, pc}
 800c598:	20000448 	.word	0x20000448

0800c59c <_close_r>:
 800c59c:	b538      	push	{r3, r4, r5, lr}
 800c59e:	4d06      	ldr	r5, [pc, #24]	; (800c5b8 <_close_r+0x1c>)
 800c5a0:	2300      	movs	r3, #0
 800c5a2:	4604      	mov	r4, r0
 800c5a4:	4608      	mov	r0, r1
 800c5a6:	602b      	str	r3, [r5, #0]
 800c5a8:	f7f6 fb1b 	bl	8002be2 <_close>
 800c5ac:	1c43      	adds	r3, r0, #1
 800c5ae:	d102      	bne.n	800c5b6 <_close_r+0x1a>
 800c5b0:	682b      	ldr	r3, [r5, #0]
 800c5b2:	b103      	cbz	r3, 800c5b6 <_close_r+0x1a>
 800c5b4:	6023      	str	r3, [r4, #0]
 800c5b6:	bd38      	pop	{r3, r4, r5, pc}
 800c5b8:	20000448 	.word	0x20000448

0800c5bc <_fstat_r>:
 800c5bc:	b538      	push	{r3, r4, r5, lr}
 800c5be:	4d07      	ldr	r5, [pc, #28]	; (800c5dc <_fstat_r+0x20>)
 800c5c0:	2300      	movs	r3, #0
 800c5c2:	4604      	mov	r4, r0
 800c5c4:	4608      	mov	r0, r1
 800c5c6:	4611      	mov	r1, r2
 800c5c8:	602b      	str	r3, [r5, #0]
 800c5ca:	f7f6 fb16 	bl	8002bfa <_fstat>
 800c5ce:	1c43      	adds	r3, r0, #1
 800c5d0:	d102      	bne.n	800c5d8 <_fstat_r+0x1c>
 800c5d2:	682b      	ldr	r3, [r5, #0]
 800c5d4:	b103      	cbz	r3, 800c5d8 <_fstat_r+0x1c>
 800c5d6:	6023      	str	r3, [r4, #0]
 800c5d8:	bd38      	pop	{r3, r4, r5, pc}
 800c5da:	bf00      	nop
 800c5dc:	20000448 	.word	0x20000448

0800c5e0 <_isatty_r>:
 800c5e0:	b538      	push	{r3, r4, r5, lr}
 800c5e2:	4d06      	ldr	r5, [pc, #24]	; (800c5fc <_isatty_r+0x1c>)
 800c5e4:	2300      	movs	r3, #0
 800c5e6:	4604      	mov	r4, r0
 800c5e8:	4608      	mov	r0, r1
 800c5ea:	602b      	str	r3, [r5, #0]
 800c5ec:	f7f6 fb15 	bl	8002c1a <_isatty>
 800c5f0:	1c43      	adds	r3, r0, #1
 800c5f2:	d102      	bne.n	800c5fa <_isatty_r+0x1a>
 800c5f4:	682b      	ldr	r3, [r5, #0]
 800c5f6:	b103      	cbz	r3, 800c5fa <_isatty_r+0x1a>
 800c5f8:	6023      	str	r3, [r4, #0]
 800c5fa:	bd38      	pop	{r3, r4, r5, pc}
 800c5fc:	20000448 	.word	0x20000448

0800c600 <_lseek_r>:
 800c600:	b538      	push	{r3, r4, r5, lr}
 800c602:	4d07      	ldr	r5, [pc, #28]	; (800c620 <_lseek_r+0x20>)
 800c604:	4604      	mov	r4, r0
 800c606:	4608      	mov	r0, r1
 800c608:	4611      	mov	r1, r2
 800c60a:	2200      	movs	r2, #0
 800c60c:	602a      	str	r2, [r5, #0]
 800c60e:	461a      	mov	r2, r3
 800c610:	f7f6 fb0e 	bl	8002c30 <_lseek>
 800c614:	1c43      	adds	r3, r0, #1
 800c616:	d102      	bne.n	800c61e <_lseek_r+0x1e>
 800c618:	682b      	ldr	r3, [r5, #0]
 800c61a:	b103      	cbz	r3, 800c61e <_lseek_r+0x1e>
 800c61c:	6023      	str	r3, [r4, #0]
 800c61e:	bd38      	pop	{r3, r4, r5, pc}
 800c620:	20000448 	.word	0x20000448

0800c624 <_read_r>:
 800c624:	b538      	push	{r3, r4, r5, lr}
 800c626:	4d07      	ldr	r5, [pc, #28]	; (800c644 <_read_r+0x20>)
 800c628:	4604      	mov	r4, r0
 800c62a:	4608      	mov	r0, r1
 800c62c:	4611      	mov	r1, r2
 800c62e:	2200      	movs	r2, #0
 800c630:	602a      	str	r2, [r5, #0]
 800c632:	461a      	mov	r2, r3
 800c634:	f7f6 fa9c 	bl	8002b70 <_read>
 800c638:	1c43      	adds	r3, r0, #1
 800c63a:	d102      	bne.n	800c642 <_read_r+0x1e>
 800c63c:	682b      	ldr	r3, [r5, #0]
 800c63e:	b103      	cbz	r3, 800c642 <_read_r+0x1e>
 800c640:	6023      	str	r3, [r4, #0]
 800c642:	bd38      	pop	{r3, r4, r5, pc}
 800c644:	20000448 	.word	0x20000448

0800c648 <log>:
 800c648:	b538      	push	{r3, r4, r5, lr}
 800c64a:	ed2d 8b02 	vpush	{d8}
 800c64e:	ec55 4b10 	vmov	r4, r5, d0
 800c652:	f000 f839 	bl	800c6c8 <__ieee754_log>
 800c656:	4622      	mov	r2, r4
 800c658:	462b      	mov	r3, r5
 800c65a:	4620      	mov	r0, r4
 800c65c:	4629      	mov	r1, r5
 800c65e:	eeb0 8a40 	vmov.f32	s16, s0
 800c662:	eef0 8a60 	vmov.f32	s17, s1
 800c666:	f7f4 fa61 	bl	8000b2c <__aeabi_dcmpun>
 800c66a:	b998      	cbnz	r0, 800c694 <log+0x4c>
 800c66c:	2200      	movs	r2, #0
 800c66e:	2300      	movs	r3, #0
 800c670:	4620      	mov	r0, r4
 800c672:	4629      	mov	r1, r5
 800c674:	f7f4 fa50 	bl	8000b18 <__aeabi_dcmpgt>
 800c678:	b960      	cbnz	r0, 800c694 <log+0x4c>
 800c67a:	2200      	movs	r2, #0
 800c67c:	2300      	movs	r3, #0
 800c67e:	4620      	mov	r0, r4
 800c680:	4629      	mov	r1, r5
 800c682:	f7f4 fa21 	bl	8000ac8 <__aeabi_dcmpeq>
 800c686:	b160      	cbz	r0, 800c6a2 <log+0x5a>
 800c688:	f7fb fb3c 	bl	8007d04 <__errno>
 800c68c:	ed9f 8b0a 	vldr	d8, [pc, #40]	; 800c6b8 <log+0x70>
 800c690:	2322      	movs	r3, #34	; 0x22
 800c692:	6003      	str	r3, [r0, #0]
 800c694:	eeb0 0a48 	vmov.f32	s0, s16
 800c698:	eef0 0a68 	vmov.f32	s1, s17
 800c69c:	ecbd 8b02 	vpop	{d8}
 800c6a0:	bd38      	pop	{r3, r4, r5, pc}
 800c6a2:	f7fb fb2f 	bl	8007d04 <__errno>
 800c6a6:	ecbd 8b02 	vpop	{d8}
 800c6aa:	2321      	movs	r3, #33	; 0x21
 800c6ac:	6003      	str	r3, [r0, #0]
 800c6ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c6b2:	4803      	ldr	r0, [pc, #12]	; (800c6c0 <log+0x78>)
 800c6b4:	f7ff b9d0 	b.w	800ba58 <nan>
 800c6b8:	00000000 	.word	0x00000000
 800c6bc:	fff00000 	.word	0xfff00000
 800c6c0:	0800ced8 	.word	0x0800ced8
 800c6c4:	00000000 	.word	0x00000000

0800c6c8 <__ieee754_log>:
 800c6c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6cc:	ec51 0b10 	vmov	r0, r1, d0
 800c6d0:	ed2d 8b04 	vpush	{d8-d9}
 800c6d4:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800c6d8:	b083      	sub	sp, #12
 800c6da:	460d      	mov	r5, r1
 800c6dc:	da29      	bge.n	800c732 <__ieee754_log+0x6a>
 800c6de:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800c6e2:	4303      	orrs	r3, r0
 800c6e4:	ee10 2a10 	vmov	r2, s0
 800c6e8:	d10c      	bne.n	800c704 <__ieee754_log+0x3c>
 800c6ea:	49cf      	ldr	r1, [pc, #828]	; (800ca28 <__ieee754_log+0x360>)
 800c6ec:	2200      	movs	r2, #0
 800c6ee:	2300      	movs	r3, #0
 800c6f0:	2000      	movs	r0, #0
 800c6f2:	f7f4 f8ab 	bl	800084c <__aeabi_ddiv>
 800c6f6:	ec41 0b10 	vmov	d0, r0, r1
 800c6fa:	b003      	add	sp, #12
 800c6fc:	ecbd 8b04 	vpop	{d8-d9}
 800c700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c704:	2900      	cmp	r1, #0
 800c706:	da05      	bge.n	800c714 <__ieee754_log+0x4c>
 800c708:	460b      	mov	r3, r1
 800c70a:	f7f3 fdbd 	bl	8000288 <__aeabi_dsub>
 800c70e:	2200      	movs	r2, #0
 800c710:	2300      	movs	r3, #0
 800c712:	e7ee      	b.n	800c6f2 <__ieee754_log+0x2a>
 800c714:	4bc5      	ldr	r3, [pc, #788]	; (800ca2c <__ieee754_log+0x364>)
 800c716:	2200      	movs	r2, #0
 800c718:	f7f3 ff6e 	bl	80005f8 <__aeabi_dmul>
 800c71c:	f06f 0335 	mvn.w	r3, #53	; 0x35
 800c720:	460d      	mov	r5, r1
 800c722:	4ac3      	ldr	r2, [pc, #780]	; (800ca30 <__ieee754_log+0x368>)
 800c724:	4295      	cmp	r5, r2
 800c726:	dd06      	ble.n	800c736 <__ieee754_log+0x6e>
 800c728:	4602      	mov	r2, r0
 800c72a:	460b      	mov	r3, r1
 800c72c:	f7f3 fdae 	bl	800028c <__adddf3>
 800c730:	e7e1      	b.n	800c6f6 <__ieee754_log+0x2e>
 800c732:	2300      	movs	r3, #0
 800c734:	e7f5      	b.n	800c722 <__ieee754_log+0x5a>
 800c736:	152c      	asrs	r4, r5, #20
 800c738:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 800c73c:	f3c5 0513 	ubfx	r5, r5, #0, #20
 800c740:	441c      	add	r4, r3
 800c742:	f505 2315 	add.w	r3, r5, #610304	; 0x95000
 800c746:	f603 7364 	addw	r3, r3, #3940	; 0xf64
 800c74a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800c74e:	f083 527f 	eor.w	r2, r3, #1069547520	; 0x3fc00000
 800c752:	f482 1240 	eor.w	r2, r2, #3145728	; 0x300000
 800c756:	ea42 0105 	orr.w	r1, r2, r5
 800c75a:	eb04 5413 	add.w	r4, r4, r3, lsr #20
 800c75e:	2200      	movs	r2, #0
 800c760:	4bb4      	ldr	r3, [pc, #720]	; (800ca34 <__ieee754_log+0x36c>)
 800c762:	f7f3 fd91 	bl	8000288 <__aeabi_dsub>
 800c766:	1cab      	adds	r3, r5, #2
 800c768:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c76c:	2b02      	cmp	r3, #2
 800c76e:	4682      	mov	sl, r0
 800c770:	468b      	mov	fp, r1
 800c772:	f04f 0200 	mov.w	r2, #0
 800c776:	dc53      	bgt.n	800c820 <__ieee754_log+0x158>
 800c778:	2300      	movs	r3, #0
 800c77a:	f7f4 f9a5 	bl	8000ac8 <__aeabi_dcmpeq>
 800c77e:	b1d0      	cbz	r0, 800c7b6 <__ieee754_log+0xee>
 800c780:	2c00      	cmp	r4, #0
 800c782:	f000 8122 	beq.w	800c9ca <__ieee754_log+0x302>
 800c786:	4620      	mov	r0, r4
 800c788:	f7f3 fecc 	bl	8000524 <__aeabi_i2d>
 800c78c:	a390      	add	r3, pc, #576	; (adr r3, 800c9d0 <__ieee754_log+0x308>)
 800c78e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c792:	4606      	mov	r6, r0
 800c794:	460f      	mov	r7, r1
 800c796:	f7f3 ff2f 	bl	80005f8 <__aeabi_dmul>
 800c79a:	a38f      	add	r3, pc, #572	; (adr r3, 800c9d8 <__ieee754_log+0x310>)
 800c79c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c7a0:	4604      	mov	r4, r0
 800c7a2:	460d      	mov	r5, r1
 800c7a4:	4630      	mov	r0, r6
 800c7a6:	4639      	mov	r1, r7
 800c7a8:	f7f3 ff26 	bl	80005f8 <__aeabi_dmul>
 800c7ac:	4602      	mov	r2, r0
 800c7ae:	460b      	mov	r3, r1
 800c7b0:	4620      	mov	r0, r4
 800c7b2:	4629      	mov	r1, r5
 800c7b4:	e7ba      	b.n	800c72c <__ieee754_log+0x64>
 800c7b6:	a38a      	add	r3, pc, #552	; (adr r3, 800c9e0 <__ieee754_log+0x318>)
 800c7b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c7bc:	4650      	mov	r0, sl
 800c7be:	4659      	mov	r1, fp
 800c7c0:	f7f3 ff1a 	bl	80005f8 <__aeabi_dmul>
 800c7c4:	4602      	mov	r2, r0
 800c7c6:	460b      	mov	r3, r1
 800c7c8:	2000      	movs	r0, #0
 800c7ca:	499b      	ldr	r1, [pc, #620]	; (800ca38 <__ieee754_log+0x370>)
 800c7cc:	f7f3 fd5c 	bl	8000288 <__aeabi_dsub>
 800c7d0:	4652      	mov	r2, sl
 800c7d2:	4606      	mov	r6, r0
 800c7d4:	460f      	mov	r7, r1
 800c7d6:	465b      	mov	r3, fp
 800c7d8:	4650      	mov	r0, sl
 800c7da:	4659      	mov	r1, fp
 800c7dc:	f7f3 ff0c 	bl	80005f8 <__aeabi_dmul>
 800c7e0:	4602      	mov	r2, r0
 800c7e2:	460b      	mov	r3, r1
 800c7e4:	4630      	mov	r0, r6
 800c7e6:	4639      	mov	r1, r7
 800c7e8:	f7f3 ff06 	bl	80005f8 <__aeabi_dmul>
 800c7ec:	4606      	mov	r6, r0
 800c7ee:	460f      	mov	r7, r1
 800c7f0:	b914      	cbnz	r4, 800c7f8 <__ieee754_log+0x130>
 800c7f2:	4632      	mov	r2, r6
 800c7f4:	463b      	mov	r3, r7
 800c7f6:	e0a2      	b.n	800c93e <__ieee754_log+0x276>
 800c7f8:	4620      	mov	r0, r4
 800c7fa:	f7f3 fe93 	bl	8000524 <__aeabi_i2d>
 800c7fe:	a374      	add	r3, pc, #464	; (adr r3, 800c9d0 <__ieee754_log+0x308>)
 800c800:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c804:	4680      	mov	r8, r0
 800c806:	4689      	mov	r9, r1
 800c808:	f7f3 fef6 	bl	80005f8 <__aeabi_dmul>
 800c80c:	a372      	add	r3, pc, #456	; (adr r3, 800c9d8 <__ieee754_log+0x310>)
 800c80e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c812:	4604      	mov	r4, r0
 800c814:	460d      	mov	r5, r1
 800c816:	4640      	mov	r0, r8
 800c818:	4649      	mov	r1, r9
 800c81a:	f7f3 feed 	bl	80005f8 <__aeabi_dmul>
 800c81e:	e0a7      	b.n	800c970 <__ieee754_log+0x2a8>
 800c820:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800c824:	f7f3 fd32 	bl	800028c <__adddf3>
 800c828:	4602      	mov	r2, r0
 800c82a:	460b      	mov	r3, r1
 800c82c:	4650      	mov	r0, sl
 800c82e:	4659      	mov	r1, fp
 800c830:	f7f4 f80c 	bl	800084c <__aeabi_ddiv>
 800c834:	ec41 0b18 	vmov	d8, r0, r1
 800c838:	4620      	mov	r0, r4
 800c83a:	f7f3 fe73 	bl	8000524 <__aeabi_i2d>
 800c83e:	ec53 2b18 	vmov	r2, r3, d8
 800c842:	ec41 0b19 	vmov	d9, r0, r1
 800c846:	ec51 0b18 	vmov	r0, r1, d8
 800c84a:	f7f3 fed5 	bl	80005f8 <__aeabi_dmul>
 800c84e:	f5a5 23c2 	sub.w	r3, r5, #397312	; 0x61000
 800c852:	f2a3 437a 	subw	r3, r3, #1146	; 0x47a
 800c856:	9301      	str	r3, [sp, #4]
 800c858:	4602      	mov	r2, r0
 800c85a:	460b      	mov	r3, r1
 800c85c:	4680      	mov	r8, r0
 800c85e:	4689      	mov	r9, r1
 800c860:	f7f3 feca 	bl	80005f8 <__aeabi_dmul>
 800c864:	a360      	add	r3, pc, #384	; (adr r3, 800c9e8 <__ieee754_log+0x320>)
 800c866:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c86a:	4606      	mov	r6, r0
 800c86c:	460f      	mov	r7, r1
 800c86e:	f7f3 fec3 	bl	80005f8 <__aeabi_dmul>
 800c872:	a35f      	add	r3, pc, #380	; (adr r3, 800c9f0 <__ieee754_log+0x328>)
 800c874:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c878:	f7f3 fd08 	bl	800028c <__adddf3>
 800c87c:	4632      	mov	r2, r6
 800c87e:	463b      	mov	r3, r7
 800c880:	f7f3 feba 	bl	80005f8 <__aeabi_dmul>
 800c884:	a35c      	add	r3, pc, #368	; (adr r3, 800c9f8 <__ieee754_log+0x330>)
 800c886:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c88a:	f7f3 fcff 	bl	800028c <__adddf3>
 800c88e:	4632      	mov	r2, r6
 800c890:	463b      	mov	r3, r7
 800c892:	f7f3 feb1 	bl	80005f8 <__aeabi_dmul>
 800c896:	a35a      	add	r3, pc, #360	; (adr r3, 800ca00 <__ieee754_log+0x338>)
 800c898:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c89c:	f7f3 fcf6 	bl	800028c <__adddf3>
 800c8a0:	4642      	mov	r2, r8
 800c8a2:	464b      	mov	r3, r9
 800c8a4:	f7f3 fea8 	bl	80005f8 <__aeabi_dmul>
 800c8a8:	a357      	add	r3, pc, #348	; (adr r3, 800ca08 <__ieee754_log+0x340>)
 800c8aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c8ae:	4680      	mov	r8, r0
 800c8b0:	4689      	mov	r9, r1
 800c8b2:	4630      	mov	r0, r6
 800c8b4:	4639      	mov	r1, r7
 800c8b6:	f7f3 fe9f 	bl	80005f8 <__aeabi_dmul>
 800c8ba:	a355      	add	r3, pc, #340	; (adr r3, 800ca10 <__ieee754_log+0x348>)
 800c8bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c8c0:	f7f3 fce4 	bl	800028c <__adddf3>
 800c8c4:	4632      	mov	r2, r6
 800c8c6:	463b      	mov	r3, r7
 800c8c8:	f7f3 fe96 	bl	80005f8 <__aeabi_dmul>
 800c8cc:	a352      	add	r3, pc, #328	; (adr r3, 800ca18 <__ieee754_log+0x350>)
 800c8ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c8d2:	f7f3 fcdb 	bl	800028c <__adddf3>
 800c8d6:	4632      	mov	r2, r6
 800c8d8:	463b      	mov	r3, r7
 800c8da:	f7f3 fe8d 	bl	80005f8 <__aeabi_dmul>
 800c8de:	460b      	mov	r3, r1
 800c8e0:	4602      	mov	r2, r0
 800c8e2:	4649      	mov	r1, r9
 800c8e4:	4640      	mov	r0, r8
 800c8e6:	f7f3 fcd1 	bl	800028c <__adddf3>
 800c8ea:	f5c5 25d7 	rsb	r5, r5, #440320	; 0x6b800
 800c8ee:	9b01      	ldr	r3, [sp, #4]
 800c8f0:	3551      	adds	r5, #81	; 0x51
 800c8f2:	431d      	orrs	r5, r3
 800c8f4:	2d00      	cmp	r5, #0
 800c8f6:	4680      	mov	r8, r0
 800c8f8:	4689      	mov	r9, r1
 800c8fa:	dd48      	ble.n	800c98e <__ieee754_log+0x2c6>
 800c8fc:	4b4e      	ldr	r3, [pc, #312]	; (800ca38 <__ieee754_log+0x370>)
 800c8fe:	2200      	movs	r2, #0
 800c900:	4650      	mov	r0, sl
 800c902:	4659      	mov	r1, fp
 800c904:	f7f3 fe78 	bl	80005f8 <__aeabi_dmul>
 800c908:	4652      	mov	r2, sl
 800c90a:	465b      	mov	r3, fp
 800c90c:	f7f3 fe74 	bl	80005f8 <__aeabi_dmul>
 800c910:	4602      	mov	r2, r0
 800c912:	460b      	mov	r3, r1
 800c914:	4606      	mov	r6, r0
 800c916:	460f      	mov	r7, r1
 800c918:	4640      	mov	r0, r8
 800c91a:	4649      	mov	r1, r9
 800c91c:	f7f3 fcb6 	bl	800028c <__adddf3>
 800c920:	ec53 2b18 	vmov	r2, r3, d8
 800c924:	f7f3 fe68 	bl	80005f8 <__aeabi_dmul>
 800c928:	4680      	mov	r8, r0
 800c92a:	4689      	mov	r9, r1
 800c92c:	b964      	cbnz	r4, 800c948 <__ieee754_log+0x280>
 800c92e:	4602      	mov	r2, r0
 800c930:	460b      	mov	r3, r1
 800c932:	4630      	mov	r0, r6
 800c934:	4639      	mov	r1, r7
 800c936:	f7f3 fca7 	bl	8000288 <__aeabi_dsub>
 800c93a:	4602      	mov	r2, r0
 800c93c:	460b      	mov	r3, r1
 800c93e:	4650      	mov	r0, sl
 800c940:	4659      	mov	r1, fp
 800c942:	f7f3 fca1 	bl	8000288 <__aeabi_dsub>
 800c946:	e6d6      	b.n	800c6f6 <__ieee754_log+0x2e>
 800c948:	a321      	add	r3, pc, #132	; (adr r3, 800c9d0 <__ieee754_log+0x308>)
 800c94a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c94e:	ec51 0b19 	vmov	r0, r1, d9
 800c952:	f7f3 fe51 	bl	80005f8 <__aeabi_dmul>
 800c956:	a320      	add	r3, pc, #128	; (adr r3, 800c9d8 <__ieee754_log+0x310>)
 800c958:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c95c:	4604      	mov	r4, r0
 800c95e:	460d      	mov	r5, r1
 800c960:	ec51 0b19 	vmov	r0, r1, d9
 800c964:	f7f3 fe48 	bl	80005f8 <__aeabi_dmul>
 800c968:	4642      	mov	r2, r8
 800c96a:	464b      	mov	r3, r9
 800c96c:	f7f3 fc8e 	bl	800028c <__adddf3>
 800c970:	4602      	mov	r2, r0
 800c972:	460b      	mov	r3, r1
 800c974:	4630      	mov	r0, r6
 800c976:	4639      	mov	r1, r7
 800c978:	f7f3 fc86 	bl	8000288 <__aeabi_dsub>
 800c97c:	4652      	mov	r2, sl
 800c97e:	465b      	mov	r3, fp
 800c980:	f7f3 fc82 	bl	8000288 <__aeabi_dsub>
 800c984:	4602      	mov	r2, r0
 800c986:	460b      	mov	r3, r1
 800c988:	4620      	mov	r0, r4
 800c98a:	4629      	mov	r1, r5
 800c98c:	e7d9      	b.n	800c942 <__ieee754_log+0x27a>
 800c98e:	4602      	mov	r2, r0
 800c990:	460b      	mov	r3, r1
 800c992:	4650      	mov	r0, sl
 800c994:	4659      	mov	r1, fp
 800c996:	f7f3 fc77 	bl	8000288 <__aeabi_dsub>
 800c99a:	ec53 2b18 	vmov	r2, r3, d8
 800c99e:	f7f3 fe2b 	bl	80005f8 <__aeabi_dmul>
 800c9a2:	4606      	mov	r6, r0
 800c9a4:	460f      	mov	r7, r1
 800c9a6:	2c00      	cmp	r4, #0
 800c9a8:	f43f af23 	beq.w	800c7f2 <__ieee754_log+0x12a>
 800c9ac:	a308      	add	r3, pc, #32	; (adr r3, 800c9d0 <__ieee754_log+0x308>)
 800c9ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c9b2:	ec51 0b19 	vmov	r0, r1, d9
 800c9b6:	f7f3 fe1f 	bl	80005f8 <__aeabi_dmul>
 800c9ba:	a307      	add	r3, pc, #28	; (adr r3, 800c9d8 <__ieee754_log+0x310>)
 800c9bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c9c0:	4604      	mov	r4, r0
 800c9c2:	460d      	mov	r5, r1
 800c9c4:	ec51 0b19 	vmov	r0, r1, d9
 800c9c8:	e727      	b.n	800c81a <__ieee754_log+0x152>
 800c9ca:	ed9f 0b15 	vldr	d0, [pc, #84]	; 800ca20 <__ieee754_log+0x358>
 800c9ce:	e694      	b.n	800c6fa <__ieee754_log+0x32>
 800c9d0:	fee00000 	.word	0xfee00000
 800c9d4:	3fe62e42 	.word	0x3fe62e42
 800c9d8:	35793c76 	.word	0x35793c76
 800c9dc:	3dea39ef 	.word	0x3dea39ef
 800c9e0:	55555555 	.word	0x55555555
 800c9e4:	3fd55555 	.word	0x3fd55555
 800c9e8:	df3e5244 	.word	0xdf3e5244
 800c9ec:	3fc2f112 	.word	0x3fc2f112
 800c9f0:	96cb03de 	.word	0x96cb03de
 800c9f4:	3fc74664 	.word	0x3fc74664
 800c9f8:	94229359 	.word	0x94229359
 800c9fc:	3fd24924 	.word	0x3fd24924
 800ca00:	55555593 	.word	0x55555593
 800ca04:	3fe55555 	.word	0x3fe55555
 800ca08:	d078c69f 	.word	0xd078c69f
 800ca0c:	3fc39a09 	.word	0x3fc39a09
 800ca10:	1d8e78af 	.word	0x1d8e78af
 800ca14:	3fcc71c5 	.word	0x3fcc71c5
 800ca18:	9997fa04 	.word	0x9997fa04
 800ca1c:	3fd99999 	.word	0x3fd99999
	...
 800ca28:	c3500000 	.word	0xc3500000
 800ca2c:	43500000 	.word	0x43500000
 800ca30:	7fefffff 	.word	0x7fefffff
 800ca34:	3ff00000 	.word	0x3ff00000
 800ca38:	3fe00000 	.word	0x3fe00000

0800ca3c <_init>:
 800ca3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca3e:	bf00      	nop
 800ca40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ca42:	bc08      	pop	{r3}
 800ca44:	469e      	mov	lr, r3
 800ca46:	4770      	bx	lr

0800ca48 <_fini>:
 800ca48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca4a:	bf00      	nop
 800ca4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ca4e:	bc08      	pop	{r3}
 800ca50:	469e      	mov	lr, r3
 800ca52:	4770      	bx	lr
